

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May  7 17:21:22 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.41
    41                           ; Generated 25/01/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4585 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _PORTBbits	set	3969
    75  0000                     _PORTCbits	set	3970
    76  0000                     _LATEbits	set	3981
    77  0000                     _LATCbits	set	3979
    78  0000                     _CCP1CON	set	4029
    79  0000                     _T2CON	set	4042
    80  0000                     _CCPR1L	set	4030
    81  0000                     _PR2	set	4043
    82  0000                     _EECON2	set	4007
    83  0000                     _EEDATA	set	4008
    84  0000                     _EECON1bits	set	4006
    85  0000                     _EEADR	set	4009
    86  0000                     _PORTDbits	set	3971
    87  0000                     _PORTEbits	set	3972
    88  0000                     _PORTAbits	set	3968
    89  0000                     _TRISE	set	3990
    90  0000                     _TRISD	set	3989
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISB	set	3987
    93  0000                     _TRISA	set	3986
    94  0000                     _LATE	set	3981
    95  0000                     _LATD	set	3980
    96  0000                     _LATC	set	3979
    97  0000                     _LATB	set	3978
    98  0000                     _LATA	set	3977
    99  0000                     _PORTE	set	3972
   100  0000                     _PORTD	set	3971
   101  0000                     _PORTC	set	3970
   102  0000                     _PORTB	set	3969
   103  0000                     _PORTA	set	3968
   104  0000                     _INTCON3bits	set	4080
   105  0000                     _INTCONbits	set	4082
   106  0000                     _RCONbits	set	4048
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _ADCON1	set	4033
   109  0000                     _CVRCONbits	set	4021
   110  0000                     _CMCON	set	4020
   111  0000                     _OSCCON	set	4051
   112                           
   113                           	psect	smallconst
   114  000D00                     __psmallconst:
   115                           	opt stack 0
   116  000D00  00                 	db	0
   117  000D01                     STR_14:
   118  000D01  55                 	db	85	;'U'
   119  000D02  20                 	db	32
   120  000D03  50                 	db	80	;'P'
   121  000D04  72                 	db	114	;'r'
   122  000D05  65                 	db	101	;'e'
   123  000D06  66                 	db	102	;'f'
   124  000D07  65                 	db	101	;'e'
   125  000D08  72                 	db	114	;'r'
   126  000D09  20                 	db	32
   127  000D0A  41                 	db	65	;'A'
   128  000D0B  20                 	db	32
   129  000D0C  42                 	db	66	;'B'
   130  000D0D  20                 	db	32
   131  000D0E  43                 	db	67	;'C'
   132  000D0F  20                 	db	32
   133  000D10  44                 	db	68	;'D'
   134  000D11  00                 	db	0
   135  000D12                     STR_15:
   136  000D12  49                 	db	73	;'I'
   137  000D13  6E                 	db	110	;'n'
   138  000D14  74                 	db	116	;'t'
   139  000D15  72                 	db	114	;'r'
   140  000D16  6F                 	db	111	;'o'
   141  000D17  64                 	db	100	;'d'
   142  000D18  75                 	db	117	;'u'
   143  000D19  63                 	db	99	;'c'
   144  000D1A  65                 	db	101	;'e'
   145  000D1B  20                 	db	32
   146  000D1C  50                 	db	80	;'P'
   147  000D1D  73                 	db	115	;'s'
   148  000D1E  73                 	db	115	;'s'
   149  000D1F  77                 	db	119	;'w'
   150  000D20  64                 	db	100	;'d'
   151  000D21  00                 	db	0
   152  000D22                     STR_13:
   153  000D22  57                 	db	87	;'W'
   154  000D23  68                 	db	104	;'h'
   155  000D24  69                 	db	105	;'i'
   156  000D25  63                 	db	99	;'c'
   157  000D26  68                 	db	104	;'h'
   158  000D27  20                 	db	32
   159  000D28  6C                 	db	108	;'l'
   160  000D29  65                 	db	101	;'e'
   161  000D2A  74                 	db	116	;'t'
   162  000D2B  74                 	db	116	;'t'
   163  000D2C  65                 	db	101	;'e'
   164  000D2D  72                 	db	114	;'r'
   165  000D2E  20                 	db	32
   166  000D2F  64                 	db	100	;'d'
   167  000D30  6F                 	db	111	;'o'
   168  000D31  00                 	db	0
   169  000D32                     STR_7:
   170  000D32  2D                 	db	45
   171  000D33  44                 	db	68	;'D'
   172  000D34  6F                 	db	111	;'o'
   173  000D35  6F                 	db	111	;'o'
   174  000D36  72                 	db	114	;'r'
   175  000D37  20                 	db	32
   176  000D38  55                 	db	85	;'U'
   177  000D39  6E                 	db	110	;'n'
   178  000D3A  6C                 	db	108	;'l'
   179  000D3B  6F                 	db	111	;'o'
   180  000D3C  63                 	db	99	;'c'
   181  000D3D  6B                 	db	107	;'k'
   182  000D3E  65                 	db	101	;'e'
   183  000D3F  64                 	db	100	;'d'
   184  000D40  2D                 	db	45
   185  000D41  00                 	db	0
   186  000D42                     STR_6:
   187  000D42  31                 	db	49	;'1'
   188  000D43  2E                 	db	46
   189  000D44  55                 	db	85	;'U'
   190  000D45  6E                 	db	110	;'n'
   191  000D46  6C                 	db	108	;'l'
   192  000D47  6F                 	db	111	;'o'
   193  000D48  63                 	db	99	;'c'
   194  000D49  6B                 	db	107	;'k'
   195  000D4A  20                 	db	32
   196  000D4B  32                 	db	50	;'2'
   197  000D4C  2E                 	db	46
   198  000D4D  4C                 	db	76	;'L'
   199  000D4E  6F                 	db	111	;'o'
   200  000D4F  63                 	db	99	;'c'
   201  000D50  6B                 	db	107	;'k'
   202  000D51  00                 	db	0
   203  000D52                     STR_5:
   204  000D52  31                 	db	49	;'1'
   205  000D53  2E                 	db	46
   206  000D54  44                 	db	68	;'D'
   207  000D55  6F                 	db	111	;'o'
   208  000D56  6F                 	db	111	;'o'
   209  000D57  72                 	db	114	;'r'
   210  000D58  20                 	db	32
   211  000D59  32                 	db	50	;'2'
   212  000D5A  2E                 	db	46
   213  000D5B  4C                 	db	76	;'L'
   214  000D5C  6F                 	db	111	;'o'
   215  000D5D  67                 	db	103	;'g'
   216  000D5E  4F                 	db	79	;'O'
   217  000D5F  75                 	db	117	;'u'
   218  000D60  74                 	db	116	;'t'
   219  000D61  00                 	db	0
   220  000D62                     STR_2:
   221  000D62  57                 	db	87	;'W'
   222  000D63  72                 	db	114	;'r'
   223  000D64  6F                 	db	111	;'o'
   224  000D65  6E                 	db	110	;'n'
   225  000D66  67                 	db	103	;'g'
   226  000D67  20                 	db	32
   227  000D68  50                 	db	80	;'P'
   228  000D69  61                 	db	97	;'a'
   229  000D6A  73                 	db	115	;'s'
   230  000D6B  73                 	db	115	;'s'
   231  000D6C  77                 	db	119	;'w'
   232  000D6D  6F                 	db	111	;'o'
   233  000D6E  72                 	db	114	;'r'
   234  000D6F  64                 	db	100	;'d'
   235  000D70  00                 	db	0
   236  000D71                     STR_1:
   237  000D71  45                 	db	69	;'E'
   238  000D72  6E                 	db	110	;'n'
   239  000D73  74                 	db	116	;'t'
   240  000D74  65                 	db	101	;'e'
   241  000D75  72                 	db	114	;'r'
   242  000D76  20                 	db	32
   243  000D77  50                 	db	80	;'P'
   244  000D78  61                 	db	97	;'a'
   245  000D79  73                 	db	115	;'s'
   246  000D7A  73                 	db	115	;'s'
   247  000D7B  77                 	db	119	;'w'
   248  000D7C  6F                 	db	111	;'o'
   249  000D7D  72                 	db	114	;'r'
   250  000D7E  64                 	db	100	;'d'
   251  000D7F  00                 	db	0
   252  000D80                     STR_16:
   253  000D80  4F                 	db	79	;'O'
   254  000D81  6E                 	db	110	;'n'
   255  000D82  6C                 	db	108	;'l'
   256  000D83  79                 	db	121	;'y'
   257  000D84  20                 	db	32
   258  000D85  74                 	db	116	;'t'
   259  000D86  77                 	db	119	;'w'
   260  000D87  6F                 	db	111	;'o'
   261  000D88  20                 	db	32
   262  000D89  6B                 	db	107	;'k'
   263  000D8A  65                 	db	101	;'e'
   264  000D8B  79                 	db	121	;'y'
   265  000D8C  73                 	db	115	;'s'
   266  000D8D  00                 	db	0
   267  000D8E                     STR_9:
   268  000D8E  2D                 	db	45
   269  000D8F  44                 	db	68	;'D'
   270  000D90  6F                 	db	111	;'o'
   271  000D91  6F                 	db	111	;'o'
   272  000D92  72                 	db	114	;'r'
   273  000D93  20                 	db	32
   274  000D94  4C                 	db	76	;'L'
   275  000D95  6F                 	db	111	;'o'
   276  000D96  63                 	db	99	;'c'
   277  000D97  6B                 	db	107	;'k'
   278  000D98  65                 	db	101	;'e'
   279  000D99  64                 	db	100	;'d'
   280  000D9A  2D                 	db	45
   281  000D9B  00                 	db	0
   282  000D9C                     STR_4:
   283  000D9C  57                 	db	87	;'W'
   284  000D9D  65                 	db	101	;'e'
   285  000D9E  6C                 	db	108	;'l'
   286  000D9F  63                 	db	99	;'c'
   287  000DA0  6F                 	db	111	;'o'
   288  000DA1  6D                 	db	109	;'m'
   289  000DA2  65                 	db	101	;'e'
   290  000DA3  20                 	db	32
   291  000DA4  55                 	db	85	;'U'
   292  000DA5  73                 	db	115	;'s'
   293  000DA6  65                 	db	101	;'e'
   294  000DA7  72                 	db	114	;'r'
   295  000DA8  20                 	db	32
   296  000DA9  00                 	db	0
   297  000DAA                     STR_3:
   298  000DAA  41                 	db	65	;'A'
   299  000DAB  6C                 	db	108	;'l'
   300  000DAC  61                 	db	97	;'a'
   301  000DAD  72                 	db	114	;'r'
   302  000DAE  6D                 	db	109	;'m'
   303  000DAF  20                 	db	32
   304  000DB0  44                 	db	68	;'D'
   305  000DB1  65                 	db	101	;'e'
   306  000DB2  61                 	db	97	;'a'
   307  000DB3  63                 	db	99	;'c'
   308  000DB4  74                 	db	116	;'t'
   309  000DB5  69                 	db	105	;'i'
   310  000DB6  76                 	db	118	;'v'
   311  000DB7  00                 	db	0
   312  000DB8                     STR_12:
   313  000DB8  41                 	db	65	;'A'
   314  000DB9  6C                 	db	108	;'l'
   315  000DBA  61                 	db	97	;'a'
   316  000DBB  72                 	db	114	;'r'
   317  000DBC  6D                 	db	109	;'m'
   318  000DBD  20                 	db	32
   319  000DBE  41                 	db	65	;'A'
   320  000DBF  63                 	db	99	;'c'
   321  000DC0  74                 	db	116	;'t'
   322  000DC1  69                 	db	105	;'i'
   323  000DC2  76                 	db	118	;'v'
   324  000DC3  65                 	db	101	;'e'
   325  000DC4  00                 	db	0
   326  000DC5                     STR_8:
   327  000DC5  41                 	db	65	;'A'
   328  000DC6  20                 	db	32
   329  000DC7  74                 	db	116	;'t'
   330  000DC8  6F                 	db	111	;'o'
   331  000DC9  20                 	db	32
   332  000DCA  47                 	db	71	;'G'
   333  000DCB  6F                 	db	111	;'o'
   334  000DCC  42                 	db	66	;'B'
   335  000DCD  61                 	db	97	;'a'
   336  000DCE  63                 	db	99	;'c'
   337  000DCF  6B                 	db	107	;'k'
   338  000DD0  00                 	db	0
   339  000DD1                     STR_11:
   340  000DD1  42                 	db	66	;'B'
   341  000DD2  79                 	db	121	;'y'
   342  000DD3  65                 	db	101	;'e'
   343  000DD4  20                 	db	32
   344  000DD5  75                 	db	117	;'u'
   345  000DD6  73                 	db	115	;'s'
   346  000DD7  65                 	db	101	;'e'
   347  000DD8  72                 	db	114	;'r'
   348  000DD9  20                 	db	32
   349  000DDA  00                 	db	0
   350  0000                     
   351                           ; #config settings
   352  000DDB  00                 	db	0	; dummy byte at the end
   353  0000                     
   354                           	psect	cinit
   355  0013B4                     __pcinit:
   356                           	opt stack 0
   357  0013B4                     start_initialization:
   358                           	opt stack 0
   359  0013B4                     __initialization:
   360                           	opt stack 0
   361                           
   362                           ; Clear objects allocated to COMRAM (1 bytes)
   363  0013B4  6A2C               	clrf	__pbssCOMRAM& (0+255),c
   364  0013B6                     end_of_initialization:
   365                           	opt stack 0
   366  0013B6                     __end_of__initialization:
   367                           	opt stack 0
   368  0013B6  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   369  0013B8  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   370  0013BA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   371  0013BC  6EF8               	movwf	tblptru,c
   372  0013BE  0E0D               	movlw	high __Lsmallconst
   373  0013C0  6EF7               	movwf	tblptrh,c
   374  0013C2  0100               	movlb	0
   375  0013C4  EFEE  F006         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           
   379                           	psect	bssCOMRAM
   380  00002C                     __pbssCOMRAM:
   381                           	opt stack 0
   382  00002C                     _flag:
   383                           	opt stack 0
   384  00002C                     	ds	1
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt stack 0
   391  000001                     ??_backup:
   392  000001                     
   393                           ; 1 bytes @ 0x0
   394  000001                     	ds	16
   395  000011                     ??_luz:
   396                           
   397                           ; 1 bytes @ 0x10
   398  000011                     	ds	19
   399  000024                     ??_getKey:
   400  000024                     command_LCD@x:
   401                           	opt stack 0
   402  000024                     display_LCD@data:
   403                           	opt stack 0
   404  000024                     eeprom_r@address:
   405                           	opt stack 0
   406  000024                     eeprom_w@value:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x23
   410  000024                     	ds	1
   411  000025                     ??_setup_LCD:
   412  000025                     eeprom_w@address:
   413                           	opt stack 0
   414  000025                     readPassword@address:
   415                           	opt stack 0
   416  000025                     obtainedKey@key_presionada:
   417                           	opt stack 0
   418  000025                     display_string_LCD@data:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x24
   422  000025                     	ds	1
   423  000026                     readPassword@value:
   424                           	opt stack 0
   425  000026                     writePassword@address:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x25
   429  000026                     	ds	1
   430  000027                     ??_menu:
   431  000027                     writePassword@value:
   432                           	opt stack 0
   433  000027                     checkPassword@pass:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x26
   437  000027                     	ds	1
   438  000028                     checkPassword@i:
   439                           	opt stack 0
   440  000028                     profile@i:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x27
   444  000028                     	ds	2
   445  00002A                     ??_main:
   446                           
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	2
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           
   452 ;;
   453 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   454 ;;
   455 ;; *************** function _main *****************
   456 ;; Defined at:
   457 ;;		line 31 in file "mainCode.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  key             1    0        unsigned char 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   475 ;;Total ram usage:        2 bytes
   476 ;; Hardware stack levels required when called:    5
   477 ;; This function calls:
   478 ;;		_alarm
   479 ;;		_checkPassword
   480 ;;		_clear_LCD
   481 ;;		_display_LCD
   482 ;;		_display_string_LCD
   483 ;;		_menu
   484 ;;		_profile
   485 ;;		_pwmInit
   486 ;;		_readPassword
   487 ;;		_ready_LCD
   488 ;;		_second_line_LCD
   489 ;;		_setup_LCD
   490 ;;		_welcome
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text0
   497  000DDC                     __ptext0:
   498                           	opt stack 0
   499  000DDC                     _main:
   500                           	opt stack 26
   501                           
   502                           ;mainCode.c: 32: OSCCON = 0x70;
   503                           
   504                           ;incstack = 0
   505  000DDC  0E70               	movlw	112
   506  000DDE  6ED3               	movwf	4051,c	;volatile
   507                           
   508                           ;mainCode.c: 33: CMCON = 0xFF;
   509  000DE0  68B4               	setf	4020,c	;volatile
   510                           
   511                           ;mainCode.c: 34: CVRCONbits.CVREN = 0;
   512  000DE2  9EB5               	bcf	4021,7,c	;volatile
   513                           
   514                           ;mainCode.c: 35: ADCON1 = 0x0F;
   515  000DE4  0E0F               	movlw	15
   516  000DE6  6EC1               	movwf	4033,c	;volatile
   517                           
   518                           ;mainCode.c: 36: INTCON2bits.RBPU = 0;
   519  000DE8  9EF1               	bcf	intcon2,7,c	;volatile
   520                           
   521                           ;mainCode.c: 37: RCONbits.IPEN = 1;
   522  000DEA  8ED0               	bsf	4048,7,c	;volatile
   523                           
   524                           ;mainCode.c: 38: INTCONbits.GIEH = 1;
   525  000DEC  8EF2               	bsf	intcon,7,c	;volatile
   526                           
   527                           ;mainCode.c: 39: INTCONbits.GIEL = 1;
   528  000DEE  8CF2               	bsf	intcon,6,c	;volatile
   529                           
   530                           ;mainCode.c: 43: INTCON2bits.INTEDG0 = 1;
   531  000DF0  8CF1               	bsf	intcon2,6,c	;volatile
   532                           
   533                           ;mainCode.c: 44: INTCONbits.INT0IE = 1;
   534  000DF2  88F2               	bsf	intcon,4,c	;volatile
   535                           
   536                           ;mainCode.c: 47: INTCON3bits.INT1IP = 0;
   537  000DF4  9CF0               	bcf	intcon3,6,c	;volatile
   538                           
   539                           ;mainCode.c: 48: INTCON2bits.INTEDG1 = 1;
   540  000DF6  8AF1               	bsf	intcon2,5,c	;volatile
   541                           
   542                           ;mainCode.c: 49: INTCON3bits.INT1IE=1;
   543  000DF8  86F0               	bsf	intcon3,3,c	;volatile
   544                           
   545                           ;mainCode.c: 51: unsigned char key;
   546                           ;mainCode.c: 52: PORTA = 0x00;
   547  000DFA  0E00               	movlw	0
   548  000DFC  6E80               	movwf	3968,c	;volatile
   549                           
   550                           ;mainCode.c: 53: PORTB = 0x00;
   551  000DFE  0E00               	movlw	0
   552  000E00  6E81               	movwf	3969,c	;volatile
   553                           
   554                           ;mainCode.c: 54: PORTC = 0x00;
   555  000E02  0E00               	movlw	0
   556  000E04  6E82               	movwf	3970,c	;volatile
   557                           
   558                           ;mainCode.c: 55: PORTD = 0x00;
   559  000E06  0E00               	movlw	0
   560  000E08  6E83               	movwf	3971,c	;volatile
   561                           
   562                           ;mainCode.c: 56: PORTE = 0x00;
   563  000E0A  0E00               	movlw	0
   564  000E0C  6E84               	movwf	3972,c	;volatile
   565                           
   566                           ;mainCode.c: 57: LATA = 0x00;
   567  000E0E  0E00               	movlw	0
   568  000E10  6E89               	movwf	3977,c	;volatile
   569                           
   570                           ;mainCode.c: 58: LATB = 0x00;
   571  000E12  0E00               	movlw	0
   572  000E14  6E8A               	movwf	3978,c	;volatile
   573                           
   574                           ;mainCode.c: 59: LATC = 0x00;
   575  000E16  0E00               	movlw	0
   576  000E18  6E8B               	movwf	3979,c	;volatile
   577                           
   578                           ;mainCode.c: 60: LATD = 0x00;
   579  000E1A  0E00               	movlw	0
   580  000E1C  6E8C               	movwf	3980,c	;volatile
   581                           
   582                           ;mainCode.c: 61: LATE = 0x00;
   583  000E1E  0E00               	movlw	0
   584  000E20  6E8D               	movwf	3981,c	;volatile
   585                           
   586                           ;mainCode.c: 62: TRISA = 0x00;
   587  000E22  0E00               	movlw	0
   588  000E24  6E92               	movwf	3986,c	;volatile
   589                           
   590                           ;mainCode.c: 63: TRISB = 0x07;
   591  000E26  0E07               	movlw	7
   592  000E28  6E93               	movwf	3987,c	;volatile
   593                           
   594                           ;mainCode.c: 64: TRISC = 0xF0;
   595  000E2A  0EF0               	movlw	240
   596  000E2C  6E94               	movwf	3988,c	;volatile
   597                           
   598                           ;mainCode.c: 65: TRISD = 0x00;
   599  000E2E  0E00               	movlw	0
   600  000E30  6E95               	movwf	3989,c	;volatile
   601                           
   602                           ;mainCode.c: 66: TRISE = 0x00;
   603  000E32  0E00               	movlw	0
   604  000E34  6E96               	movwf	3990,c	;volatile
   605                           
   606                           ;mainCode.c: 68: setup_LCD();
   607  000E36  EC39  F009         	call	_setup_LCD	;wreg free
   608                           
   609                           ;mainCode.c: 69: pwmInit();
   610  000E3A  ECF7  F009         	call	_pwmInit	;wreg free
   611  000E3E                     l1487:
   612                           
   613                           ;mainCode.c: 72: if(readPassword(0x20) != 'A' &&
   614                           ;mainCode.c: 73: readPassword(0x20) != 'B' &&
   615                           ;mainCode.c: 74: readPassword(0x20) != 'C' &&
   616                           ;mainCode.c: 75: readPassword(0x20) != 'D')
   617  000E3E  0E20               	movlw	32
   618  000E40  EC10  F00A         	call	_readPassword
   619  000E44  0A41               	xorlw	65
   620  000E46  B4D8               	btfsc	status,2,c
   621  000E48  D015               	goto	l1497
   622  000E4A  0E20               	movlw	32
   623  000E4C  EC10  F00A         	call	_readPassword
   624  000E50  0A42               	xorlw	66
   625  000E52  B4D8               	btfsc	status,2,c
   626  000E54  D00F               	goto	l1497
   627  000E56  0E20               	movlw	32
   628  000E58  EC10  F00A         	call	_readPassword
   629  000E5C  0A43               	xorlw	67
   630  000E5E  B4D8               	btfsc	status,2,c
   631  000E60  D009               	goto	l1497
   632  000E62  0E20               	movlw	32
   633  000E64  EC10  F00A         	call	_readPassword
   634  000E68  0A44               	xorlw	68
   635  000E6A  B4D8               	btfsc	status,2,c
   636  000E6C  D003               	goto	l1497
   637                           
   638                           ;mainCode.c: 76: {
   639                           ;mainCode.c: 77: profile();
   640  000E6E  ECFA  F008         	call	_profile	;wreg free
   641                           
   642                           ;mainCode.c: 78: }else{
   643  000E72  D7E5               	goto	l1487
   644  000E74                     l1497:
   645                           
   646                           ;mainCode.c: 79: ready_LCD();
   647  000E74  ECB4  F009         	call	_ready_LCD	;wreg free
   648                           
   649                           ;mainCode.c: 80: display_string_LCD("Enter Password");
   650  000E78  0E71               	movlw	low STR_1
   651  000E7A  6E25               	movwf	display_string_LCD@data,c
   652  000E7C  0E0D               	movlw	high STR_1
   653  000E7E  6E26               	movwf	display_string_LCD@data+1,c
   654  000E80  EC7A  F009         	call	_display_string_LCD	;wreg free
   655                           
   656                           ;mainCode.c: 81: alarm();
   657  000E84  EC00  F00A         	call	_alarm	;wreg free
   658                           
   659                           ;mainCode.c: 82: if(checkPassword() != 1){
   660  000E88  EC5E  F009         	call	_checkPassword	;wreg free
   661  000E8C  06E8               	decf	wreg,f,c
   662  000E8E  B4D8               	btfsc	status,2,c
   663  000E90  D00B               	goto	l88
   664                           
   665                           ;mainCode.c: 83: clear_LCD();
   666  000E92  EC28  F00A         	call	_clear_LCD	;wreg free
   667                           
   668                           ;mainCode.c: 84: ready_LCD();
   669  000E96  ECB4  F009         	call	_ready_LCD	;wreg free
   670                           
   671                           ;mainCode.c: 85: display_string_LCD("Wrong Password");
   672  000E9A  0E62               	movlw	low STR_2
   673  000E9C  6E25               	movwf	display_string_LCD@data,c
   674  000E9E  0E0D               	movlw	high STR_2
   675  000EA0  6E26               	movwf	display_string_LCD@data+1,c
   676  000EA2  EC7A  F009         	call	_display_string_LCD	;wreg free
   677                           
   678                           ;mainCode.c: 86: }else{
   679  000EA6  D7CB               	goto	l1487
   680  000EA8                     l88:
   681                           
   682                           ;mainCode.c: 88: PORTAbits.RA0 = 0;
   683  000EA8  9080               	bcf	3968,0,c	;volatile
   684                           
   685                           ;mainCode.c: 89: PORTEbits.RE1 = 0;
   686  000EAA  9284               	bcf	3972,1,c	;volatile
   687                           
   688                           ;mainCode.c: 90: clear_LCD();
   689  000EAC  EC28  F00A         	call	_clear_LCD	;wreg free
   690                           
   691                           ;mainCode.c: 91: ready_LCD();
   692  000EB0  ECB4  F009         	call	_ready_LCD	;wreg free
   693                           
   694                           ;mainCode.c: 92: display_string_LCD("Alarm Deactiv");
   695  000EB4  0EAA               	movlw	low STR_3
   696  000EB6  6E25               	movwf	display_string_LCD@data,c
   697  000EB8  0E0D               	movlw	high STR_3
   698  000EBA  6E26               	movwf	display_string_LCD@data+1,c
   699  000EBC  EC7A  F009         	call	_display_string_LCD	;wreg free
   700                           
   701                           ;mainCode.c: 93: _delay((unsigned long)((1500)*(8000000/4000.0)));
   702  000EC0  0E10               	movlw	16
   703  000EC2  6E2B               	movwf	(??_main+1)& (0+255),c
   704  000EC4  0E39               	movlw	57
   705  000EC6  6E2A               	movwf	??_main& (0+255),c
   706  000EC8  0E0E               	movlw	14
   707  000ECA                     u567:
   708  000ECA  2EE8               	decfsz	wreg,f,c
   709  000ECC  D7FE               	bra	u567
   710  000ECE  2E2A               	decfsz	??_main& (0+255),f,c
   711  000ED0  D7FC               	bra	u567
   712  000ED2  2E2B               	decfsz	(??_main+1)& (0+255),f,c
   713  000ED4  D7FA               	bra	u567
   714                           
   715                           ;mainCode.c: 94: clear_LCD();
   716  000ED6  EC28  F00A         	call	_clear_LCD	;wreg free
   717                           
   718                           ;mainCode.c: 95: ready_LCD();
   719  000EDA  ECB4  F009         	call	_ready_LCD	;wreg free
   720                           
   721                           ;mainCode.c: 96: display_string_LCD("Welcome User ");
   722  000EDE  0E9C               	movlw	low STR_4
   723  000EE0  6E25               	movwf	display_string_LCD@data,c
   724  000EE2  0E0D               	movlw	high STR_4
   725  000EE4  6E26               	movwf	display_string_LCD@data+1,c
   726  000EE6  EC7A  F009         	call	_display_string_LCD	;wreg free
   727                           
   728                           ;mainCode.c: 97: display_LCD(readPassword(0x20));
   729  000EEA  0E20               	movlw	32
   730  000EEC  EC10  F00A         	call	_readPassword
   731  000EF0  ECC2  F009         	call	_display_LCD
   732                           
   733                           ;mainCode.c: 98: second_line_LCD();
   734  000EF4  EC17  F00A         	call	_second_line_LCD	;wreg free
   735                           
   736                           ;mainCode.c: 99: welcome();
   737  000EF8  ECEE  F009         	call	_welcome	;wreg free
   738                           
   739                           ;mainCode.c: 100: menu();
   740  000EFC  EC0A  F008         	call	_menu	;wreg free
   741                           
   742                           ;mainCode.c: 101: if(flag == 1){
   743  000F00  042C               	decf	_flag,w,c
   744  000F02  B4D8               	btfsc	status,2,c
   745  000F04  EF62  F000         	goto	start
   746  000F08  D7CF               	goto	l88
   747  000F0A                     __end_of_main:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           intcon	equ	0xFF2
   752                           intcon2	equ	0xFF1
   753                           intcon3	equ	0xFF0
   754                           wreg	equ	0xFE8
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function _welcome *****************
   758 ;; Defined at:
   759 ;;		line 16 in file "menu.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    4
   780 ;; This function calls:
   781 ;;		_display_string_LCD
   782 ;;		_ready_LCD
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789  0013DC                     __ptext1:
   790                           	opt stack 0
   791  0013DC                     _welcome:
   792                           	opt stack 26
   793                           
   794                           ;menu.c: 17: ready_LCD();
   795                           
   796                           ;incstack = 0
   797  0013DC  ECB4  F009         	call	_ready_LCD	;wreg free
   798                           
   799                           ;menu.c: 18: display_string_LCD("1.Door 2.LogOut");
   800  0013E0  0E52               	movlw	low STR_5
   801  0013E2  6E25               	movwf	display_string_LCD@data,c
   802  0013E4  0E0D               	movlw	high STR_5
   803  0013E6  6E26               	movwf	display_string_LCD@data+1,c
   804  0013E8  EC7A  F009         	call	_display_string_LCD	;wreg free
   805  0013EC  0012               	return		;funcret
   806  0013EE                     __end_of_welcome:
   807                           	opt stack 0
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           intcon	equ	0xFF2
   811                           intcon2	equ	0xFF1
   812                           intcon3	equ	0xFF0
   813                           wreg	equ	0xFE8
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _setup_LCD *****************
   817 ;; Defined at:
   818 ;;		line 28 in file "lcdCon.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   836 ;;Total ram usage:        2 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    3
   839 ;; This function calls:
   840 ;;		_command_LCD
   841 ;;		_ready_LCD
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text2
   848  001272                     __ptext2:
   849                           	opt stack 0
   850  001272                     _setup_LCD:
   851                           	opt stack 27
   852                           
   853                           ;lcdCon.c: 29: PORTAbits.RA3 = 0;
   854                           
   855                           ;incstack = 0
   856  001272  9680               	bcf	3968,3,c	;volatile
   857                           
   858                           ;lcdCon.c: 30: _delay((unsigned long)((250)*(8000000/4000.0)));
   859  001274  0E03               	movlw	3
   860  001276  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   861  001278  0E8A               	movlw	138
   862  00127A  6E25               	movwf	??_setup_LCD& (0+255),c
   863  00127C  0E56               	movlw	86
   864  00127E                     u577:
   865  00127E  2EE8               	decfsz	wreg,f,c
   866  001280  D7FE               	bra	u577
   867  001282  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   868  001284  D7FC               	bra	u577
   869  001286  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   870  001288  D7FA               	bra	u577
   871                           
   872                           ;lcdCon.c: 31: command_LCD(0x38);
   873  00128A  0E38               	movlw	56
   874  00128C  ECCE  F009         	call	_command_LCD
   875                           
   876                           ;lcdCon.c: 32: _delay((unsigned long)((250)*(8000000/4000.0)));
   877  001290  0E03               	movlw	3
   878  001292  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   879  001294  0E8A               	movlw	138
   880  001296  6E25               	movwf	??_setup_LCD& (0+255),c
   881  001298  0E56               	movlw	86
   882  00129A                     u587:
   883  00129A  2EE8               	decfsz	wreg,f,c
   884  00129C  D7FE               	bra	u587
   885  00129E  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   886  0012A0  D7FC               	bra	u587
   887  0012A2  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   888  0012A4  D7FA               	bra	u587
   889                           
   890                           ;lcdCon.c: 33: command_LCD(0x0F);
   891  0012A6  0E0F               	movlw	15
   892  0012A8  ECCE  F009         	call	_command_LCD
   893                           
   894                           ;lcdCon.c: 34: ready_LCD();
   895  0012AC  ECB4  F009         	call	_ready_LCD	;wreg free
   896                           
   897                           ;lcdCon.c: 35: command_LCD(0x01);
   898  0012B0  0E01               	movlw	1
   899  0012B2  ECCE  F009         	call	_command_LCD
   900                           
   901                           ;lcdCon.c: 36: ready_LCD();
   902  0012B6  ECB4  F009         	call	_ready_LCD	;wreg free
   903  0012BA  0012               	return		;funcret
   904  0012BC                     __end_of_setup_LCD:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           intcon	equ	0xFF2
   909                           intcon2	equ	0xFF1
   910                           intcon3	equ	0xFF0
   911                           wreg	equ	0xFE8
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _pwmInit *****************
   915 ;; Defined at:
   916 ;;		line 12 in file "status.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    2
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text3
   945  0013EE                     __ptext3:
   946                           	opt stack 0
   947  0013EE                     _pwmInit:
   948                           	opt stack 28
   949                           
   950                           ;status.c: 16: PR2 = 0x9B;
   951                           
   952                           ;incstack = 0
   953  0013EE  0E9B               	movlw	155
   954  0013F0  6ECB               	movwf	4043,c	;volatile
   955                           
   956                           ;status.c: 17: CCPR1L = 0x2F;
   957  0013F2  0E2F               	movlw	47
   958  0013F4  6EBE               	movwf	4030,c	;volatile
   959                           
   960                           ;status.c: 18: T2CON = 0x07;
   961  0013F6  0E07               	movlw	7
   962  0013F8  6ECA               	movwf	4042,c	;volatile
   963                           
   964                           ;status.c: 19: CCP1CON = 0x3C;
   965  0013FA  0E3C               	movlw	60
   966  0013FC  6EBD               	movwf	4029,c	;volatile
   967  0013FE  0012               	return		;funcret
   968  001400                     __end_of_pwmInit:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           intcon	equ	0xFF2
   973                           intcon2	equ	0xFF1
   974                           intcon3	equ	0xFF0
   975                           wreg	equ	0xFE8
   976                           status	equ	0xFD8
   977                           
   978 ;; *************** function _profile *****************
   979 ;; Defined at:
   980 ;;		line 45 in file "profile.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  i               2   39[COMRAM] unsigned int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    4
  1001 ;; This function calls:
  1002 ;;		_clear_LCD
  1003 ;;		_display_string_LCD
  1004 ;;		_first_line_LCD
  1005 ;;		_obtainedKey
  1006 ;;		_ready_LCD
  1007 ;;		_second_line_LCD
  1008 ;;		_writePassword
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text4
  1015  0011F4                     __ptext4:
  1016                           	opt stack 0
  1017  0011F4                     _profile:
  1018                           	opt stack 26
  1019                           
  1020                           ;profile.c: 46: unsigned int i = 0;
  1021                           
  1022                           ;incstack = 0
  1023  0011F4  0E00               	movlw	0
  1024  0011F6  6E29               	movwf	profile@i+1,c
  1025  0011F8  0E00               	movlw	0
  1026  0011FA  6E28               	movwf	profile@i,c
  1027                           
  1028                           ;profile.c: 47: ready_LCD();
  1029  0011FC  ECB4  F009         	call	_ready_LCD	;wreg free
  1030                           
  1031                           ;profile.c: 48: display_string_LCD("Which letter do");
  1032  001200  0E22               	movlw	low STR_13
  1033  001202  6E25               	movwf	display_string_LCD@data,c
  1034  001204  0E0D               	movlw	high STR_13
  1035  001206  6E26               	movwf	display_string_LCD@data+1,c
  1036  001208  EC7A  F009         	call	_display_string_LCD	;wreg free
  1037                           
  1038                           ;profile.c: 49: second_line_LCD();
  1039  00120C  EC17  F00A         	call	_second_line_LCD	;wreg free
  1040                           
  1041                           ;profile.c: 50: display_string_LCD("U Prefer A B C D");
  1042  001210  0E01               	movlw	low STR_14
  1043  001212  6E25               	movwf	display_string_LCD@data,c
  1044  001214  0E0D               	movlw	high STR_14
  1045  001216  6E26               	movwf	display_string_LCD@data+1,c
  1046  001218  EC7A  F009         	call	_display_string_LCD	;wreg free
  1047                           
  1048                           ;profile.c: 51: writePassword(obtainedKey(),0x20);
  1049  00121C  0E20               	movlw	32
  1050  00121E  6E26               	movwf	writePassword@address,c
  1051  001220  ECA4  F009         	call	_obtainedKey	;wreg free
  1052  001224  EC09  F00A         	call	_writePassword
  1053                           
  1054                           ;profile.c: 52: clear_LCD();
  1055  001228  EC28  F00A         	call	_clear_LCD	;wreg free
  1056                           
  1057                           ;profile.c: 53: first_line_LCD();
  1058  00122C  EC1D  F00A         	call	_first_line_LCD	;wreg free
  1059                           
  1060                           ;profile.c: 54: display_string_LCD("Introduce Psswd");
  1061  001230  0E12               	movlw	low STR_15
  1062  001232  6E25               	movwf	display_string_LCD@data,c
  1063  001234  0E0D               	movlw	high STR_15
  1064  001236  6E26               	movwf	display_string_LCD@data+1,c
  1065  001238  EC7A  F009         	call	_display_string_LCD	;wreg free
  1066                           
  1067                           ;profile.c: 55: second_line_LCD();
  1068  00123C  EC17  F00A         	call	_second_line_LCD	;wreg free
  1069                           
  1070                           ;profile.c: 56: display_string_LCD("Only two keys");
  1071  001240  0E80               	movlw	low STR_16
  1072  001242  6E25               	movwf	display_string_LCD@data,c
  1073  001244  0E0D               	movlw	high STR_16
  1074  001246  6E26               	movwf	display_string_LCD@data+1,c
  1075  001248  EC7A  F009         	call	_display_string_LCD	;wreg free
  1076  00124C                     l1393:
  1077                           
  1078                           ;profile.c: 58: writePassword(obtainedKey(),0x00+1);
  1079  00124C  0E01               	movlw	1
  1080  00124E  6E26               	movwf	writePassword@address,c
  1081  001250  ECA4  F009         	call	_obtainedKey	;wreg free
  1082  001254  EC09  F00A         	call	_writePassword
  1083                           
  1084                           ;profile.c: 59: i++;
  1085  001258  4A28               	infsnz	profile@i,f,c
  1086  00125A  2A29               	incf	profile@i+1,f,c
  1087                           
  1088                           ;profile.c: 60: }while(i<2);
  1089  00125C  5029               	movf	profile@i+1,w,c
  1090  00125E  E104               	bnz	l1399
  1091  001260  0E02               	movlw	2
  1092  001262  5C28               	subwf	profile@i,w,c
  1093  001264  A0D8               	btfss	status,0,c
  1094  001266  D7F2               	goto	l1393
  1095  001268                     l1399:
  1096                           
  1097                           ;profile.c: 61: clear_LCD();
  1098  001268  EC28  F00A         	call	_clear_LCD	;wreg free
  1099                           
  1100                           ;profile.c: 62: first_line_LCD();
  1101  00126C  EC1D  F00A         	call	_first_line_LCD	;wreg free
  1102  001270  0012               	return		;funcret
  1103  001272                     __end_of_profile:
  1104                           	opt stack 0
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           intcon	equ	0xFF2
  1108                           intcon2	equ	0xFF1
  1109                           intcon3	equ	0xFF0
  1110                           wreg	equ	0xFE8
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _writePassword *****************
  1114 ;; Defined at:
  1115 ;;		line 42 in file "profile.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  value           1    wreg     unsigned char 
  1118 ;;  address         1   37[COMRAM] unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  value           1   38[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1130 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    3
  1137 ;; This function calls:
  1138 ;;		_eeprom_w
  1139 ;; This function is called by:
  1140 ;;		_profile
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text5
  1145  001412                     __ptext5:
  1146                           	opt stack 0
  1147  001412                     _writePassword:
  1148                           	opt stack 26
  1149                           
  1150                           ;incstack = 0
  1151                           ;writePassword@value stored from wreg
  1152  001412  6E27               	movwf	writePassword@value,c
  1153                           
  1154                           ;profile.c: 43: eeprom_w(address, value);
  1155  001414  C027  F024         	movff	writePassword@value,eeprom_w@value
  1156  001418  5026               	movf	writePassword@address,w,c
  1157  00141A  EC92  F009         	call	_eeprom_w
  1158  00141E  0012               	return		;funcret
  1159  001420                     __end_of_writePassword:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           intcon	equ	0xFF2
  1164                           intcon2	equ	0xFF1
  1165                           intcon3	equ	0xFF0
  1166                           wreg	equ	0xFE8
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function _eeprom_w *****************
  1170 ;; Defined at:
  1171 ;;		line 23 in file "profile.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  address         1    wreg     unsigned char 
  1174 ;;  value           1   35[COMRAM] unsigned char 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  address         1   36[COMRAM] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1190 ;;Total ram usage:        2 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    2
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_writePassword
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text6
  1201  001324                     __ptext6:
  1202                           	opt stack 0
  1203  001324                     _eeprom_w:
  1204                           	opt stack 26
  1205                           
  1206                           ;incstack = 0
  1207                           ;eeprom_w@address stored from wreg
  1208  001324  6E25               	movwf	eeprom_w@address,c
  1209                           
  1210                           ;profile.c: 24: EEADR = address;
  1211  001326  C025  FFA9         	movff	eeprom_w@address,4009	;volatile
  1212                           
  1213                           ;profile.c: 25: EEDATA = value;
  1214  00132A  C024  FFA8         	movff	eeprom_w@value,4008	;volatile
  1215                           
  1216                           ;profile.c: 26: EECON1bits.EEPGD =0;
  1217  00132E  9EA6               	bcf	4006,7,c	;volatile
  1218                           
  1219                           ;profile.c: 27: EECON1bits.CFGS = 0;
  1220  001330  9CA6               	bcf	4006,6,c	;volatile
  1221                           
  1222                           ;profile.c: 28: INTCONbits.GIE = 0;
  1223  001332  9EF2               	bcf	intcon,7,c	;volatile
  1224                           
  1225                           ;profile.c: 29: EECON2 = 0x55;
  1226  001334  0E55               	movlw	85
  1227  001336  6EA7               	movwf	4007,c	;volatile
  1228                           
  1229                           ;profile.c: 30: EECON2 = 0xAA;
  1230  001338  0EAA               	movlw	170
  1231  00133A  6EA7               	movwf	4007,c	;volatile
  1232                           
  1233                           ;profile.c: 31: EECON1bits.WR = 1;
  1234  00133C  82A6               	bsf	4006,1,c	;volatile
  1235  00133E                     l214:
  1236  00133E  B2A6               	btfsc	4006,1,c	;volatile
  1237  001340  D7FE               	goto	l214
  1238                           
  1239                           ;profile.c: 33: INTCONbits.GIE = 1;
  1240  001342  8EF2               	bsf	intcon,7,c	;volatile
  1241                           
  1242                           ;profile.c: 34: EECON1bits.WREN = 0;
  1243  001344  94A6               	bcf	4006,2,c	;volatile
  1244  001346  0012               	return		;funcret
  1245  001348                     __end_of_eeprom_w:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           intcon	equ	0xFF2
  1250                           intcon2	equ	0xFF1
  1251                           intcon3	equ	0xFF0
  1252                           wreg	equ	0xFE8
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _menu *****************
  1256 ;; Defined at:
  1257 ;;		line 21 in file "menu.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    4
  1278 ;; This function calls:
  1279 ;;		_clear_LCD
  1280 ;;		_close
  1281 ;;		_display_LCD
  1282 ;;		_display_string_LCD
  1283 ;;		_first_line_LCD
  1284 ;;		_obtainedKey
  1285 ;;		_open
  1286 ;;		_readPassword
  1287 ;;		_ready_LCD
  1288 ;;		_second_line_LCD
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text7
  1295  001014                     __ptext7:
  1296                           	opt stack 0
  1297  001014                     _menu:
  1298                           	opt stack 26
  1299  001014                     
  1300                           ;menu.c: 23: flag = 0;
  1301  001014  0E00               	movlw	0
  1302  001016  6E2C               	movwf	_flag,c
  1303                           
  1304                           ;menu.c: 24: if(obtainedKey() == '1'){
  1305  001018  ECA4  F009         	call	_obtainedKey	;wreg free
  1306  00101C  0A31               	xorlw	49
  1307  00101E  A4D8               	btfss	status,2,c
  1308  001020  D04C               	goto	l1441
  1309                           
  1310                           ;menu.c: 25: clear_LCD();
  1311  001022  EC28  F00A         	call	_clear_LCD	;wreg free
  1312                           
  1313                           ;menu.c: 26: first_line_LCD();
  1314  001026  EC1D  F00A         	call	_first_line_LCD	;wreg free
  1315                           
  1316                           ;menu.c: 27: display_string_LCD("1.Unlock 2.Lock");
  1317  00102A  0E42               	movlw	low STR_6
  1318  00102C  6E25               	movwf	display_string_LCD@data,c
  1319  00102E  0E0D               	movlw	high STR_6
  1320  001030  6E26               	movwf	display_string_LCD@data+1,c
  1321  001032  EC7A  F009         	call	_display_string_LCD	;wreg free
  1322                           
  1323                           ;menu.c: 28: if(obtainedKey() == '1'){
  1324  001036  ECA4  F009         	call	_obtainedKey	;wreg free
  1325  00103A  0A31               	xorlw	49
  1326  00103C  A4D8               	btfss	status,2,c
  1327  00103E  D01C               	goto	l1427
  1328                           
  1329                           ;menu.c: 29: open();
  1330  001040  EC2C  F00A         	call	_open	;wreg free
  1331                           
  1332                           ;menu.c: 30: clear_LCD();
  1333  001044  EC28  F00A         	call	_clear_LCD	;wreg free
  1334                           
  1335                           ;menu.c: 31: first_line_LCD();
  1336  001048  EC1D  F00A         	call	_first_line_LCD	;wreg free
  1337                           
  1338                           ;menu.c: 32: display_string_LCD("-Door Unlocked-");
  1339  00104C  0E32               	movlw	low STR_7
  1340  00104E  6E25               	movwf	display_string_LCD@data,c
  1341  001050  0E0D               	movlw	high STR_7
  1342  001052  6E26               	movwf	display_string_LCD@data+1,c
  1343  001054  EC7A  F009         	call	_display_string_LCD	;wreg free
  1344                           
  1345                           ;menu.c: 33: second_line_LCD();
  1346  001058  EC17  F00A         	call	_second_line_LCD	;wreg free
  1347                           
  1348                           ;menu.c: 34: display_string_LCD("A to GoBack");
  1349  00105C  0EC5               	movlw	low STR_8
  1350  00105E  6E25               	movwf	display_string_LCD@data,c
  1351  001060  0E0D               	movlw	high STR_8
  1352  001062  6E26               	movwf	display_string_LCD@data+1,c
  1353  001064  EC7A  F009         	call	_display_string_LCD	;wreg free
  1354                           
  1355                           ;menu.c: 35: if(obtainedKey() == 'A'){
  1356  001068  ECA4  F009         	call	_obtainedKey	;wreg free
  1357  00106C  0A41               	xorlw	65
  1358  00106E  A4D8               	btfss	status,2,c
  1359  001070  D7D1               	goto	l1405
  1360                           
  1361                           ;menu.c: 36: clear_LCD();
  1362  001072  EC28  F00A         	call	_clear_LCD	;wreg free
  1363                           
  1364                           ;menu.c: 37: return;
  1365  001076  0012               	return	
  1366  001078                     l1427:
  1367  001078  ECA4  F009         	call	_obtainedKey	;wreg free
  1368  00107C  0A32               	xorlw	50
  1369  00107E  A4D8               	btfss	status,2,c
  1370  001080  D7C9               	goto	l1405
  1371                           
  1372                           ;menu.c: 40: close();
  1373  001082  EC2F  F00A         	call	_close	;wreg free
  1374                           
  1375                           ;menu.c: 41: clear_LCD();
  1376  001086  EC28  F00A         	call	_clear_LCD	;wreg free
  1377                           
  1378                           ;menu.c: 42: first_line_LCD();
  1379  00108A  EC1D  F00A         	call	_first_line_LCD	;wreg free
  1380                           
  1381                           ;menu.c: 43: display_string_LCD("-Door Locked-");
  1382  00108E  0E8E               	movlw	low STR_9
  1383  001090  6E25               	movwf	display_string_LCD@data,c
  1384  001092  0E0D               	movlw	high STR_9
  1385  001094  6E26               	movwf	display_string_LCD@data+1,c
  1386  001096  EC7A  F009         	call	_display_string_LCD	;wreg free
  1387                           
  1388                           ;menu.c: 44: second_line_LCD();
  1389  00109A  EC17  F00A         	call	_second_line_LCD	;wreg free
  1390                           
  1391                           ;menu.c: 45: display_string_LCD("A to GoBack");
  1392  00109E  0EC5               	movlw	low STR_8
  1393  0010A0  6E25               	movwf	display_string_LCD@data,c
  1394  0010A2  0E0D               	movlw	high STR_8
  1395  0010A4  6E26               	movwf	display_string_LCD@data+1,c
  1396  0010A6  EC7A  F009         	call	_display_string_LCD	;wreg free
  1397                           
  1398                           ;menu.c: 46: if(obtainedKey() == 'A'){
  1399  0010AA  ECA4  F009         	call	_obtainedKey	;wreg free
  1400  0010AE  0A41               	xorlw	65
  1401  0010B0  A4D8               	btfss	status,2,c
  1402  0010B2  D7B0               	goto	l1405
  1403                           
  1404                           ;menu.c: 47: clear_LCD();
  1405  0010B4  EC28  F00A         	call	_clear_LCD	;wreg free
  1406                           
  1407                           ;menu.c: 48: return;
  1408  0010B8  0012               	return	
  1409  0010BA                     l1441:
  1410  0010BA  ECA4  F009         	call	_obtainedKey	;wreg free
  1411  0010BE  0A32               	xorlw	50
  1412  0010C0  A4D8               	btfss	status,2,c
  1413  0010C2  D7A8               	goto	l1405
  1414                           
  1415                           ;menu.c: 52: clear_LCD();
  1416  0010C4  EC28  F00A         	call	_clear_LCD	;wreg free
  1417                           
  1418                           ;menu.c: 53: ready_LCD();
  1419  0010C8  ECB4  F009         	call	_ready_LCD	;wreg free
  1420                           
  1421                           ;menu.c: 54: display_string_LCD("Bye user ");
  1422  0010CC  0ED1               	movlw	low STR_11
  1423  0010CE  6E25               	movwf	display_string_LCD@data,c
  1424  0010D0  0E0D               	movlw	high STR_11
  1425  0010D2  6E26               	movwf	display_string_LCD@data+1,c
  1426  0010D4  EC7A  F009         	call	_display_string_LCD	;wreg free
  1427                           
  1428                           ;menu.c: 55: display_LCD(readPassword(0x20));
  1429  0010D8  0E20               	movlw	32
  1430  0010DA  EC10  F00A         	call	_readPassword
  1431  0010DE  ECC2  F009         	call	_display_LCD
  1432                           
  1433                           ;menu.c: 56: second_line_LCD();
  1434  0010E2  EC17  F00A         	call	_second_line_LCD	;wreg free
  1435                           
  1436                           ;menu.c: 57: display_string_LCD("Alarm Active");
  1437  0010E6  0EB8               	movlw	low STR_12
  1438  0010E8  6E25               	movwf	display_string_LCD@data,c
  1439  0010EA  0E0D               	movlw	high STR_12
  1440  0010EC  6E26               	movwf	display_string_LCD@data+1,c
  1441  0010EE  EC7A  F009         	call	_display_string_LCD	;wreg free
  1442                           
  1443                           ;menu.c: 58: _delay((unsigned long)((2500)*(8000000/4000.0)));
  1444  0010F2  0E1A               	movlw	26
  1445  0010F4  6E28               	movwf	(??_menu+1)& (0+255),c
  1446  0010F6  0E5E               	movlw	94
  1447  0010F8  6E27               	movwf	??_menu& (0+255),c
  1448  0010FA  0E6E               	movlw	110
  1449  0010FC                     u597:
  1450  0010FC  2EE8               	decfsz	wreg,f,c
  1451  0010FE  D7FE               	bra	u597
  1452  001100  2E27               	decfsz	??_menu& (0+255),f,c
  1453  001102  D7FC               	bra	u597
  1454  001104  2E28               	decfsz	(??_menu+1)& (0+255),f,c
  1455  001106  D7FA               	bra	u597
  1456  001108  D000               	nop2	
  1457                           
  1458                           ;menu.c: 59: flag = 1;
  1459  00110A  0E01               	movlw	1
  1460  00110C  6E2C               	movwf	_flag,c
  1461                           
  1462                           ;menu.c: 60: return;
  1463  00110E  0012               	return	
  1464  001110                     __end_of_menu:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           intcon	equ	0xFF2
  1469                           intcon2	equ	0xFF1
  1470                           intcon3	equ	0xFF0
  1471                           wreg	equ	0xFE8
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _second_line_LCD *****************
  1475 ;; Defined at:
  1476 ;;		line 80 in file "lcdCon.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    3
  1497 ;; This function calls:
  1498 ;;		_command_LCD
  1499 ;;		_ready_LCD
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;;		_menu
  1503 ;;		_profile
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text8
  1508  00142E                     __ptext8:
  1509                           	opt stack 0
  1510  00142E                     _second_line_LCD:
  1511                           	opt stack 27
  1512                           
  1513                           ;lcdCon.c: 81: command_LCD(0xC0);
  1514                           
  1515                           ;incstack = 0
  1516  00142E  0EC0               	movlw	192
  1517  001430  ECCE  F009         	call	_command_LCD
  1518                           
  1519                           ;lcdCon.c: 82: ready_LCD();
  1520  001434  ECB4  F009         	call	_ready_LCD	;wreg free
  1521  001438  0012               	return		;funcret
  1522  00143A                     __end_of_second_line_LCD:
  1523                           	opt stack 0
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           intcon	equ	0xFF2
  1527                           intcon2	equ	0xFF1
  1528                           intcon3	equ	0xFF0
  1529                           wreg	equ	0xFE8
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _open *****************
  1533 ;; Defined at:
  1534 ;;		line 22 in file "status.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    2
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_menu
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text9
  1563  001458                     __ptext9:
  1564                           	opt stack 0
  1565  001458                     _open:
  1566                           	opt stack 27
  1567                           
  1568                           ;status.c: 23: CCPR1L = 0x5F;
  1569                           
  1570                           ;incstack = 0
  1571  001458  0E5F               	movlw	95
  1572  00145A  6EBE               	movwf	4030,c	;volatile
  1573  00145C  0012               	return		;funcret
  1574  00145E                     __end_of_open:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           intcon	equ	0xFF2
  1579                           intcon2	equ	0xFF1
  1580                           intcon3	equ	0xFF0
  1581                           wreg	equ	0xFE8
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function _first_line_LCD *****************
  1585 ;; Defined at:
  1586 ;;		line 76 in file "lcdCon.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    3
  1607 ;; This function calls:
  1608 ;;		_command_LCD
  1609 ;;		_ready_LCD
  1610 ;; This function is called by:
  1611 ;;		_menu
  1612 ;;		_profile
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text10
  1617  00143A                     __ptext10:
  1618                           	opt stack 0
  1619  00143A                     _first_line_LCD:
  1620                           	opt stack 26
  1621                           
  1622                           ;lcdCon.c: 77: command_LCD(0x20);
  1623                           
  1624                           ;incstack = 0
  1625  00143A  0E20               	movlw	32
  1626  00143C  ECCE  F009         	call	_command_LCD
  1627                           
  1628                           ;lcdCon.c: 78: ready_LCD();
  1629  001440  ECB4  F009         	call	_ready_LCD	;wreg free
  1630  001444  0012               	return		;funcret
  1631  001446                     __end_of_first_line_LCD:
  1632                           	opt stack 0
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           intcon	equ	0xFF2
  1636                           intcon2	equ	0xFF1
  1637                           intcon3	equ	0xFF0
  1638                           wreg	equ	0xFE8
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _display_string_LCD *****************
  1642 ;; Defined at:
  1643 ;;		line 69 in file "lcdCon.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  data            2   36[COMRAM] PTR unsigned char 
  1646 ;;		 -> STR_16(14), STR_15(16), STR_14(17), STR_13(16), 
  1647 ;;		 -> STR_12(13), STR_11(10), STR_10(12), STR_9(14), 
  1648 ;;		 -> STR_8(12), STR_7(16), STR_6(16), STR_5(16), 
  1649 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		_display_LCD
  1670 ;;		_ready_LCD
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;;		_welcome
  1674 ;;		_menu
  1675 ;;		_profile
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text11
  1680  0012F4                     __ptext11:
  1681                           	opt stack 0
  1682  0012F4                     _display_string_LCD:
  1683                           	opt stack 26
  1684                           
  1685                           ;lcdCon.c: 70: PORTAbits.RA1 = 1;
  1686                           
  1687                           ;incstack = 0
  1688  0012F4  8280               	bsf	3968,1,c	;volatile
  1689                           
  1690                           ;lcdCon.c: 71: while(*data){
  1691  0012F6  D00A               	goto	l1365
  1692  0012F8                     l1361:
  1693                           
  1694                           ;lcdCon.c: 72: display_LCD(*data++);
  1695  0012F8  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1696  0012FC  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1697  001300                     	if	0	;tblptru may be non-zero
  1698  001300                     	endif
  1699  001300                     	if	0	;tblptru may be non-zero
  1700  001300                     	endif
  1701  001300  0008               	tblrd		*
  1702  001302  50F5               	movf	tablat,w,c
  1703  001304  ECC2  F009         	call	_display_LCD
  1704  001308  4A25               	infsnz	display_string_LCD@data,f,c
  1705  00130A  2A26               	incf	display_string_LCD@data+1,f,c
  1706  00130C                     l1365:
  1707  00130C  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1708  001310  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1709  001314                     	if	0	;tblptru may be non-zero
  1710  001314                     	endif
  1711  001314                     	if	0	;tblptru may be non-zero
  1712  001314                     	endif
  1713  001314  0008               	tblrd		*
  1714  001316  50F5               	movf	tablat,w,c
  1715  001318  0900               	iorlw	0
  1716  00131A  A4D8               	btfss	status,2,c
  1717  00131C  D7ED               	goto	l1361
  1718                           
  1719                           ;lcdCon.c: 73: }
  1720                           ;lcdCon.c: 74: ready_LCD();
  1721  00131E  ECB4  F009         	call	_ready_LCD	;wreg free
  1722  001322  0012               	return		;funcret
  1723  001324                     __end_of_display_string_LCD:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           intcon	equ	0xFF2
  1730                           intcon2	equ	0xFF1
  1731                           intcon3	equ	0xFF0
  1732                           wreg	equ	0xFE8
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _ready_LCD *****************
  1736 ;; Defined at:
  1737 ;;		line 48 in file "lcdCon.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;;		_setup_LCD
  1763 ;;		_display_string_LCD
  1764 ;;		_first_line_LCD
  1765 ;;		_second_line_LCD
  1766 ;;		_welcome
  1767 ;;		_menu
  1768 ;;		_profile
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text12
  1773  001368                     __ptext12:
  1774                           	opt stack 0
  1775  001368                     _ready_LCD:
  1776                           	opt stack 27
  1777                           
  1778                           ;lcdCon.c: 49: TRISD = 0xFF;
  1779                           
  1780                           ;incstack = 0
  1781  001368  6895               	setf	3989,c	;volatile
  1782                           
  1783                           ;lcdCon.c: 50: PORTAbits.RA1 = 0;
  1784  00136A  9280               	bcf	3968,1,c	;volatile
  1785                           
  1786                           ;lcdCon.c: 51: PORTAbits.RA2 = 1;
  1787  00136C  8480               	bsf	3968,2,c	;volatile
  1788  00136E                     l123:
  1789                           
  1790                           ;lcdCon.c: 53: PORTAbits.RA3 = 1;
  1791  00136E  8680               	bsf	3968,3,c	;volatile
  1792                           
  1793                           ;lcdCon.c: 54: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1794  001370  0EB4               	movlw	180
  1795  001372                     u607:
  1796  001372  D000               	nop2	
  1797  001374  2EE8               	decfsz	wreg,f,c
  1798  001376  D7FD               	bra	u607
  1799                           
  1800                           ;lcdCon.c: 55: PORTAbits.RA3 = 0;
  1801  001378  9680               	bcf	3968,3,c	;volatile
  1802                           
  1803                           ;lcdCon.c: 56: }while(PORTDbits.RD7 == 1);
  1804  00137A  BE83               	btfsc	3971,7,c	;volatile
  1805  00137C  D7F8               	goto	l123
  1806                           
  1807                           ;lcdCon.c: 57: TRISD = 0x00;
  1808  00137E  0E00               	movlw	0
  1809  001380  6E95               	movwf	3989,c	;volatile
  1810  001382  0012               	return		;funcret
  1811  001384                     __end_of_ready_LCD:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           intcon	equ	0xFF2
  1818                           intcon2	equ	0xFF1
  1819                           intcon3	equ	0xFF0
  1820                           wreg	equ	0xFE8
  1821                           status	equ	0xFD8
  1822                           
  1823 ;; *************** function _display_LCD *****************
  1824 ;; Defined at:
  1825 ;;		line 60 in file "lcdCon.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  data            1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  data            1   35[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;;		_display_string_LCD
  1851 ;;		_menu
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text13
  1856  001384                     __ptext13:
  1857                           	opt stack 0
  1858  001384                     _display_LCD:
  1859                           	opt stack 26
  1860                           
  1861                           ;incstack = 0
  1862                           ;display_LCD@data stored from wreg
  1863  001384  6E24               	movwf	display_LCD@data,c
  1864                           
  1865                           ;lcdCon.c: 61: PORTD = data;
  1866  001386  C024  FF83         	movff	display_LCD@data,3971	;volatile
  1867                           
  1868                           ;lcdCon.c: 62: PORTAbits.RA1 = 1;
  1869  00138A  8280               	bsf	3968,1,c	;volatile
  1870                           
  1871                           ;lcdCon.c: 63: PORTAbits.RA2 = 0;
  1872  00138C  9480               	bcf	3968,2,c	;volatile
  1873                           
  1874                           ;lcdCon.c: 64: PORTAbits.RA3 = 1;
  1875  00138E  8680               	bsf	3968,3,c	;volatile
  1876                           
  1877                           ;lcdCon.c: 65: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1878  001390  0EB4               	movlw	180
  1879  001392                     u617:
  1880  001392  D000               	nop2	
  1881  001394  2EE8               	decfsz	wreg,f,c
  1882  001396  D7FD               	bra	u617
  1883                           
  1884                           ;lcdCon.c: 66: PORTAbits.RA3 = 0;
  1885  001398  9680               	bcf	3968,3,c	;volatile
  1886  00139A  0012               	return		;funcret
  1887  00139C                     __end_of_display_LCD:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           intcon	equ	0xFF2
  1894                           intcon2	equ	0xFF1
  1895                           intcon3	equ	0xFF0
  1896                           wreg	equ	0xFE8
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _close *****************
  1900 ;; Defined at:
  1901 ;;		line 25 in file "status.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    2
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_menu
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text14
  1930  00145E                     __ptext14:
  1931                           	opt stack 0
  1932  00145E                     _close:
  1933                           	opt stack 27
  1934                           
  1935                           ;status.c: 26: CCPR1L = 0x1F;
  1936                           
  1937                           ;incstack = 0
  1938  00145E  0E1F               	movlw	31
  1939  001460  6EBE               	movwf	4030,c	;volatile
  1940  001462  0012               	return		;funcret
  1941  001464                     __end_of_close:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           intcon	equ	0xFF2
  1948                           intcon2	equ	0xFF1
  1949                           intcon3	equ	0xFF0
  1950                           wreg	equ	0xFE8
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _clear_LCD *****************
  1954 ;; Defined at:
  1955 ;;		line 84 in file "lcdCon.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    3
  1976 ;; This function calls:
  1977 ;;		_command_LCD
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;;		_menu
  1981 ;;		_profile
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text15
  1986  001450                     __ptext15:
  1987                           	opt stack 0
  1988  001450                     _clear_LCD:
  1989                           	opt stack 26
  1990                           
  1991                           ;lcdCon.c: 85: command_LCD(0x01);
  1992                           
  1993                           ;incstack = 0
  1994  001450  0E01               	movlw	1
  1995  001452  ECCE  F009         	call	_command_LCD
  1996  001456  0012               	return		;funcret
  1997  001458                     __end_of_clear_LCD:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           intcon	equ	0xFF2
  2004                           intcon2	equ	0xFF1
  2005                           intcon3	equ	0xFF0
  2006                           wreg	equ	0xFE8
  2007                           status	equ	0xFD8
  2008                           
  2009 ;; *************** function _command_LCD *****************
  2010 ;; Defined at:
  2011 ;;		line 39 in file "lcdCon.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  x               1    wreg     unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  x               1   35[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;Total ram usage:        1 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_setup_LCD
  2036 ;;		_first_line_LCD
  2037 ;;		_second_line_LCD
  2038 ;;		_clear_LCD
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text16
  2043  00139C                     __ptext16:
  2044                           	opt stack 0
  2045  00139C                     _command_LCD:
  2046                           	opt stack 27
  2047                           
  2048                           ;incstack = 0
  2049                           ;command_LCD@x stored from wreg
  2050  00139C  6E24               	movwf	command_LCD@x,c
  2051                           
  2052                           ;lcdCon.c: 40: PORTD = x;
  2053  00139E  C024  FF83         	movff	command_LCD@x,3971	;volatile
  2054                           
  2055                           ;lcdCon.c: 41: PORTAbits.RA1 = 0;
  2056  0013A2  9280               	bcf	3968,1,c	;volatile
  2057                           
  2058                           ;lcdCon.c: 42: PORTAbits.RA2 = 0;
  2059  0013A4  9480               	bcf	3968,2,c	;volatile
  2060                           
  2061                           ;lcdCon.c: 43: PORTAbits.RA3 = 1;
  2062  0013A6  8680               	bsf	3968,3,c	;volatile
  2063                           
  2064                           ;lcdCon.c: 44: _delay((unsigned long)((.45)*(8000000/4000.0)));
  2065  0013A8  0EB4               	movlw	180
  2066  0013AA                     u627:
  2067  0013AA  D000               	nop2	
  2068  0013AC  2EE8               	decfsz	wreg,f,c
  2069  0013AE  D7FD               	bra	u627
  2070                           
  2071                           ;lcdCon.c: 45: PORTAbits.RA3 = 0;
  2072  0013B0  9680               	bcf	3968,3,c	;volatile
  2073  0013B2  0012               	return		;funcret
  2074  0013B4                     __end_of_command_LCD:
  2075                           	opt stack 0
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           intcon	equ	0xFF2
  2081                           intcon2	equ	0xFF1
  2082                           intcon3	equ	0xFF0
  2083                           wreg	equ	0xFE8
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _checkPassword *****************
  2087 ;; Defined at:
  2088 ;;		line 64 in file "profile.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  pass            1   38[COMRAM] unsigned char 
  2093 ;;  i               1   39[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      unsigned char 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2107 ;;Total ram usage:        2 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    4
  2110 ;; This function calls:
  2111 ;;		_obtainedKey
  2112 ;;		_readPassword
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text17
  2119  0012BC                     __ptext17:
  2120                           	opt stack 0
  2121  0012BC                     _checkPassword:
  2122                           	opt stack 26
  2123                           
  2124                           ;profile.c: 65: unsigned char i = 0;
  2125                           
  2126                           ;incstack = 0
  2127  0012BC  0E00               	movlw	0
  2128  0012BE  6E28               	movwf	checkPassword@i,c
  2129  0012C0                     l1165:
  2130                           
  2131                           ;profile.c: 68: unsigned char pass = readPassword(0x00+1);
  2132  0012C0  0E01               	movlw	1
  2133  0012C2  EC10  F00A         	call	_readPassword
  2134  0012C6  6E27               	movwf	checkPassword@pass,c
  2135                           
  2136                           ;profile.c: 69: if(obtainedKey() == pass){
  2137  0012C8  ECA4  F009         	call	_obtainedKey	;wreg free
  2138  0012CC  1827               	xorwf	checkPassword@pass,w,c
  2139  0012CE  A4D8               	btfss	status,2,c
  2140  0012D0  D002               	goto	l1175
  2141                           
  2142                           ;profile.c: 70: return 1;
  2143  0012D2  0E01               	movlw	1
  2144  0012D4  0012               	return	
  2145  0012D6                     l1175:
  2146  0012D6  0E02               	movlw	2
  2147  0012D8  6028               	cpfslt	checkPassword@i,c
  2148  0012DA  D007               	goto	l1183
  2149  0012DC  ECA4  F009         	call	_obtainedKey	;wreg free
  2150  0012E0  1827               	xorwf	checkPassword@pass,w,c
  2151  0012E2  B4D8               	btfsc	status,2,c
  2152  0012E4  D002               	goto	l1183
  2153                           
  2154                           ;profile.c: 72: return 0;
  2155  0012E6  0E00               	movlw	0
  2156  0012E8  0012               	return	
  2157  0012EA                     l1183:
  2158                           
  2159                           ;profile.c: 73: }
  2160                           ;profile.c: 74: i++;
  2161  0012EA  2A28               	incf	checkPassword@i,f,c
  2162                           
  2163                           ;profile.c: 75: }while(i<2);
  2164  0012EC  0E01               	movlw	1
  2165  0012EE  6428               	cpfsgt	checkPassword@i,c
  2166  0012F0  D7E7               	goto	l1165
  2167  0012F2  0012               	return	
  2168  0012F4                     __end_of_checkPassword:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           intcon	equ	0xFF2
  2175                           intcon2	equ	0xFF1
  2176                           intcon3	equ	0xFF0
  2177                           wreg	equ	0xFE8
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _readPassword *****************
  2181 ;; Defined at:
  2182 ;;		line 37 in file "profile.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  address         1    wreg     unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  address         1   36[COMRAM] unsigned char 
  2187 ;;  value           1   37[COMRAM] volatile unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      unsigned char 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;Total ram usage:        2 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    3
  2204 ;; This function calls:
  2205 ;;		_eeprom_r
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;;		_menu
  2209 ;;		_checkPassword
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text18
  2214  001420                     __ptext18:
  2215                           	opt stack 0
  2216  001420                     _readPassword:
  2217                           	opt stack 27
  2218                           
  2219                           ;incstack = 0
  2220                           ;readPassword@address stored from wreg
  2221  001420  6E25               	movwf	readPassword@address,c
  2222                           
  2223                           ;profile.c: 38: volatile unsigned char value;
  2224                           ;profile.c: 39: value = eeprom_r(address);
  2225  001422  5025               	movf	readPassword@address,w,c
  2226  001424  ECE4  F009         	call	_eeprom_r
  2227  001428  6E26               	movwf	readPassword@value,c	;volatile
  2228                           
  2229                           ;profile.c: 40: return value;
  2230  00142A  5026               	movf	readPassword@value,w,c	;volatile
  2231  00142C  0012               	return	
  2232  00142E                     __end_of_readPassword:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           intcon3	equ	0xFF0
  2241                           wreg	equ	0xFE8
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _eeprom_r *****************
  2245 ;; Defined at:
  2246 ;;		line 14 in file "profile.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  address         1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  address         1   35[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      unsigned char 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;Total ram usage:        1 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_readPassword
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text19
  2275  0013C8                     __ptext19:
  2276                           	opt stack 0
  2277  0013C8                     _eeprom_r:
  2278                           	opt stack 27
  2279                           
  2280                           ;incstack = 0
  2281                           ;eeprom_r@address stored from wreg
  2282  0013C8  6E24               	movwf	eeprom_r@address,c
  2283                           
  2284                           ;profile.c: 15: EEADR = address;
  2285  0013CA  C024  FFA9         	movff	eeprom_r@address,4009	;volatile
  2286                           
  2287                           ;profile.c: 16: EECON1bits.CFGS = 0;
  2288  0013CE  9CA6               	bcf	4006,6,c	;volatile
  2289                           
  2290                           ;profile.c: 17: EECON1bits.EEPGD = 0;
  2291  0013D0  9EA6               	bcf	4006,7,c	;volatile
  2292                           
  2293                           ;profile.c: 18: EECON1bits.RD = 1;
  2294  0013D2  80A6               	bsf	4006,0,c	;volatile
  2295                           
  2296                           ;profile.c: 19: __nop();
  2297  0013D4  F000               	nop	
  2298                           
  2299                           ;profile.c: 20: __nop();
  2300  0013D6  F000               	nop	
  2301                           
  2302                           ;profile.c: 21: return EEDATA;
  2303  0013D8  50A8               	movf	4008,w,c	;volatile
  2304  0013DA  0012               	return	
  2305  0013DC                     __end_of_eeprom_r:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           intcon	equ	0xFF2
  2312                           intcon2	equ	0xFF1
  2313                           intcon3	equ	0xFF0
  2314                           wreg	equ	0xFE8
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _alarm *****************
  2318 ;; Defined at:
  2319 ;;		line 12 in file "alarm.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    4
  2340 ;; This function calls:
  2341 ;;		_obtainedKey
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text20
  2348  001400                     __ptext20:
  2349                           	opt stack 0
  2350  001400                     _alarm:
  2351                           	opt stack 26
  2352  001400                     l302:
  2353                           
  2354                           ;alarm.c: 14: PORTEbits.RE1 = 1;
  2355  001400  8284               	bsf	3972,1,c	;volatile
  2356                           
  2357                           ;alarm.c: 16: if(PORTBbits.RB2 != 0){
  2358  001402  B481               	btfsc	3969,2,c	;volatile
  2359                           
  2360                           ;alarm.c: 17: PORTAbits.RA0 = 1;
  2361  001404  8080               	bsf	3968,0,c	;volatile
  2362                           
  2363                           ;alarm.c: 18: }
  2364                           ;alarm.c: 19: if(obtainedKey()){
  2365  001406  ECA4  F009         	call	_obtainedKey	;wreg free
  2366  00140A  0900               	iorlw	0
  2367  00140C  A4D8               	btfss	status,2,c
  2368  00140E  0012               	return	
  2369  001410  D7F7               	goto	l302
  2370  001412                     __end_of_alarm:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           intcon	equ	0xFF2
  2377                           intcon2	equ	0xFF1
  2378                           intcon3	equ	0xFF0
  2379                           wreg	equ	0xFE8
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _obtainedKey *****************
  2383 ;; Defined at:
  2384 ;;		line 73 in file "keypadCon.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  key_presiona    1   36[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      unsigned char 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;Total ram usage:        1 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    3
  2405 ;; This function calls:
  2406 ;;		_getKey
  2407 ;;		_ground
  2408 ;; This function is called by:
  2409 ;;		_menu
  2410 ;;		_profile
  2411 ;;		_checkPassword
  2412 ;;		_alarm
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text21
  2417  001348                     __ptext21:
  2418                           	opt stack 0
  2419  001348                     _obtainedKey:
  2420                           	opt stack 26
  2421                           
  2422                           ;keypadCon.c: 74: ground();
  2423                           
  2424                           ;incstack = 0
  2425  001348  EC23  F00A         	call	_ground	;wreg free
  2426                           
  2427                           ;keypadCon.c: 75: unsigned char key_presionada = 0xFF;
  2428  00134C  6825               	setf	obtainedKey@key_presionada,c
  2429  00134E                     l1101:
  2430                           
  2431                           ;keypadCon.c: 77: key_presionada = getKey();
  2432  00134E  EC88  F008         	call	_getKey	;wreg free
  2433  001352  6E25               	movwf	obtainedKey@key_presionada,c
  2434                           
  2435                           ;keypadCon.c: 78: }
  2436                           ;keypadCon.c: 79: while(key_presionada == 0xFF);
  2437  001354  2825               	incf	obtainedKey@key_presionada,w,c
  2438  001356  B4D8               	btfsc	status,2,c
  2439  001358  D7FA               	goto	l1101
  2440  00135A                     l1105:
  2441  00135A  EC88  F008         	call	_getKey	;wreg free
  2442  00135E  0AFF               	xorlw	255
  2443  001360  A4D8               	btfss	status,2,c
  2444  001362  D7FB               	goto	l1105
  2445                           
  2446                           ;keypadCon.c: 82: return key_presionada;
  2447  001364  5025               	movf	obtainedKey@key_presionada,w,c
  2448  001366  0012               	return	
  2449  001368                     __end_of_obtainedKey:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           intcon	equ	0xFF2
  2456                           intcon2	equ	0xFF1
  2457                           intcon3	equ	0xFF0
  2458                           wreg	equ	0xFE8
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _ground *****************
  2462 ;; Defined at:
  2463 ;;		line 66 in file "keypadCon.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		None
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_obtainedKey
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text22
  2492  001446                     __ptext22:
  2493                           	opt stack 0
  2494  001446                     _ground:
  2495                           	opt stack 26
  2496                           
  2497                           ;keypadCon.c: 67: LATCbits.LATC0 = 0;
  2498                           
  2499                           ;incstack = 0
  2500  001446  908B               	bcf	3979,0,c	;volatile
  2501                           
  2502                           ;keypadCon.c: 68: LATCbits.LATC1 = 0;
  2503  001448  928B               	bcf	3979,1,c	;volatile
  2504                           
  2505                           ;keypadCon.c: 69: LATEbits.LATE2 = 0;
  2506  00144A  948D               	bcf	3981,2,c	;volatile
  2507                           
  2508                           ;keypadCon.c: 70: LATCbits.LATC3 = 0;
  2509  00144C  968B               	bcf	3979,3,c	;volatile
  2510  00144E  0012               	return		;funcret
  2511  001450                     __end_of_ground:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           intcon	equ	0xFF2
  2518                           intcon2	equ	0xFF1
  2519                           intcon3	equ	0xFF0
  2520                           wreg	equ	0xFE8
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _getKey *****************
  2524 ;; Defined at:
  2525 ;;		line 21 in file "keypadCon.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      unsigned char 
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;Total ram usage:        1 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    2
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_obtainedKey
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text23
  2554  001110                     __ptext23:
  2555                           	opt stack 0
  2556  001110                     _getKey:
  2557                           	opt stack 26
  2558                           
  2559                           ;keypadCon.c: 23: LATCbits.LATC0 = 0;
  2560                           
  2561                           ;incstack = 0
  2562  001110  908B               	bcf	3979,0,c	;volatile
  2563                           
  2564                           ;keypadCon.c: 24: LATCbits.LATC1 = 1;
  2565  001112  828B               	bsf	3979,1,c	;volatile
  2566                           
  2567                           ;keypadCon.c: 25: LATEbits.LATE2 = 1;
  2568  001114  848D               	bsf	3981,2,c	;volatile
  2569                           
  2570                           ;keypadCon.c: 26: LATCbits.LATC3 = 1;
  2571  001116  868B               	bsf	3979,3,c	;volatile
  2572                           
  2573                           ;keypadCon.c: 27: _delay((unsigned long)((25)*(8000000/4000.0)));
  2574  001118  0E41               	movlw	65
  2575  00111A  6E24               	movwf	??_getKey& (0+255),c
  2576  00111C  0EEE               	movlw	238
  2577  00111E                     u637:
  2578  00111E  2EE8               	decfsz	wreg,f,c
  2579  001120  D7FE               	bra	u637
  2580  001122  2E24               	decfsz	??_getKey& (0+255),f,c
  2581  001124  D7FC               	bra	u637
  2582  001126  D000               	nop2	
  2583                           
  2584                           ;keypadCon.c: 28: if(PORTCbits.RC4 == 0) return '1';
  2585  001128  B882               	btfsc	3970,4,c	;volatile
  2586  00112A  D002               	goto	l264
  2587  00112C  0E31               	movlw	49
  2588  00112E  0012               	return	
  2589  001130                     l264:
  2590                           
  2591                           ;keypadCon.c: 29: if(PORTCbits.RC5 == 0) return '2';
  2592  001130  BA82               	btfsc	3970,5,c	;volatile
  2593  001132  D002               	goto	l266
  2594  001134  0E32               	movlw	50
  2595  001136  0012               	return	
  2596  001138                     l266:
  2597                           
  2598                           ;keypadCon.c: 30: if(PORTCbits.RC6 == 0) return '3';
  2599  001138  BC82               	btfsc	3970,6,c	;volatile
  2600  00113A  D002               	goto	l267
  2601  00113C  0E33               	movlw	51
  2602  00113E  0012               	return	
  2603  001140                     l267:
  2604                           
  2605                           ;keypadCon.c: 31: if(PORTCbits.RC7 == 0) return 'A';
  2606  001140  BE82               	btfsc	3970,7,c	;volatile
  2607  001142  D002               	goto	l268
  2608  001144  0E41               	movlw	65
  2609  001146  0012               	return	
  2610  001148                     l268:
  2611                           
  2612                           ;keypadCon.c: 33: LATCbits.LATC0 = 1;
  2613  001148  808B               	bsf	3979,0,c	;volatile
  2614                           
  2615                           ;keypadCon.c: 34: LATCbits.LATC1 = 0;
  2616  00114A  928B               	bcf	3979,1,c	;volatile
  2617                           
  2618                           ;keypadCon.c: 35: LATEbits.LATE2 = 1;
  2619  00114C  848D               	bsf	3981,2,c	;volatile
  2620                           
  2621                           ;keypadCon.c: 36: LATCbits.LATC3 = 1;
  2622  00114E  868B               	bsf	3979,3,c	;volatile
  2623                           
  2624                           ;keypadCon.c: 37: _delay((unsigned long)((25)*(8000000/4000.0)));
  2625  001150  0E41               	movlw	65
  2626  001152  6E24               	movwf	??_getKey& (0+255),c
  2627  001154  0EEE               	movlw	238
  2628  001156                     u647:
  2629  001156  2EE8               	decfsz	wreg,f,c
  2630  001158  D7FE               	bra	u647
  2631  00115A  2E24               	decfsz	??_getKey& (0+255),f,c
  2632  00115C  D7FC               	bra	u647
  2633  00115E  D000               	nop2	
  2634                           
  2635                           ;keypadCon.c: 38: if(PORTCbits.RC4 == 0) return '4';
  2636  001160  B882               	btfsc	3970,4,c	;volatile
  2637  001162  D002               	goto	l269
  2638  001164  0E34               	movlw	52
  2639  001166  0012               	return	
  2640  001168                     l269:
  2641                           
  2642                           ;keypadCon.c: 39: if(PORTCbits.RC5 == 0) return '5';
  2643  001168  BA82               	btfsc	3970,5,c	;volatile
  2644  00116A  D002               	goto	l270
  2645  00116C  0E35               	movlw	53
  2646  00116E  0012               	return	
  2647  001170                     l270:
  2648                           
  2649                           ;keypadCon.c: 40: if(PORTCbits.RC6 == 0) return '6';
  2650  001170  BC82               	btfsc	3970,6,c	;volatile
  2651  001172  D002               	goto	l271
  2652  001174  0E36               	movlw	54
  2653  001176  0012               	return	
  2654  001178                     l271:
  2655                           
  2656                           ;keypadCon.c: 41: if(PORTCbits.RC7 == 0) return 'B';
  2657  001178  BE82               	btfsc	3970,7,c	;volatile
  2658  00117A  D002               	goto	l272
  2659  00117C  0E42               	movlw	66
  2660  00117E  0012               	return	
  2661  001180                     l272:
  2662                           
  2663                           ;keypadCon.c: 43: LATCbits.LATC0 = 1;
  2664  001180  808B               	bsf	3979,0,c	;volatile
  2665                           
  2666                           ;keypadCon.c: 44: LATCbits.LATC1 = 1;
  2667  001182  828B               	bsf	3979,1,c	;volatile
  2668                           
  2669                           ;keypadCon.c: 45: LATEbits.LATE2 = 0;
  2670  001184  948D               	bcf	3981,2,c	;volatile
  2671                           
  2672                           ;keypadCon.c: 46: LATCbits.LATC3 = 1;
  2673  001186  868B               	bsf	3979,3,c	;volatile
  2674                           
  2675                           ;keypadCon.c: 47: _delay((unsigned long)((25)*(8000000/4000.0)));
  2676  001188  0E41               	movlw	65
  2677  00118A  6E24               	movwf	??_getKey& (0+255),c
  2678  00118C  0EEE               	movlw	238
  2679  00118E                     u657:
  2680  00118E  2EE8               	decfsz	wreg,f,c
  2681  001190  D7FE               	bra	u657
  2682  001192  2E24               	decfsz	??_getKey& (0+255),f,c
  2683  001194  D7FC               	bra	u657
  2684  001196  D000               	nop2	
  2685                           
  2686                           ;keypadCon.c: 48: if(PORTCbits.RC4 == 0) return '7';
  2687  001198  B882               	btfsc	3970,4,c	;volatile
  2688  00119A  D002               	goto	l273
  2689  00119C  0E37               	movlw	55
  2690  00119E  0012               	return	
  2691  0011A0                     l273:
  2692                           
  2693                           ;keypadCon.c: 49: if(PORTCbits.RC5 == 0) return '8';
  2694  0011A0  BA82               	btfsc	3970,5,c	;volatile
  2695  0011A2  D002               	goto	l274
  2696  0011A4  0E38               	movlw	56
  2697  0011A6  0012               	return	
  2698  0011A8                     l274:
  2699                           
  2700                           ;keypadCon.c: 50: if(PORTCbits.RC6 == 0) return '9';
  2701  0011A8  BC82               	btfsc	3970,6,c	;volatile
  2702  0011AA  D002               	goto	l275
  2703  0011AC  0E39               	movlw	57
  2704  0011AE  0012               	return	
  2705  0011B0                     l275:
  2706                           
  2707                           ;keypadCon.c: 51: if(PORTCbits.RC7 == 0) return 'C';
  2708  0011B0  BE82               	btfsc	3970,7,c	;volatile
  2709  0011B2  D002               	goto	l276
  2710  0011B4  0E43               	movlw	67
  2711  0011B6  0012               	return	
  2712  0011B8                     l276:
  2713                           
  2714                           ;keypadCon.c: 53: LATCbits.LATC0 = 1;
  2715  0011B8  808B               	bsf	3979,0,c	;volatile
  2716                           
  2717                           ;keypadCon.c: 54: LATCbits.LATC1 = 1;
  2718  0011BA  828B               	bsf	3979,1,c	;volatile
  2719                           
  2720                           ;keypadCon.c: 55: LATEbits.LATE2 = 1;
  2721  0011BC  848D               	bsf	3981,2,c	;volatile
  2722                           
  2723                           ;keypadCon.c: 56: LATCbits.LATC3 = 0;
  2724  0011BE  968B               	bcf	3979,3,c	;volatile
  2725                           
  2726                           ;keypadCon.c: 57: _delay((unsigned long)((25)*(8000000/4000.0)));
  2727  0011C0  0E41               	movlw	65
  2728  0011C2  6E24               	movwf	??_getKey& (0+255),c
  2729  0011C4  0EEE               	movlw	238
  2730  0011C6                     u667:
  2731  0011C6  2EE8               	decfsz	wreg,f,c
  2732  0011C8  D7FE               	bra	u667
  2733  0011CA  2E24               	decfsz	??_getKey& (0+255),f,c
  2734  0011CC  D7FC               	bra	u667
  2735  0011CE  D000               	nop2	
  2736                           
  2737                           ;keypadCon.c: 58: if(PORTCbits.RC4 == 0) return '*';
  2738  0011D0  B882               	btfsc	3970,4,c	;volatile
  2739  0011D2  D002               	goto	l277
  2740  0011D4  0E2A               	movlw	42
  2741  0011D6  0012               	return	
  2742  0011D8                     l277:
  2743                           
  2744                           ;keypadCon.c: 59: if(PORTCbits.RC5 == 0) return '0';
  2745  0011D8  BA82               	btfsc	3970,5,c	;volatile
  2746  0011DA  D002               	goto	l278
  2747  0011DC  0E30               	movlw	48
  2748  0011DE  0012               	return	
  2749  0011E0                     l278:
  2750                           
  2751                           ;keypadCon.c: 60: if(PORTCbits.RC6 == 0) return '#';
  2752  0011E0  BC82               	btfsc	3970,6,c	;volatile
  2753  0011E2  D002               	goto	l279
  2754  0011E4  0E23               	movlw	35
  2755  0011E6  0012               	return	
  2756  0011E8                     l279:
  2757                           
  2758                           ;keypadCon.c: 61: if(PORTCbits.RC7 == 0) return 'D';
  2759  0011E8  BE82               	btfsc	3970,7,c	;volatile
  2760  0011EA  D002               	goto	l1069
  2761  0011EC  0E44               	movlw	68
  2762  0011EE  0012               	return	
  2763  0011F0                     l1069:
  2764                           
  2765                           ;keypadCon.c: 63: return 0xFF;
  2766  0011F0  0EFF               	movlw	255
  2767  0011F2  0012               	return	
  2768  0011F4                     __end_of_getKey:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           intcon	equ	0xFF2
  2775                           intcon2	equ	0xFF1
  2776                           intcon3	equ	0xFF0
  2777                           wreg	equ	0xFE8
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _luz *****************
  2781 ;; Defined at:
  2782 ;;		line 111 in file "mainCode.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:       19 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		Interrupt level 1
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	intcodelo
  2811  000018                     __pintcodelo:
  2812                           	opt stack 0
  2813  000018                     _luz:
  2814                           	opt stack 26
  2815                           
  2816                           ;incstack = 0
  2817  000018  802D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2818  00001A  CFD8 F013          	movff	status,??_luz+2
  2819  00001E  CFE8 F014          	movff	wreg,??_luz+3
  2820  000022  CFE0 F015          	movff	bsr,??_luz+4
  2821  000026  CFFA F016          	movff	pclath,??_luz+5
  2822  00002A  CFFB F017          	movff	pclatu,??_luz+6
  2823  00002E  CFE9 F018          	movff	fsr0l,??_luz+7
  2824  000032  CFEA F019          	movff	fsr0h,??_luz+8
  2825  000036  CFE1 F01A          	movff	fsr1l,??_luz+9
  2826  00003A  CFE2 F01B          	movff	fsr1h,??_luz+10
  2827  00003E  CFD9 F01C          	movff	fsr2l,??_luz+11
  2828  000042  CFDA F01D          	movff	fsr2h,??_luz+12
  2829  000046  CFF3 F01E          	movff	prodl,??_luz+13
  2830  00004A  CFF4 F01F          	movff	prodh,??_luz+14
  2831  00004E  CFF6 F020          	movff	tblptrl,??_luz+15
  2832  000052  CFF7 F021          	movff	tblptrh,??_luz+16
  2833  000056  CFF8 F022          	movff	tblptru,??_luz+17
  2834  00005A  CFF5 F023          	movff	tablat,??_luz+18
  2835                           
  2836                           ;mainCode.c: 112: INTCON3bits.INT1IF = 0;
  2837  00005E  90F0               	bcf	intcon3,0,c	;volatile
  2838                           
  2839                           ;mainCode.c: 114: PORTAbits.RA5=1;
  2840  000060  8A80               	bsf	3968,5,c	;volatile
  2841                           
  2842                           ;mainCode.c: 115: _delay((unsigned long)((3000)*(8000000/4000.0)));
  2843  000062  0E1F               	movlw	31
  2844  000064  6E12               	movwf	(??_luz+1)& (0+255),c
  2845  000066  0E71               	movlw	113
  2846  000068  6E11               	movwf	??_luz& (0+255),c
  2847  00006A  0E1E               	movlw	30
  2848  00006C                     i1u67_27:
  2849  00006C  2EE8               	decfsz	wreg,f,c
  2850  00006E  D7FE               	bra	i1u67_27
  2851  000070  2E11               	decfsz	??_luz& (0+255),f,c
  2852  000072  D7FC               	bra	i1u67_27
  2853  000074  2E12               	decfsz	(??_luz+1)& (0+255),f,c
  2854  000076  D7FA               	bra	i1u67_27
  2855  000078  D000               	nop2	
  2856                           
  2857                           ;mainCode.c: 116: PORTAbits.RA5=0;
  2858  00007A  9A80               	bcf	3968,5,c	;volatile
  2859                           
  2860                           ;mainCode.c: 118: return;
  2861  00007C  C023  FFF5         	movff	??_luz+18,tablat
  2862  000080  C022  FFF8         	movff	??_luz+17,tblptru
  2863  000084  C021  FFF7         	movff	??_luz+16,tblptrh
  2864  000088  C020  FFF6         	movff	??_luz+15,tblptrl
  2865  00008C  C01F  FFF4         	movff	??_luz+14,prodh
  2866  000090  C01E  FFF3         	movff	??_luz+13,prodl
  2867  000094  C01D  FFDA         	movff	??_luz+12,fsr2h
  2868  000098  C01C  FFD9         	movff	??_luz+11,fsr2l
  2869  00009C  C01B  FFE2         	movff	??_luz+10,fsr1h
  2870  0000A0  C01A  FFE1         	movff	??_luz+9,fsr1l
  2871  0000A4  C019  FFEA         	movff	??_luz+8,fsr0h
  2872  0000A8  C018  FFE9         	movff	??_luz+7,fsr0l
  2873  0000AC  C017  FFFB         	movff	??_luz+6,pclatu
  2874  0000B0  C016  FFFA         	movff	??_luz+5,pclath
  2875  0000B4  C015  FFE0         	movff	??_luz+4,bsr
  2876  0000B8  C014  FFE8         	movff	??_luz+3,wreg
  2877  0000BC  C013  FFD8         	movff	??_luz+2,status
  2878  0000C0  902D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2879  0000C2  0010               	retfie	
  2880  0000C4                     __end_of_luz:
  2881                           	opt stack 0
  2882                           pclatu	equ	0xFFB
  2883                           pclath	equ	0xFFA
  2884                           tblptru	equ	0xFF8
  2885                           tblptrh	equ	0xFF7
  2886                           tblptrl	equ	0xFF6
  2887                           tablat	equ	0xFF5
  2888                           prodh	equ	0xFF4
  2889                           prodl	equ	0xFF3
  2890                           intcon	equ	0xFF2
  2891                           intcon2	equ	0xFF1
  2892                           intcon3	equ	0xFF0
  2893                           fsr0h	equ	0xFEA
  2894                           fsr0l	equ	0xFE9
  2895                           wreg	equ	0xFE8
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           bsr	equ	0xFE0
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _backup *****************
  2904 ;; Defined at:
  2905 ;;		line 120 in file "mainCode.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;Total ram usage:       16 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		Interrupt level 2
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	intcode
  2933  000008                     __pintcode:
  2934                           	opt stack 0
  2935  000008                     _backup:
  2936                           	opt stack 26
  2937                           
  2938                           ;incstack = 0
  2939  000008  822D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2940  00000A  ED85  F007         	call	int_func,f	;refresh shadow registers
  2941                           pclatu	equ	0xFFB
  2942                           pclath	equ	0xFFA
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon	equ	0xFF2
  2950                           intcon2	equ	0xFF1
  2951                           intcon3	equ	0xFF0
  2952                           fsr0h	equ	0xFEA
  2953                           fsr0l	equ	0xFE9
  2954                           wreg	equ	0xFE8
  2955                           fsr1h	equ	0xFE2
  2956                           fsr1l	equ	0xFE1
  2957                           bsr	equ	0xFE0
  2958                           fsr2h	equ	0xFDA
  2959                           fsr2l	equ	0xFD9
  2960                           status	equ	0xFD8
  2961                           
  2962                           	psect	intcode_body
  2963  000F0A                     __pintcode_body:
  2964                           	opt stack 26
  2965  000F0A                     int_func:
  2966                           	opt stack 26
  2967  000F0A  0006               	pop		; remove dummy address from shadow register refresh
  2968  000F0C  CFFA F003          	movff	pclath,??_backup+2
  2969  000F10  CFFB F004          	movff	pclatu,??_backup+3
  2970  000F14  CFE9 F005          	movff	fsr0l,??_backup+4
  2971  000F18  CFEA F006          	movff	fsr0h,??_backup+5
  2972  000F1C  CFE1 F007          	movff	fsr1l,??_backup+6
  2973  000F20  CFE2 F008          	movff	fsr1h,??_backup+7
  2974  000F24  CFD9 F009          	movff	fsr2l,??_backup+8
  2975  000F28  CFDA F00A          	movff	fsr2h,??_backup+9
  2976  000F2C  CFF3 F00B          	movff	prodl,??_backup+10
  2977  000F30  CFF4 F00C          	movff	prodh,??_backup+11
  2978  000F34  CFF6 F00D          	movff	tblptrl,??_backup+12
  2979  000F38  CFF7 F00E          	movff	tblptrh,??_backup+13
  2980  000F3C  CFF8 F00F          	movff	tblptru,??_backup+14
  2981  000F40  CFF5 F010          	movff	tablat,??_backup+15
  2982                           
  2983                           ;mainCode.c: 121: INTCONbits.INT0IF = 0;
  2984  000F44  92F2               	bcf	intcon,1,c	;volatile
  2985                           
  2986                           ;mainCode.c: 122: PORTAbits.RA5=0;
  2987  000F46  9A80               	bcf	3968,5,c	;volatile
  2988                           
  2989                           ;mainCode.c: 124: PORTEbits.RE0=1;
  2990  000F48  8084               	bsf	3972,0,c	;volatile
  2991                           
  2992                           ;mainCode.c: 125: _delay((unsigned long)((500)*(8000000/4000.0)));
  2993  000F4A  0E06               	movlw	6
  2994  000F4C  6E02               	movwf	(??_backup+1)& (0+255),c
  2995  000F4E  0E13               	movlw	19
  2996  000F50  6E01               	movwf	??_backup& (0+255),c
  2997  000F52  0EAE               	movlw	174
  2998  000F54                     i2u68_47:
  2999  000F54  2EE8               	decfsz	wreg,f,c
  3000  000F56  D7FE               	bra	i2u68_47
  3001  000F58  2E01               	decfsz	??_backup& (0+255),f,c
  3002  000F5A  D7FC               	bra	i2u68_47
  3003  000F5C  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3004  000F5E  D7FA               	bra	i2u68_47
  3005                           
  3006                           ;mainCode.c: 126: PORTEbits.RE0=0;
  3007  000F60  9084               	bcf	3972,0,c	;volatile
  3008                           
  3009                           ;mainCode.c: 127: _delay((unsigned long)((500)*(8000000/4000.0)));
  3010  000F62  0E06               	movlw	6
  3011  000F64  6E02               	movwf	(??_backup+1)& (0+255),c
  3012  000F66  0E13               	movlw	19
  3013  000F68  6E01               	movwf	??_backup& (0+255),c
  3014  000F6A  0EAE               	movlw	174
  3015  000F6C                     i2u69_47:
  3016  000F6C  2EE8               	decfsz	wreg,f,c
  3017  000F6E  D7FE               	bra	i2u69_47
  3018  000F70  2E01               	decfsz	??_backup& (0+255),f,c
  3019  000F72  D7FC               	bra	i2u69_47
  3020  000F74  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3021  000F76  D7FA               	bra	i2u69_47
  3022                           
  3023                           ;mainCode.c: 128: PORTEbits.RE0=1;
  3024  000F78  8084               	bsf	3972,0,c	;volatile
  3025                           
  3026                           ;mainCode.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
  3027  000F7A  0E06               	movlw	6
  3028  000F7C  6E02               	movwf	(??_backup+1)& (0+255),c
  3029  000F7E  0E13               	movlw	19
  3030  000F80  6E01               	movwf	??_backup& (0+255),c
  3031  000F82  0EAE               	movlw	174
  3032  000F84                     i2u70_47:
  3033  000F84  2EE8               	decfsz	wreg,f,c
  3034  000F86  D7FE               	bra	i2u70_47
  3035  000F88  2E01               	decfsz	??_backup& (0+255),f,c
  3036  000F8A  D7FC               	bra	i2u70_47
  3037  000F8C  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3038  000F8E  D7FA               	bra	i2u70_47
  3039                           
  3040                           ;mainCode.c: 130: PORTEbits.RE0=0;
  3041  000F90  9084               	bcf	3972,0,c	;volatile
  3042                           
  3043                           ;mainCode.c: 131: _delay((unsigned long)((500)*(8000000/4000.0)));
  3044  000F92  0E06               	movlw	6
  3045  000F94  6E02               	movwf	(??_backup+1)& (0+255),c
  3046  000F96  0E13               	movlw	19
  3047  000F98  6E01               	movwf	??_backup& (0+255),c
  3048  000F9A  0EAE               	movlw	174
  3049  000F9C                     i2u71_47:
  3050  000F9C  2EE8               	decfsz	wreg,f,c
  3051  000F9E  D7FE               	bra	i2u71_47
  3052  000FA0  2E01               	decfsz	??_backup& (0+255),f,c
  3053  000FA2  D7FC               	bra	i2u71_47
  3054  000FA4  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3055  000FA6  D7FA               	bra	i2u71_47
  3056                           
  3057                           ;mainCode.c: 132: PORTEbits.RE0=1;
  3058  000FA8  8084               	bsf	3972,0,c	;volatile
  3059                           
  3060                           ;mainCode.c: 133: _delay((unsigned long)((500)*(8000000/4000.0)));
  3061  000FAA  0E06               	movlw	6
  3062  000FAC  6E02               	movwf	(??_backup+1)& (0+255),c
  3063  000FAE  0E13               	movlw	19
  3064  000FB0  6E01               	movwf	??_backup& (0+255),c
  3065  000FB2  0EAE               	movlw	174
  3066  000FB4                     i2u72_47:
  3067  000FB4  2EE8               	decfsz	wreg,f,c
  3068  000FB6  D7FE               	bra	i2u72_47
  3069  000FB8  2E01               	decfsz	??_backup& (0+255),f,c
  3070  000FBA  D7FC               	bra	i2u72_47
  3071  000FBC  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3072  000FBE  D7FA               	bra	i2u72_47
  3073                           
  3074                           ;mainCode.c: 134: PORTEbits.RE0=0;
  3075  000FC0  9084               	bcf	3972,0,c	;volatile
  3076                           
  3077                           ;mainCode.c: 135: _delay((unsigned long)((500)*(8000000/4000.0)));
  3078  000FC2  0E06               	movlw	6
  3079  000FC4  6E02               	movwf	(??_backup+1)& (0+255),c
  3080  000FC6  0E13               	movlw	19
  3081  000FC8  6E01               	movwf	??_backup& (0+255),c
  3082  000FCA  0EAE               	movlw	174
  3083  000FCC                     i2u73_47:
  3084  000FCC  2EE8               	decfsz	wreg,f,c
  3085  000FCE  D7FE               	bra	i2u73_47
  3086  000FD0  2E01               	decfsz	??_backup& (0+255),f,c
  3087  000FD2  D7FC               	bra	i2u73_47
  3088  000FD4  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3089  000FD6  D7FA               	bra	i2u73_47
  3090                           
  3091                           ;mainCode.c: 136: return;
  3092  000FD8  C010  FFF5         	movff	??_backup+15,tablat
  3093  000FDC  C00F  FFF8         	movff	??_backup+14,tblptru
  3094  000FE0  C00E  FFF7         	movff	??_backup+13,tblptrh
  3095  000FE4  C00D  FFF6         	movff	??_backup+12,tblptrl
  3096  000FE8  C00C  FFF4         	movff	??_backup+11,prodh
  3097  000FEC  C00B  FFF3         	movff	??_backup+10,prodl
  3098  000FF0  C00A  FFDA         	movff	??_backup+9,fsr2h
  3099  000FF4  C009  FFD9         	movff	??_backup+8,fsr2l
  3100  000FF8  C008  FFE2         	movff	??_backup+7,fsr1h
  3101  000FFC  C007  FFE1         	movff	??_backup+6,fsr1l
  3102  001000  C006  FFEA         	movff	??_backup+5,fsr0h
  3103  001004  C005  FFE9         	movff	??_backup+4,fsr0l
  3104  001008  C004  FFFB         	movff	??_backup+3,pclatu
  3105  00100C  C003  FFFA         	movff	??_backup+2,pclath
  3106  001010  922D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3107  001012  0011               	retfie		f
  3108  001014                     __end_of_backup:
  3109                           	opt stack 0
  3110                           pclatu	equ	0xFFB
  3111                           pclath	equ	0xFFA
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           intcon2	equ	0xFF1
  3120                           intcon3	equ	0xFF0
  3121                           fsr0h	equ	0xFEA
  3122                           fsr0l	equ	0xFE9
  3123                           wreg	equ	0xFE8
  3124                           fsr1h	equ	0xFE2
  3125                           fsr1l	equ	0xFE1
  3126                           bsr	equ	0xFE0
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           pclatu	equ	0xFFB
  3131                           pclath	equ	0xFFA
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           intcon	equ	0xFF2
  3139                           intcon2	equ	0xFF1
  3140                           intcon3	equ	0xFF0
  3141                           fsr0h	equ	0xFEA
  3142                           fsr0l	equ	0xFE9
  3143                           wreg	equ	0xFE8
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           bsr	equ	0xFE0
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151                           	psect	rparam
  3152  0000                     pclatu	equ	0xFFB
  3153                           pclath	equ	0xFFA
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           intcon2	equ	0xFF1
  3162                           intcon3	equ	0xFF0
  3163                           fsr0h	equ	0xFEA
  3164                           fsr0l	equ	0xFE9
  3165                           wreg	equ	0xFE8
  3166                           fsr1h	equ	0xFE2
  3167                           fsr1l	equ	0xFE1
  3168                           bsr	equ	0xFE0
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173                           	psect	temp
  3174  00002D                     btemp:
  3175                           	opt stack 0
  3176  00002D                     	ds	1
  3177  0000                     int$flags	set	btemp
  3178                           pclatu	equ	0xFFB
  3179                           pclath	equ	0xFFA
  3180                           tblptru	equ	0xFF8
  3181                           tblptrh	equ	0xFF7
  3182                           tblptrl	equ	0xFF6
  3183                           tablat	equ	0xFF5
  3184                           prodh	equ	0xFF4
  3185                           prodl	equ	0xFF3
  3186                           intcon	equ	0xFF2
  3187                           intcon2	equ	0xFF1
  3188                           intcon3	equ	0xFF0
  3189                           fsr0h	equ	0xFEA
  3190                           fsr0l	equ	0xFE9
  3191                           wreg	equ	0xFE8
  3192                           fsr1h	equ	0xFE2
  3193                           fsr1l	equ	0xFE1
  3194                           bsr	equ	0xFE0
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8


Data Sizes:
    Strings     218
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    display_string_LCD@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[14]), STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[16]), 
		 -> STR_12(CODE[13]), STR_11(CODE[10]), STR_10(CODE[12]), STR_9(CODE[14]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_profile
    _welcome->_display_string_LCD
    _setup_LCD->_command_LCD
    _profile->_writePassword
    _writePassword->_eeprom_w
    _writePassword->_obtainedKey
    _menu->_display_string_LCD
    _menu->_readPassword
    _second_line_LCD->_command_LCD
    _first_line_LCD->_command_LCD
    _display_string_LCD->_display_LCD
    _clear_LCD->_command_LCD
    _checkPassword->_readPassword
    _readPassword->_eeprom_r
    _alarm->_obtainedKey
    _obtainedKey->_getKey

Critical Paths under _luz in COMRAM

    None.

Critical Paths under _backup in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _luz in BANK0

    None.

Critical Paths under _backup in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _luz in BANK1

    None.

Critical Paths under _backup in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _luz in BANK2

    None.

Critical Paths under _backup in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _luz in BANK3

    None.

Critical Paths under _backup in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _luz in BANK4

    None.

Critical Paths under _backup in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _luz in BANK5

    None.

Critical Paths under _backup in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _luz in BANK6

    None.

Critical Paths under _backup in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _luz in BANK7

    None.

Critical Paths under _backup in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _luz in BANK8

    None.

Critical Paths under _backup in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _luz in BANK9

    None.

Critical Paths under _backup in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _luz in BANK10

    None.

Critical Paths under _backup in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _luz in BANK11

    None.

Critical Paths under _backup in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _luz in BANK12

    None.

Critical Paths under _backup in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5120
                                             41 COMRAM     2     2      0
                              _alarm
                      _checkPassword
                          _clear_LCD
                        _display_LCD
                 _display_string_LCD
                               _menu
                            _profile
                            _pwmInit
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
                          _setup_LCD
                            _welcome
 ---------------------------------------------------------------------------------
 (1) _welcome                                              0     0      0    1084
                 _display_string_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _setup_LCD                                            2     2      0      15
                                             36 COMRAM     2     2      0
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _profile                                              2     2      0    1463
                                             39 COMRAM     2     2      0
                          _clear_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                          _ready_LCD
                    _second_line_LCD
                      _writePassword
 ---------------------------------------------------------------------------------
 (2) _writePassword                                        2     1      1     280
                                             37 COMRAM     2     1      1
                           _eeprom_w
                        _obtainedKey (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_w                                             2     1      1     108
                                             35 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    1219
                                             38 COMRAM     2     2      0
                          _clear_LCD
                              _close
                        _display_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                               _open
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
 ---------------------------------------------------------------------------------
 (1) _second_line_LCD                                      0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _first_line_LCD                                       0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _display_string_LCD                                   2     0      2    1084
                                             36 COMRAM     2     0      2
                        _display_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _ready_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            0     0      0      15
                        _command_LCD
 ---------------------------------------------------------------------------------
 (2) _command_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0     135
                                             38 COMRAM     2     2      0
                        _obtainedKey
                       _readPassword
 ---------------------------------------------------------------------------------
 (1) _readPassword                                         2     2      0      45
                                             36 COMRAM     2     2      0
                           _eeprom_r
 ---------------------------------------------------------------------------------
 (2) _eeprom_r                                             1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _alarm                                                0     0      0      30
                        _obtainedKey
 ---------------------------------------------------------------------------------
 (2) _obtainedKey                                          1     1      0      30
                                             36 COMRAM     1     1      0
                             _getKey
                             _ground
 ---------------------------------------------------------------------------------
 (3) _ground                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getKey                                               1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _luz                                                 19    19      0       0
                                             16 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _backup                                              16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarm
     _obtainedKey
       _getKey
       _ground
   _checkPassword
     _obtainedKey
       _getKey
       _ground
     _readPassword
       _eeprom_r
   _clear_LCD
     _command_LCD
   _display_LCD
   _display_string_LCD
     _display_LCD
     _ready_LCD
   _menu
     _clear_LCD
       _command_LCD
     _close
     _display_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _open
     _readPassword
       _eeprom_r
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
   _profile
     _clear_LCD
       _command_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
     _writePassword
       _eeprom_w
       _obtainedKey (ARG)
         _getKey
         _ground
   _pwmInit
   _readPassword
     _eeprom_r
   _ready_LCD
   _second_line_LCD
     _command_LCD
     _ready_LCD
   _setup_LCD
     _command_LCD
     _ready_LCD
   _welcome
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _ready_LCD

 _luz (ROOT)

 _backup (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      2C       1       46.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      20        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May  7 17:21:22 2017

               ?_display_LCD 0001                           l88 0EA8        __end_of_checkPassword 12F4  
                         bsr 000FE0                          l123 136E                          l302 1400  
                        l214 133E                          l270 1170                          l271 1178  
                        l272 1180                          l264 1130                          l273 11A0  
                        l274 11A8                          l266 1138                          l275 11B0  
                        l267 1140                          l276 11B8                          l268 1148  
                        l277 11D8                          l269 1168                          l278 11E0  
                        l279 11E8                          _PR2 000FCB                          u607 1372  
                        u617 1392                          u627 13AA                          u637 111E  
                        u647 1156                          u567 0ECA                          u657 118E  
                        u577 127E                          u667 11C6                          u587 129A  
                        u597 10FC                          _luz 0018                          wreg 000FE8  
               __CFG_LVP$OFF 000000       display_string_LCD@data 0025                 __CFG_WDT$OFF 000000  
                       l1101 134E                         l1105 135A                         l1069 11F0  
                       l1165 12C0                         l1405 1014                         l1183 12EA  
                       l1175 12D6                         l1361 12F8                         l1441 10BA  
                       l1427 1078                         l1365 130C                         l1393 124C  
                       l1399 1268                         l1487 0E3E                         l1497 0E74  
                       ?_luz 0001                         STR_1 0D71                         STR_2 0D62  
                       STR_3 0DAA                         STR_4 0D9C                         STR_5 0D52  
                       STR_6 0D42                         STR_7 0D32                         STR_8 0DC5  
                       STR_9 0D8E                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                       _flag 002C                         _main 0DDC                         _menu 1014  
                       _open 1458                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr2h 000FDA                         fsr0l 000FE9                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 002D                eeprom_w@value 0024  
                       prodh 000FF4                         prodl 000FF3            ??_second_line_LCD 0025  
                       start 00C4                __CFG_MCLRE$ON 000000                 command_LCD@x 0024  
               ___param_bank 000000                        ??_luz 0011                        ?_main 0001  
                      ?_menu 0001                        _EEADR 000FA9                        STR_10 0DC5  
                      STR_11 0DD1                        ?_open 0001                        STR_12 0DB8  
                      STR_13 0D22                        STR_14 0D01                        STR_15 0D12  
                      STR_16 0D80                        _CMCON 000FB4                        _T2CON 000FCA  
    __size_of_first_line_LCD 000C                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _alarm 1400  
                      _close 145E                 ?_obtainedKey 0001                        pclath 000FFA  
                      tablat 000FF5              __end_of_pwmInit 1400              __end_of_welcome 13EE  
            __end_of_profile 1272                        status 000FD8              __initialization 13B4  
               __end_of_main 0F0A         writePassword@address 0026                 __end_of_menu 1110  
               __end_of_open 145E                       ??_main 002A                       ??_menu 0027  
                     ??_open 0024                __activetblptr 000001                       ?_alarm 0001  
              ?_readPassword 0001                       ?_close 0001                       _ADCON1 000FC1  
                     _EEDATA 000FA8                       _CCPR1L 000FBE                       _EECON2 000FA7  
                     _OSCCON 000FD3              eeprom_r@address 0024             __end_of_eeprom_r 13DC  
           __end_of_eeprom_w 1348                       _backup 0008              eeprom_w@address 0025  
       __size_of_command_LCD 0018                       _getKey 1110            readPassword@value 0026  
                     _ground 1446         __size_of_display_LCD 0018                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
             ??_readPassword 0025                    ??_pwmInit 0024                    ??_welcome 0027  
                  ??_profile 0028                   __accesstop 0060      __end_of__initialization 13B6  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001   __end_of_display_string_LCD 1324  
     __size_of_writePassword 000E               __pcstackCOMRAM 0001                __end_of_alarm 1412  
              __end_of_close 1464           __size_of_clear_LCD 0008               _first_line_LCD 143A  
            _second_line_LCD 142E                      ??_alarm 0026                      ??_close 0024  
       __size_of_obtainedKey 0020           __size_of_ready_LCD 001C                      ?_backup 0001  
                    ?_getKey 0001                      _CCP1CON 000FBD                      ?_ground 0001  
     __end_of_first_line_LCD 1446           __size_of_setup_LCD 004A                _writePassword 1412  
                    i1u67_27 006C                      i2u70_47 0F84                      i2u71_47 0F9C  
                    i2u72_47 0FB4                      i2u73_47 0FCC                      i2u68_47 0F54  
                    i2u69_47 0F6C                    ?_eeprom_r 0001                    ?_eeprom_w 0024  
          __end_of_clear_LCD 1458       __size_of_checkPassword 0038                      __Hparam 0000  
                    __Lparam 0000         __end_of_readPassword 142E              __size_of_backup 100C  
            __size_of_getKey 00E4                 __psmallconst 0D00                      __pcinit 13B4  
            ?_first_line_LCD 0001                      __ramtop 0D00              __size_of_ground 000A  
                    __ptext0 0DDC                      __ptext1 13DC                      __ptext2 1272  
                    __ptext3 13EE                      __ptext4 11F4                      __ptext5 1412  
                    __ptext6 1324                      __ptext7 1014                      __ptext8 142E  
                    __ptext9 1458      __end_of_second_line_LCD 143A               ?_writePassword 0026  
               __size_of_luz 00AC            __end_of_ready_LCD 1384    obtainedKey@key_presionada 0025  
                    _pwmInit 13EE                      _welcome 13DC                      _profile 11F4  
                 ??_eeprom_r 0024                   ??_eeprom_w 0025               __pintcode_body 0F0A  
       end_of_initialization 13B6                      int_func 0F0A            __end_of_setup_LCD 12BC  
             checkPassword@i 0028                _checkPassword 12BC                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84                ??_command_LCD 0024                ??_display_LCD 0024  
             __end_of_backup 1014               ?_checkPassword 0001               __end_of_getKey 11F4  
            ??_writePassword 0027               __end_of_ground 1450             ?_second_line_LCD 0001  
         _display_string_LCD 12F4          start_initialization 13B4                  __end_of_luz 00C4  
        ?_display_string_LCD 0025             __CFG_OSC$IRCIO67 000000        __size_of_readPassword 000E  
       ??_display_string_LCD 0027                     ??_backup 0001                     ??_getKey 0024  
                   ??_ground 0024          __end_of_command_LCD 13B4          __end_of_display_LCD 139C  
                __pbssCOMRAM 002C                 _readPassword 1420                ??_obtainedKey 0025  
          __size_of_eeprom_r 0014            __size_of_eeprom_w 0024                    _clear_LCD 1450  
           ??_first_line_LCD 0025                    __pintcode 0008              ??_checkPassword 0027  
                __pintcodelo 0018                  __smallconst 0D00                     ?_pwmInit 0001  
                   ?_welcome 0001                     ?_profile 0001               __size_of_alarm 0012  
             __size_of_close 0006                    _ready_LCD 1368                     _LATCbits 000F8B  
                   _LATEbits 000F8D          __end_of_obtainedKey 1368                   ?_clear_LCD 0001  
                _command_LCD 139C                     _RCONbits 000FD0                    _setup_LCD 1272  
                _display_LCD 1384            checkPassword@pass 0027                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                   ?_ready_LCD 0001           writePassword@value 0027  
                 _EECON1bits 000FA6                     __Hrparam 0000              display_LCD@data 0024  
                   __Lrparam 0000                 __Lsmallconst 0D00                   ?_setup_LCD 0001  
        readPassword@address 0025                     __ptext10 143A                     __ptext11 12F4  
                   __ptext20 1400                     __ptext12 1368                     __ptext21 1348  
                   __ptext13 1384                     __ptext22 1446                     __ptext14 145E  
                   __ptext23 1110                     __ptext15 1450                     __ptext16 139C  
                   __ptext17 12BC                     __ptext18 1420                     __ptext19 13C8  
           __size_of_pwmInit 0012                     _eeprom_r 13C8                     _eeprom_w 1324  
           __size_of_welcome 0012             __size_of_profile 007E                  _obtainedKey 1348  
              __size_of_main 012E                __size_of_menu 00FC                __size_of_open 0006  
                ??_clear_LCD 0025                   _CVRCONbits 000FB5                     int$flags 002D  
      __end_of_writePassword 1420                   _INTCONbits 000FF2     __size_of_second_line_LCD 000C  
                ??_ready_LCD 0024                     intlevel1 0000                     intlevel2 0000  
__size_of_display_string_LCD 0030                  ??_setup_LCD 0025                     profile@i 0028  
               ?_command_LCD 0001  
