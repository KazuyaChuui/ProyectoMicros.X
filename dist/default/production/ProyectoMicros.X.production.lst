

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May  7 13:11:25 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 1.41
    37                           ; Generated 25/01/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4585 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _EECON2	set	4007
    71  0000                     _INTCONbits	set	4082
    72  0000                     _EEDATA	set	4008
    73  0000                     _EEADR	set	4009
    74  0000                     _EEADRH	set	4010
    75  0000                     _EECON1bits	set	4006
    76  0000                     _PORTCbits	set	3970
    77  0000                     _LATEbits	set	3981
    78  0000                     _LATCbits	set	3979
    79  0000                     _CCP1CON	set	4029
    80  0000                     _T2CON	set	4042
    81  0000                     _CCPR1L	set	4030
    82  0000                     _PR2	set	4043
    83  0000                     _PORTDbits	set	3971
    84  0000                     _PORTAbits	set	3968
    85  0000                     _TRISE	set	3990
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISA	set	3986
    89  0000                     _LATE	set	3981
    90  0000                     _LATD	set	3980
    91  0000                     _LATC	set	3979
    92  0000                     _LATA	set	3977
    93  0000                     _PORTE	set	3972
    94  0000                     _PORTD	set	3971
    95  0000                     _PORTC	set	3970
    96  0000                     _PORTA	set	3968
    97  0000                     _ADCON1	set	4033
    98  0000                     _CVRCONbits	set	4021
    99  0000                     _CMCON	set	4020
   100  0000                     _OSCCON	set	4051
   101                           
   102                           	psect	smallconst
   103  000D00                     __psmallconst:
   104                           	opt stack 0
   105  000D00  00                 	db	0
   106  000D01                     STR_12:
   107  000D01  55                 	db	85	;'U'
   108  000D02  20                 	db	32
   109  000D03  50                 	db	80	;'P'
   110  000D04  72                 	db	114	;'r'
   111  000D05  65                 	db	101	;'e'
   112  000D06  66                 	db	102	;'f'
   113  000D07  65                 	db	101	;'e'
   114  000D08  72                 	db	114	;'r'
   115  000D09  20                 	db	32
   116  000D0A  41                 	db	65	;'A'
   117  000D0B  20                 	db	32
   118  000D0C  42                 	db	66	;'B'
   119  000D0D  20                 	db	32
   120  000D0E  43                 	db	67	;'C'
   121  000D0F  20                 	db	32
   122  000D10  44                 	db	68	;'D'
   123  000D11  00                 	db	0
   124  000D12                     STR_13:
   125  000D12  49                 	db	73	;'I'
   126  000D13  6E                 	db	110	;'n'
   127  000D14  74                 	db	116	;'t'
   128  000D15  72                 	db	114	;'r'
   129  000D16  6F                 	db	111	;'o'
   130  000D17  64                 	db	100	;'d'
   131  000D18  75                 	db	117	;'u'
   132  000D19  63                 	db	99	;'c'
   133  000D1A  65                 	db	101	;'e'
   134  000D1B  20                 	db	32
   135  000D1C  50                 	db	80	;'P'
   136  000D1D  73                 	db	115	;'s'
   137  000D1E  73                 	db	115	;'s'
   138  000D1F  77                 	db	119	;'w'
   139  000D20  64                 	db	100	;'d'
   140  000D21  00                 	db	0
   141  000D22                     STR_11:
   142  000D22  57                 	db	87	;'W'
   143  000D23  68                 	db	104	;'h'
   144  000D24  69                 	db	105	;'i'
   145  000D25  63                 	db	99	;'c'
   146  000D26  68                 	db	104	;'h'
   147  000D27  20                 	db	32
   148  000D28  6C                 	db	108	;'l'
   149  000D29  65                 	db	101	;'e'
   150  000D2A  74                 	db	116	;'t'
   151  000D2B  74                 	db	116	;'t'
   152  000D2C  65                 	db	101	;'e'
   153  000D2D  72                 	db	114	;'r'
   154  000D2E  20                 	db	32
   155  000D2F  64                 	db	100	;'d'
   156  000D30  6F                 	db	111	;'o'
   157  000D31  00                 	db	0
   158  000D32                     STR_6:
   159  000D32  2D                 	db	45
   160  000D33  44                 	db	68	;'D'
   161  000D34  6F                 	db	111	;'o'
   162  000D35  6F                 	db	111	;'o'
   163  000D36  72                 	db	114	;'r'
   164  000D37  20                 	db	32
   165  000D38  55                 	db	85	;'U'
   166  000D39  6E                 	db	110	;'n'
   167  000D3A  6C                 	db	108	;'l'
   168  000D3B  6F                 	db	111	;'o'
   169  000D3C  63                 	db	99	;'c'
   170  000D3D  6B                 	db	107	;'k'
   171  000D3E  65                 	db	101	;'e'
   172  000D3F  64                 	db	100	;'d'
   173  000D40  2D                 	db	45
   174  000D41  00                 	db	0
   175  000D42                     STR_5:
   176  000D42  31                 	db	49	;'1'
   177  000D43  2E                 	db	46
   178  000D44  55                 	db	85	;'U'
   179  000D45  6E                 	db	110	;'n'
   180  000D46  6C                 	db	108	;'l'
   181  000D47  6F                 	db	111	;'o'
   182  000D48  63                 	db	99	;'c'
   183  000D49  6B                 	db	107	;'k'
   184  000D4A  20                 	db	32
   185  000D4B  32                 	db	50	;'2'
   186  000D4C  2E                 	db	46
   187  000D4D  4C                 	db	76	;'L'
   188  000D4E  6F                 	db	111	;'o'
   189  000D4F  63                 	db	99	;'c'
   190  000D50  6B                 	db	107	;'k'
   191  000D51  00                 	db	0
   192  000D52                     STR_4:
   193  000D52  31                 	db	49	;'1'
   194  000D53  2E                 	db	46
   195  000D54  44                 	db	68	;'D'
   196  000D55  6F                 	db	111	;'o'
   197  000D56  6F                 	db	111	;'o'
   198  000D57  72                 	db	114	;'r'
   199  000D58  20                 	db	32
   200  000D59  32                 	db	50	;'2'
   201  000D5A  2E                 	db	46
   202  000D5B  4C                 	db	76	;'L'
   203  000D5C  6F                 	db	111	;'o'
   204  000D5D  67                 	db	103	;'g'
   205  000D5E  4F                 	db	79	;'O'
   206  000D5F  75                 	db	117	;'u'
   207  000D60  74                 	db	116	;'t'
   208  000D61  00                 	db	0
   209  000D62                     STR_2:
   210  000D62  57                 	db	87	;'W'
   211  000D63  72                 	db	114	;'r'
   212  000D64  6F                 	db	111	;'o'
   213  000D65  6E                 	db	110	;'n'
   214  000D66  67                 	db	103	;'g'
   215  000D67  20                 	db	32
   216  000D68  50                 	db	80	;'P'
   217  000D69  61                 	db	97	;'a'
   218  000D6A  73                 	db	115	;'s'
   219  000D6B  73                 	db	115	;'s'
   220  000D6C  77                 	db	119	;'w'
   221  000D6D  6F                 	db	111	;'o'
   222  000D6E  72                 	db	114	;'r'
   223  000D6F  64                 	db	100	;'d'
   224  000D70  00                 	db	0
   225  000D71                     STR_1:
   226  000D71  45                 	db	69	;'E'
   227  000D72  6E                 	db	110	;'n'
   228  000D73  74                 	db	116	;'t'
   229  000D74  65                 	db	101	;'e'
   230  000D75  72                 	db	114	;'r'
   231  000D76  20                 	db	32
   232  000D77  50                 	db	80	;'P'
   233  000D78  61                 	db	97	;'a'
   234  000D79  73                 	db	115	;'s'
   235  000D7A  73                 	db	115	;'s'
   236  000D7B  77                 	db	119	;'w'
   237  000D7C  6F                 	db	111	;'o'
   238  000D7D  72                 	db	114	;'r'
   239  000D7E  64                 	db	100	;'d'
   240  000D7F  00                 	db	0
   241  000D80                     STR_14:
   242  000D80  4F                 	db	79	;'O'
   243  000D81  6E                 	db	110	;'n'
   244  000D82  6C                 	db	108	;'l'
   245  000D83  79                 	db	121	;'y'
   246  000D84  20                 	db	32
   247  000D85  74                 	db	116	;'t'
   248  000D86  77                 	db	119	;'w'
   249  000D87  6F                 	db	111	;'o'
   250  000D88  20                 	db	32
   251  000D89  6B                 	db	107	;'k'
   252  000D8A  65                 	db	101	;'e'
   253  000D8B  79                 	db	121	;'y'
   254  000D8C  73                 	db	115	;'s'
   255  000D8D  00                 	db	0
   256  000D8E                     STR_8:
   257  000D8E  2D                 	db	45
   258  000D8F  44                 	db	68	;'D'
   259  000D90  6F                 	db	111	;'o'
   260  000D91  6F                 	db	111	;'o'
   261  000D92  72                 	db	114	;'r'
   262  000D93  20                 	db	32
   263  000D94  4C                 	db	76	;'L'
   264  000D95  6F                 	db	111	;'o'
   265  000D96  63                 	db	99	;'c'
   266  000D97  6B                 	db	107	;'k'
   267  000D98  65                 	db	101	;'e'
   268  000D99  64                 	db	100	;'d'
   269  000D9A  2D                 	db	45
   270  000D9B  00                 	db	0
   271  000D9C                     STR_3:
   272  000D9C  57                 	db	87	;'W'
   273  000D9D  65                 	db	101	;'e'
   274  000D9E  6C                 	db	108	;'l'
   275  000D9F  63                 	db	99	;'c'
   276  000DA0  6F                 	db	111	;'o'
   277  000DA1  6D                 	db	109	;'m'
   278  000DA2  65                 	db	101	;'e'
   279  000DA3  20                 	db	32
   280  000DA4  55                 	db	85	;'U'
   281  000DA5  73                 	db	115	;'s'
   282  000DA6  65                 	db	101	;'e'
   283  000DA7  72                 	db	114	;'r'
   284  000DA8  20                 	db	32
   285  000DA9  00                 	db	0
   286  000DAA                     STR_7:
   287  000DAA  41                 	db	65	;'A'
   288  000DAB  20                 	db	32
   289  000DAC  74                 	db	116	;'t'
   290  000DAD  6F                 	db	111	;'o'
   291  000DAE  20                 	db	32
   292  000DAF  47                 	db	71	;'G'
   293  000DB0  6F                 	db	111	;'o'
   294  000DB1  42                 	db	66	;'B'
   295  000DB2  61                 	db	97	;'a'
   296  000DB3  63                 	db	99	;'c'
   297  000DB4  6B                 	db	107	;'k'
   298  000DB5  00                 	db	0
   299  000DB6                     STR_15:
   300  000DB6  57                 	db	87	;'W'
   301  000DB7  68                 	db	104	;'h'
   302  000DB8  69                 	db	105	;'i'
   303  000DB9  63                 	db	99	;'c'
   304  000DBA  68                 	db	104	;'h'
   305  000DBB  20                 	db	32
   306  000DBC  74                 	db	116	;'t'
   307  000DBD  65                 	db	101	;'e'
   308  000DBE  6D                 	db	109	;'m'
   309  000DBF  70                 	db	112	;'p'
   310  000DC0  00                 	db	0
   311  000DC1                     STR_16:
   312  000DC1  72                 	db	114	;'r'
   313  000DC2  61                 	db	97	;'a'
   314  000DC3  6E                 	db	110	;'n'
   315  000DC4  67                 	db	103	;'g'
   316  000DC5  65                 	db	101	;'e'
   317  000DC6  20                 	db	32
   318  000DC7  31                 	db	49	;'1'
   319  000DC8  2D                 	db	45
   320  000DC9  39                 	db	57	;'9'
   321  000DCA  00                 	db	0
   322  000DCB                     STR_10:
   323  000DCB  42                 	db	66	;'B'
   324  000DCC  79                 	db	121	;'y'
   325  000DCD  65                 	db	101	;'e'
   326  000DCE  20                 	db	32
   327  000DCF  75                 	db	117	;'u'
   328  000DD0  73                 	db	115	;'s'
   329  000DD1  65                 	db	101	;'e'
   330  000DD2  72                 	db	114	;'r'
   331  000DD3  20                 	db	32
   332  000DD4  00                 	db	0
   333  0000                     
   334                           ; #config settings
   335  000DD5  00                 	db	0	; dummy byte at the end
   336  0000                     
   337                           	psect	cinit
   338  0012EE                     __pcinit:
   339                           	opt stack 0
   340  0012EE                     start_initialization:
   341                           	opt stack 0
   342  0012EE                     __initialization:
   343                           	opt stack 0
   344                           
   345                           ; Clear objects allocated to COMRAM (1 bytes)
   346  0012EE  6A09               	clrf	__pbssCOMRAM& (0+255),c
   347  0012F0                     end_of_initialization:
   348                           	opt stack 0
   349  0012F0                     __end_of__initialization:
   350                           	opt stack 0
   351  0012F0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   352  0012F2  6EF8               	movwf	tblptru,c
   353  0012F4  0E0D               	movlw	high __Lsmallconst
   354  0012F6  6EF7               	movwf	tblptrh,c
   355  0012F8  0100               	movlb	0
   356  0012FA  EFD3  F007         	goto	_main	;jump to C main() function
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           
   360                           	psect	bssCOMRAM
   361  000009                     __pbssCOMRAM:
   362                           	opt stack 0
   363  000009                     _flag:
   364                           	opt stack 0
   365  000009                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           
   369                           	psect	cstackCOMRAM
   370  000001                     __pcstackCOMRAM:
   371                           	opt stack 0
   372  000001                     ??_getKey:
   373  000001                     command_LCD@x:
   374                           	opt stack 0
   375  000001                     display_LCD@data:
   376                           	opt stack 0
   377  000001                     Read_b_eep@badd:
   378                           	opt stack 0
   379  000001                     Write_b_eep@badd:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x0
   383  000001                     	ds	1
   384  000002                     ??_setup_LCD:
   385  000002                     obtainedKey@key_presionada:
   386                           	opt stack 0
   387  000002                     display_string_LCD@data:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x1
   391  000002                     	ds	1
   392  000003                     readPassword@address:
   393                           	opt stack 0
   394  000003                     Write_b_eep@bdat:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x2
   398  000003                     	ds	1
   399  000004                     readPassword@value:
   400                           	opt stack 0
   401  000004                     Write_b_eep@GIE_BIT_VAL:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x3
   405  000004                     	ds	1
   406  000005                     ??_menu:
   407  000005                     writePassword@address:
   408                           	opt stack 0
   409  000005                     checkPassword@pass:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x4
   413  000005                     	ds	1
   414  000006                     writePassword@value:
   415                           	opt stack 0
   416  000006                     checkPassword@i:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x5
   420  000006                     	ds	1
   421  000007                     profile@i:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x6
   425  000007                     	ds	2
   426  000009                     tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           
   429                           ; 1 bytes @ 0x8
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 30 in file "mainCode.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  key             1    0        unsigned char 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels required when called:    3
   455 ;; This function calls:
   456 ;;		_checkPassword
   457 ;;		_clear_LCD
   458 ;;		_display_LCD
   459 ;;		_display_string_LCD
   460 ;;		_menu
   461 ;;		_profile
   462 ;;		_pwmInit
   463 ;;		_readPassword
   464 ;;		_ready_LCD
   465 ;;		_second_line_LCD
   466 ;;		_setup_LCD
   467 ;;		_welcome
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text0
   474  000FA6                     __ptext0:
   475                           	opt stack 0
   476  000FA6                     _main:
   477                           	opt stack 28
   478                           
   479                           ;mainCode.c: 31: OSCCON = 0x70;
   480                           
   481                           ;incstack = 0
   482  000FA6  0E70               	movlw	112
   483  000FA8  6ED3               	movwf	4051,c	;volatile
   484                           
   485                           ;mainCode.c: 32: CMCON = 0xFF;
   486  000FAA  68B4               	setf	4020,c	;volatile
   487                           
   488                           ;mainCode.c: 33: CVRCONbits.CVREN = 0;
   489  000FAC  9EB5               	bcf	4021,7,c	;volatile
   490                           
   491                           ;mainCode.c: 34: ADCON1 = 0x0F;
   492  000FAE  0E0F               	movlw	15
   493  000FB0  6EC1               	movwf	4033,c	;volatile
   494                           
   495                           ;mainCode.c: 37: unsigned char key;
   496                           ;mainCode.c: 38: PORTA = 0x00;
   497  000FB2  0E00               	movlw	0
   498  000FB4  6E80               	movwf	3968,c	;volatile
   499                           
   500                           ;mainCode.c: 39: PORTC = 0x00;
   501  000FB6  0E00               	movlw	0
   502  000FB8  6E82               	movwf	3970,c	;volatile
   503                           
   504                           ;mainCode.c: 40: PORTD = 0x00;
   505  000FBA  0E00               	movlw	0
   506  000FBC  6E83               	movwf	3971,c	;volatile
   507                           
   508                           ;mainCode.c: 41: PORTE = 0x00;
   509  000FBE  0E00               	movlw	0
   510  000FC0  6E84               	movwf	3972,c	;volatile
   511                           
   512                           ;mainCode.c: 42: LATA = 0x00;
   513  000FC2  0E00               	movlw	0
   514  000FC4  6E89               	movwf	3977,c	;volatile
   515                           
   516                           ;mainCode.c: 43: LATC = 0x00;
   517  000FC6  0E00               	movlw	0
   518  000FC8  6E8B               	movwf	3979,c	;volatile
   519                           
   520                           ;mainCode.c: 44: LATD = 0x00;
   521  000FCA  0E00               	movlw	0
   522  000FCC  6E8C               	movwf	3980,c	;volatile
   523                           
   524                           ;mainCode.c: 45: LATE = 0x00;
   525  000FCE  0E00               	movlw	0
   526  000FD0  6E8D               	movwf	3981,c	;volatile
   527                           
   528                           ;mainCode.c: 46: TRISA = 0x00;
   529  000FD2  0E00               	movlw	0
   530  000FD4  6E92               	movwf	3986,c	;volatile
   531                           
   532                           ;mainCode.c: 47: TRISC = 0xF0;
   533  000FD6  0EF0               	movlw	240
   534  000FD8  6E94               	movwf	3988,c	;volatile
   535                           
   536                           ;mainCode.c: 48: TRISD = 0x00;
   537  000FDA  0E00               	movlw	0
   538  000FDC  6E95               	movwf	3989,c	;volatile
   539                           
   540                           ;mainCode.c: 49: TRISE = 0x00;
   541  000FDE  0E00               	movlw	0
   542  000FE0  6E96               	movwf	3990,c	;volatile
   543                           
   544                           ;mainCode.c: 51: setup_LCD();
   545  000FE2  EC97  F008         	call	_setup_LCD	;wreg free
   546                           
   547                           ;mainCode.c: 52: pwmInit();
   548  000FE6  EC65  F009         	call	_pwmInit	;wreg free
   549  000FEA                     l1487:
   550                           
   551                           ;mainCode.c: 55: if(readPassword(0x20) != 'A' &&
   552                           ;mainCode.c: 56: readPassword(0x20) != 'B' &&
   553                           ;mainCode.c: 57: readPassword(0x20) != 'C' &&
   554                           ;mainCode.c: 58: readPassword(0x20) != 'D')
   555  000FEA  0E20               	movlw	32
   556  000FEC  EC6E  F009         	call	_readPassword
   557  000FF0  0A41               	xorlw	65
   558  000FF2  B4D8               	btfsc	status,2,c
   559  000FF4  D015               	goto	l1497
   560  000FF6  0E20               	movlw	32
   561  000FF8  EC6E  F009         	call	_readPassword
   562  000FFC  0A42               	xorlw	66
   563  000FFE  B4D8               	btfsc	status,2,c
   564  001000  D00F               	goto	l1497
   565  001002  0E20               	movlw	32
   566  001004  EC6E  F009         	call	_readPassword
   567  001008  0A43               	xorlw	67
   568  00100A  B4D8               	btfsc	status,2,c
   569  00100C  D009               	goto	l1497
   570  00100E  0E20               	movlw	32
   571  001010  EC6E  F009         	call	_readPassword
   572  001014  0A44               	xorlw	68
   573  001016  B4D8               	btfsc	status,2,c
   574  001018  D003               	goto	l1497
   575                           
   576                           ;mainCode.c: 59: {
   577                           ;mainCode.c: 60: profile();
   578  00101A  EC42  F008         	call	_profile	;wreg free
   579                           
   580                           ;mainCode.c: 61: }else{
   581  00101E  D7E5               	goto	l1487
   582  001020                     l1497:
   583                           
   584                           ;mainCode.c: 62: ready_LCD();
   585  001020  EC1F  F009         	call	_ready_LCD	;wreg free
   586                           
   587                           ;mainCode.c: 63: display_string_LCD("Enter Password");
   588  001024  0E71               	movlw	low STR_1
   589  001026  6E02               	movwf	display_string_LCD@data,c
   590  001028  0E0D               	movlw	high STR_1
   591  00102A  6E03               	movwf	display_string_LCD@data+1,c
   592  00102C  ECF7  F008         	call	_display_string_LCD	;wreg free
   593                           
   594                           ;mainCode.c: 65: if(checkPassword() != 1){
   595  001030  ECDB  F008         	call	_checkPassword	;wreg free
   596  001034  06E8               	decf	wreg,f,c
   597  001036  B4D8               	btfsc	status,2,c
   598  001038  D00B               	goto	l1507
   599                           
   600                           ;mainCode.c: 66: clear_LCD();
   601  00103A  EC90  F009         	call	_clear_LCD	;wreg free
   602                           
   603                           ;mainCode.c: 67: ready_LCD();
   604  00103E  EC1F  F009         	call	_ready_LCD	;wreg free
   605                           
   606                           ;mainCode.c: 68: display_string_LCD("Wrong Password");
   607  001042  0E62               	movlw	low STR_2
   608  001044  6E02               	movwf	display_string_LCD@data,c
   609  001046  0E0D               	movlw	high STR_2
   610  001048  6E03               	movwf	display_string_LCD@data+1,c
   611  00104A  ECF7  F008         	call	_display_string_LCD	;wreg free
   612                           
   613                           ;mainCode.c: 69: }else{
   614  00104E  D7CD               	goto	l1487
   615  001050                     l1507:
   616                           
   617                           ;mainCode.c: 71: clear_LCD();
   618  001050  EC90  F009         	call	_clear_LCD	;wreg free
   619                           
   620                           ;mainCode.c: 72: ready_LCD();
   621  001054  EC1F  F009         	call	_ready_LCD	;wreg free
   622                           
   623                           ;mainCode.c: 73: display_string_LCD("Welcome User ");
   624  001058  0E9C               	movlw	low STR_3
   625  00105A  6E02               	movwf	display_string_LCD@data,c
   626  00105C  0E0D               	movlw	high STR_3
   627  00105E  6E03               	movwf	display_string_LCD@data+1,c
   628  001060  ECF7  F008         	call	_display_string_LCD	;wreg free
   629                           
   630                           ;mainCode.c: 74: display_LCD(readPassword(0x20));
   631  001064  0E20               	movlw	32
   632  001066  EC6E  F009         	call	_readPassword
   633  00106A  EC2D  F009         	call	_display_LCD
   634                           
   635                           ;mainCode.c: 75: second_line_LCD();
   636  00106E  EC7F  F009         	call	_second_line_LCD	;wreg free
   637                           
   638                           ;mainCode.c: 76: welcome();
   639  001072  EC5C  F009         	call	_welcome	;wreg free
   640                           
   641                           ;mainCode.c: 77: menu();
   642  001076  ECEB  F006         	call	_menu	;wreg free
   643                           
   644                           ;mainCode.c: 78: if(flag == 1){
   645  00107A  0409               	decf	_flag,w,c
   646  00107C  B4D8               	btfsc	status,2,c
   647  00107E  EF00  F000         	goto	start
   648  001082  D7E6               	goto	l1507
   649  001084                     __end_of_main:
   650                           	opt stack 0
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           wreg	equ	0xFE8
   654                           status	equ	0xFD8
   655                           
   656 ;; *************** function _welcome *****************
   657 ;; Defined at:
   658 ;;		line 16 in file "menu.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    2
   679 ;; This function calls:
   680 ;;		_display_string_LCD
   681 ;;		_ready_LCD
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text1
   688  0012B8                     __ptext1:
   689                           	opt stack 0
   690  0012B8                     _welcome:
   691                           	opt stack 28
   692                           
   693                           ;menu.c: 17: ready_LCD();
   694                           
   695                           ;incstack = 0
   696  0012B8  EC1F  F009         	call	_ready_LCD	;wreg free
   697                           
   698                           ;menu.c: 18: display_string_LCD("1.Door 2.LogOut");
   699  0012BC  0E52               	movlw	low STR_4
   700  0012BE  6E02               	movwf	display_string_LCD@data,c
   701  0012C0  0E0D               	movlw	high STR_4
   702  0012C2  6E03               	movwf	display_string_LCD@data+1,c
   703  0012C4  ECF7  F008         	call	_display_string_LCD	;wreg free
   704  0012C8  0012               	return		;funcret
   705  0012CA                     __end_of_welcome:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           wreg	equ	0xFE8
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function _setup_LCD *****************
   713 ;; Defined at:
   714 ;;		line 28 in file "lcdCon.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		_command_LCD
   737 ;;		_ready_LCD
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text2
   744  00112E                     __ptext2:
   745                           	opt stack 0
   746  00112E                     _setup_LCD:
   747                           	opt stack 29
   748                           
   749                           ;lcdCon.c: 29: PORTAbits.RA3 = 0;
   750                           
   751                           ;incstack = 0
   752  00112E  9680               	bcf	3968,3,c	;volatile
   753                           
   754                           ;lcdCon.c: 30: _delay((unsigned long)((250)*(8000000/4000.0)));
   755  001130  0E03               	movlw	3
   756  001132  6E03               	movwf	(??_setup_LCD+1)& (0+255),c
   757  001134  0E8A               	movlw	138
   758  001136  6E02               	movwf	??_setup_LCD& (0+255),c
   759  001138  0E56               	movlw	86
   760  00113A                     u617:
   761  00113A  2EE8               	decfsz	wreg,f,c
   762  00113C  D7FE               	bra	u617
   763  00113E  2E02               	decfsz	??_setup_LCD& (0+255),f,c
   764  001140  D7FC               	bra	u617
   765  001142  2E03               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   766  001144  D7FA               	bra	u617
   767                           
   768                           ;lcdCon.c: 31: command_LCD(0x38);
   769  001146  0E38               	movlw	56
   770  001148  EC39  F009         	call	_command_LCD
   771                           
   772                           ;lcdCon.c: 32: _delay((unsigned long)((250)*(8000000/4000.0)));
   773  00114C  0E03               	movlw	3
   774  00114E  6E03               	movwf	(??_setup_LCD+1)& (0+255),c
   775  001150  0E8A               	movlw	138
   776  001152  6E02               	movwf	??_setup_LCD& (0+255),c
   777  001154  0E56               	movlw	86
   778  001156                     u627:
   779  001156  2EE8               	decfsz	wreg,f,c
   780  001158  D7FE               	bra	u627
   781  00115A  2E02               	decfsz	??_setup_LCD& (0+255),f,c
   782  00115C  D7FC               	bra	u627
   783  00115E  2E03               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   784  001160  D7FA               	bra	u627
   785                           
   786                           ;lcdCon.c: 33: command_LCD(0x0F);
   787  001162  0E0F               	movlw	15
   788  001164  EC39  F009         	call	_command_LCD
   789                           
   790                           ;lcdCon.c: 34: ready_LCD();
   791  001168  EC1F  F009         	call	_ready_LCD	;wreg free
   792                           
   793                           ;lcdCon.c: 35: command_LCD(0x01);
   794  00116C  0E01               	movlw	1
   795  00116E  EC39  F009         	call	_command_LCD
   796                           
   797                           ;lcdCon.c: 36: ready_LCD();
   798  001172  EC1F  F009         	call	_ready_LCD	;wreg free
   799  001176  0012               	return		;funcret
   800  001178                     __end_of_setup_LCD:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _pwmInit *****************
   808 ;; Defined at:
   809 ;;		line 12 in file "status.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837  0012CA                     __ptext3:
   838                           	opt stack 0
   839  0012CA                     _pwmInit:
   840                           	opt stack 30
   841                           
   842                           ;status.c: 16: PR2 = 0x9B;
   843                           
   844                           ;incstack = 0
   845  0012CA  0E9B               	movlw	155
   846  0012CC  6ECB               	movwf	4043,c	;volatile
   847                           
   848                           ;status.c: 17: CCPR1L = 0x2F;
   849  0012CE  0E2F               	movlw	47
   850  0012D0  6EBE               	movwf	4030,c	;volatile
   851                           
   852                           ;status.c: 18: T2CON = 0x07;
   853  0012D2  0E07               	movlw	7
   854  0012D4  6ECA               	movwf	4042,c	;volatile
   855                           
   856                           ;status.c: 19: CCP1CON = 0x3C;
   857  0012D6  0E3C               	movlw	60
   858  0012D8  6EBD               	movwf	4029,c	;volatile
   859  0012DA  0012               	return		;funcret
   860  0012DC                     __end_of_pwmInit:
   861                           	opt stack 0
   862                           tblptru	equ	0xFF8
   863                           tblptrh	equ	0xFF7
   864                           wreg	equ	0xFE8
   865                           status	equ	0xFD8
   866                           
   867 ;; *************** function _profile *****************
   868 ;; Defined at:
   869 ;;		line 26 in file "profile.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  i               2    6[COMRAM] unsigned int 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   887 ;;Total ram usage:        2 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    2
   890 ;; This function calls:
   891 ;;		_clear_LCD
   892 ;;		_display_string_LCD
   893 ;;		_first_line_LCD
   894 ;;		_obtainedKey
   895 ;;		_ready_LCD
   896 ;;		_second_line_LCD
   897 ;;		_writePassword
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text4
   904  001084                     __ptext4:
   905                           	opt stack 0
   906  001084                     _profile:
   907                           	opt stack 28
   908                           
   909                           ;profile.c: 27: unsigned int i = 0;
   910                           
   911                           ;incstack = 0
   912  001084  0E00               	movlw	0
   913  001086  6E08               	movwf	profile@i+1,c
   914  001088  0E00               	movlw	0
   915  00108A  6E07               	movwf	profile@i,c
   916                           
   917                           ;profile.c: 28: ready_LCD();
   918  00108C  EC1F  F009         	call	_ready_LCD	;wreg free
   919                           
   920                           ;profile.c: 29: display_string_LCD("Which letter do");
   921  001090  0E22               	movlw	low STR_11
   922  001092  6E02               	movwf	display_string_LCD@data,c
   923  001094  0E0D               	movlw	high STR_11
   924  001096  6E03               	movwf	display_string_LCD@data+1,c
   925  001098  ECF7  F008         	call	_display_string_LCD	;wreg free
   926                           
   927                           ;profile.c: 30: second_line_LCD();
   928  00109C  EC7F  F009         	call	_second_line_LCD	;wreg free
   929                           
   930                           ;profile.c: 31: display_string_LCD("U Prefer A B C D");
   931  0010A0  0E01               	movlw	low STR_12
   932  0010A2  6E02               	movwf	display_string_LCD@data,c
   933  0010A4  0E0D               	movlw	high STR_12
   934  0010A6  6E03               	movwf	display_string_LCD@data+1,c
   935  0010A8  ECF7  F008         	call	_display_string_LCD	;wreg free
   936                           
   937                           ;profile.c: 32: writePassword(obtainedKey(),0x20);
   938  0010AC  0E20               	movlw	32
   939  0010AE  6E05               	movwf	writePassword@address,c
   940  0010B0  EC0F  F009         	call	_obtainedKey	;wreg free
   941  0010B4  EC51  F009         	call	_writePassword
   942                           
   943                           ;profile.c: 33: clear_LCD();
   944  0010B8  EC90  F009         	call	_clear_LCD	;wreg free
   945                           
   946                           ;profile.c: 34: first_line_LCD();
   947  0010BC  EC85  F009         	call	_first_line_LCD	;wreg free
   948                           
   949                           ;profile.c: 35: display_string_LCD("Introduce Psswd");
   950  0010C0  0E12               	movlw	low STR_13
   951  0010C2  6E02               	movwf	display_string_LCD@data,c
   952  0010C4  0E0D               	movlw	high STR_13
   953  0010C6  6E03               	movwf	display_string_LCD@data+1,c
   954  0010C8  ECF7  F008         	call	_display_string_LCD	;wreg free
   955                           
   956                           ;profile.c: 36: second_line_LCD();
   957  0010CC  EC7F  F009         	call	_second_line_LCD	;wreg free
   958                           
   959                           ;profile.c: 37: display_string_LCD("Only two keys");
   960  0010D0  0E80               	movlw	low STR_14
   961  0010D2  6E02               	movwf	display_string_LCD@data,c
   962  0010D4  0E0D               	movlw	high STR_14
   963  0010D6  6E03               	movwf	display_string_LCD@data+1,c
   964  0010D8  ECF7  F008         	call	_display_string_LCD	;wreg free
   965  0010DC                     l1383:
   966                           
   967                           ;profile.c: 39: writePassword(obtainedKey(),0x00+1);
   968  0010DC  0E01               	movlw	1
   969  0010DE  6E05               	movwf	writePassword@address,c
   970  0010E0  EC0F  F009         	call	_obtainedKey	;wreg free
   971  0010E4  EC51  F009         	call	_writePassword
   972                           
   973                           ;profile.c: 40: i++;
   974  0010E8  4A07               	infsnz	profile@i,f,c
   975  0010EA  2A08               	incf	profile@i+1,f,c
   976                           
   977                           ;profile.c: 41: }while(i<2);
   978  0010EC  5008               	movf	profile@i+1,w,c
   979  0010EE  E104               	bnz	l1389
   980  0010F0  0E02               	movlw	2
   981  0010F2  5C07               	subwf	profile@i,w,c
   982  0010F4  A0D8               	btfss	status,0,c
   983  0010F6  D7F2               	goto	l1383
   984  0010F8                     l1389:
   985                           
   986                           ;profile.c: 42: clear_LCD();
   987  0010F8  EC90  F009         	call	_clear_LCD	;wreg free
   988                           
   989                           ;profile.c: 43: first_line_LCD();
   990  0010FC  EC85  F009         	call	_first_line_LCD	;wreg free
   991                           
   992                           ;profile.c: 44: display_string_LCD("Which temp");
   993  001100  0EB6               	movlw	low STR_15
   994  001102  6E02               	movwf	display_string_LCD@data,c
   995  001104  0E0D               	movlw	high STR_15
   996  001106  6E03               	movwf	display_string_LCD@data+1,c
   997  001108  ECF7  F008         	call	_display_string_LCD	;wreg free
   998                           
   999                           ;profile.c: 45: second_line_LCD();
  1000  00110C  EC7F  F009         	call	_second_line_LCD	;wreg free
  1001                           
  1002                           ;profile.c: 46: display_string_LCD("range 1-9");
  1003  001110  0EC1               	movlw	low STR_16
  1004  001112  6E02               	movwf	display_string_LCD@data,c
  1005  001114  0E0D               	movlw	high STR_16
  1006  001116  6E03               	movwf	display_string_LCD@data+1,c
  1007  001118  ECF7  F008         	call	_display_string_LCD	;wreg free
  1008                           
  1009                           ;profile.c: 47: writePassword(obtainedKey(),0x40);
  1010  00111C  0E40               	movlw	64
  1011  00111E  6E05               	movwf	writePassword@address,c
  1012  001120  EC0F  F009         	call	_obtainedKey	;wreg free
  1013  001124  EC51  F009         	call	_writePassword
  1014                           
  1015                           ;profile.c: 48: clear_LCD();
  1016  001128  EC90  F009         	call	_clear_LCD	;wreg free
  1017  00112C  0012               	return		;funcret
  1018  00112E                     __end_of_profile:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           wreg	equ	0xFE8
  1023                           status	equ	0xFD8
  1024                           
  1025 ;; *************** function _writePassword *****************
  1026 ;; Defined at:
  1027 ;;		line 19 in file "profile.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  value           1    wreg     unsigned char 
  1030 ;;  address         1    4[COMRAM] unsigned char 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  value           1    5[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    1
  1049 ;; This function calls:
  1050 ;;		_Busy_eep
  1051 ;;		_Write_b_eep
  1052 ;; This function is called by:
  1053 ;;		_profile
  1054 ;;		_preset
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text5
  1059  0012A2                     __ptext5:
  1060                           	opt stack 0
  1061  0012A2                     _writePassword:
  1062                           	opt stack 28
  1063                           
  1064                           ;incstack = 0
  1065                           ;writePassword@value stored from wreg
  1066  0012A2  6E06               	movwf	writePassword@value,c
  1067                           
  1068                           ;profile.c: 20: (Busy_eep(), Write_b_eep(address,value));
  1069  0012A4  EC94  F009         	call	_Busy_eep	;wreg free
  1070  0012A8  C005  F001         	movff	writePassword@address,Write_b_eep@badd
  1071  0012AC  6A02               	clrf	Write_b_eep@badd+1,c
  1072  0012AE  C006  F003         	movff	writePassword@value,Write_b_eep@bdat
  1073  0012B2  ECBC  F008         	call	_Write_b_eep	;wreg free
  1074  0012B6  0012               	return		;funcret
  1075  0012B8                     __end_of_writePassword:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           wreg	equ	0xFE8
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _Write_b_eep *****************
  1083 ;; Defined at:
  1084 ;;		line 49 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/write_B.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  badd            2    0[COMRAM] unsigned int 
  1087 ;;  bdat            1    2[COMRAM] unsigned char 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  GIE_BIT_VAL     1    3[COMRAM] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1099 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_writePassword
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text6
  1113  001178                     __ptext6:
  1114                           	opt stack 0
  1115  001178                     _Write_b_eep:
  1116                           	opt stack 28
  1117                           
  1118                           ;incstack = 0
  1119  001178  0E00               	movlw	0
  1120  00117A  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  1121  00117C  5002               	movf	Write_b_eep@badd+1,w,c
  1122  00117E  0B03               	andlw	3
  1123  001180  6EAA               	movwf	4010,c	;volatile
  1124  001182  C001  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  1125  001186  C003  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  1126  00118A  9EA6               	bcf	4006,7,c	;volatile
  1127  00118C  9CA6               	bcf	4006,6,c	;volatile
  1128  00118E  84A6               	bsf	4006,2,c	;volatile
  1129  001190  0E00               	movlw	0
  1130  001192  BEF2               	btfsc	intcon,7,c	;volatile
  1131  001194  0E01               	movlw	1
  1132  001196  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  1133  001198  9EF2               	bcf	intcon,7,c	;volatile
  1134  00119A  0E55               	movlw	85
  1135  00119C  6EA7               	movwf	4007,c	;volatile
  1136  00119E  0EAA               	movlw	170
  1137  0011A0  6EA7               	movwf	4007,c	;volatile
  1138  0011A2  82A6               	bsf	4006,1,c	;volatile
  1139  0011A4                     l290:
  1140  0011A4  B2A6               	btfsc	4006,1,c	;volatile
  1141  0011A6  D7FE               	goto	l290
  1142  0011A8  B004               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  1143  0011AA  D002               	bra	u425
  1144  0011AC  9EF2               	bcf	intcon,7,c	;volatile
  1145  0011AE  D001               	bra	u426
  1146  0011B0                     u425:
  1147  0011B0  8EF2               	bsf	intcon,7,c	;volatile
  1148  0011B2                     u426:
  1149  0011B2  94A6               	bcf	4006,2,c	;volatile
  1150  0011B4  0012               	return		;funcret
  1151  0011B6                     __end_of_Write_b_eep:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           intcon	equ	0xFF2
  1156                           wreg	equ	0xFE8
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _Busy_eep *****************
  1160 ;; Defined at:
  1161 ;;		line 12 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/busy_eep.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		None
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_writePassword
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text7
  1189  001328                     __ptext7:
  1190                           	opt stack 0
  1191  001328                     _Busy_eep:
  1192                           	opt stack 28
  1193  001328                     l259:
  1194  001328  A2A6               	btfss	4006,1,c	;volatile
  1195  00132A  0012               	return	
  1196  00132C  D7FD               	goto	l259
  1197  00132E                     __end_of_Busy_eep:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           intcon	equ	0xFF2
  1202                           wreg	equ	0xFE8
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _menu *****************
  1206 ;; Defined at:
  1207 ;;		line 21 in file "menu.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1225 ;;Total ram usage:        2 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    2
  1228 ;; This function calls:
  1229 ;;		_clear_LCD
  1230 ;;		_close
  1231 ;;		_display_LCD
  1232 ;;		_display_string_LCD
  1233 ;;		_first_line_LCD
  1234 ;;		_obtainedKey
  1235 ;;		_open
  1236 ;;		_readPassword
  1237 ;;		_ready_LCD
  1238 ;;		_second_line_LCD
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text8
  1245  000DD6                     __ptext8:
  1246                           	opt stack 0
  1247  000DD6                     _menu:
  1248                           	opt stack 28
  1249  000DD6                     
  1250                           ;menu.c: 23: flag = 0;
  1251  000DD6  0E00               	movlw	0
  1252  000DD8  6E09               	movwf	_flag,c
  1253                           
  1254                           ;menu.c: 24: if(obtainedKey() == '1'){
  1255  000DDA  EC0F  F009         	call	_obtainedKey	;wreg free
  1256  000DDE  0A31               	xorlw	49
  1257  000DE0  A4D8               	btfss	status,2,c
  1258  000DE2  D04C               	goto	l1463
  1259                           
  1260                           ;menu.c: 25: clear_LCD();
  1261  000DE4  EC90  F009         	call	_clear_LCD	;wreg free
  1262                           
  1263                           ;menu.c: 26: first_line_LCD();
  1264  000DE8  EC85  F009         	call	_first_line_LCD	;wreg free
  1265                           
  1266                           ;menu.c: 27: display_string_LCD("1.Unlock 2.Lock");
  1267  000DEC  0E42               	movlw	low STR_5
  1268  000DEE  6E02               	movwf	display_string_LCD@data,c
  1269  000DF0  0E0D               	movlw	high STR_5
  1270  000DF2  6E03               	movwf	display_string_LCD@data+1,c
  1271  000DF4  ECF7  F008         	call	_display_string_LCD	;wreg free
  1272                           
  1273                           ;menu.c: 28: if(obtainedKey() == '1'){
  1274  000DF8  EC0F  F009         	call	_obtainedKey	;wreg free
  1275  000DFC  0A31               	xorlw	49
  1276  000DFE  A4D8               	btfss	status,2,c
  1277  000E00  D01C               	goto	l1449
  1278                           
  1279                           ;menu.c: 29: open();
  1280  000E02  EC97  F009         	call	_open	;wreg free
  1281                           
  1282                           ;menu.c: 30: clear_LCD();
  1283  000E06  EC90  F009         	call	_clear_LCD	;wreg free
  1284                           
  1285                           ;menu.c: 31: first_line_LCD();
  1286  000E0A  EC85  F009         	call	_first_line_LCD	;wreg free
  1287                           
  1288                           ;menu.c: 32: display_string_LCD("-Door Unlocked-");
  1289  000E0E  0E32               	movlw	low STR_6
  1290  000E10  6E02               	movwf	display_string_LCD@data,c
  1291  000E12  0E0D               	movlw	high STR_6
  1292  000E14  6E03               	movwf	display_string_LCD@data+1,c
  1293  000E16  ECF7  F008         	call	_display_string_LCD	;wreg free
  1294                           
  1295                           ;menu.c: 33: second_line_LCD();
  1296  000E1A  EC7F  F009         	call	_second_line_LCD	;wreg free
  1297                           
  1298                           ;menu.c: 34: display_string_LCD("A to GoBack");
  1299  000E1E  0EAA               	movlw	low STR_7
  1300  000E20  6E02               	movwf	display_string_LCD@data,c
  1301  000E22  0E0D               	movlw	high STR_7
  1302  000E24  6E03               	movwf	display_string_LCD@data+1,c
  1303  000E26  ECF7  F008         	call	_display_string_LCD	;wreg free
  1304                           
  1305                           ;menu.c: 35: if(obtainedKey() == 'A'){
  1306  000E2A  EC0F  F009         	call	_obtainedKey	;wreg free
  1307  000E2E  0A41               	xorlw	65
  1308  000E30  A4D8               	btfss	status,2,c
  1309  000E32  D7D1               	goto	l1427
  1310                           
  1311                           ;menu.c: 36: clear_LCD();
  1312  000E34  EC90  F009         	call	_clear_LCD	;wreg free
  1313                           
  1314                           ;menu.c: 37: return;
  1315  000E38  0012               	return	
  1316  000E3A                     l1449:
  1317  000E3A  EC0F  F009         	call	_obtainedKey	;wreg free
  1318  000E3E  0A32               	xorlw	50
  1319  000E40  A4D8               	btfss	status,2,c
  1320  000E42  D7C9               	goto	l1427
  1321                           
  1322                           ;menu.c: 40: close();
  1323  000E44  EC9A  F009         	call	_close	;wreg free
  1324                           
  1325                           ;menu.c: 41: clear_LCD();
  1326  000E48  EC90  F009         	call	_clear_LCD	;wreg free
  1327                           
  1328                           ;menu.c: 42: first_line_LCD();
  1329  000E4C  EC85  F009         	call	_first_line_LCD	;wreg free
  1330                           
  1331                           ;menu.c: 43: display_string_LCD("-Door Locked-");
  1332  000E50  0E8E               	movlw	low STR_8
  1333  000E52  6E02               	movwf	display_string_LCD@data,c
  1334  000E54  0E0D               	movlw	high STR_8
  1335  000E56  6E03               	movwf	display_string_LCD@data+1,c
  1336  000E58  ECF7  F008         	call	_display_string_LCD	;wreg free
  1337                           
  1338                           ;menu.c: 44: second_line_LCD();
  1339  000E5C  EC7F  F009         	call	_second_line_LCD	;wreg free
  1340                           
  1341                           ;menu.c: 45: display_string_LCD("A to GoBack");
  1342  000E60  0EAA               	movlw	low STR_7
  1343  000E62  6E02               	movwf	display_string_LCD@data,c
  1344  000E64  0E0D               	movlw	high STR_7
  1345  000E66  6E03               	movwf	display_string_LCD@data+1,c
  1346  000E68  ECF7  F008         	call	_display_string_LCD	;wreg free
  1347                           
  1348                           ;menu.c: 46: if(obtainedKey() == 'A'){
  1349  000E6C  EC0F  F009         	call	_obtainedKey	;wreg free
  1350  000E70  0A41               	xorlw	65
  1351  000E72  A4D8               	btfss	status,2,c
  1352  000E74  D7B0               	goto	l1427
  1353                           
  1354                           ;menu.c: 47: clear_LCD();
  1355  000E76  EC90  F009         	call	_clear_LCD	;wreg free
  1356                           
  1357                           ;menu.c: 48: return;
  1358  000E7A  0012               	return	
  1359  000E7C                     l1463:
  1360  000E7C  EC0F  F009         	call	_obtainedKey	;wreg free
  1361  000E80  0A32               	xorlw	50
  1362  000E82  A4D8               	btfss	status,2,c
  1363  000E84  D7A8               	goto	l1427
  1364                           
  1365                           ;menu.c: 52: clear_LCD();
  1366  000E86  EC90  F009         	call	_clear_LCD	;wreg free
  1367                           
  1368                           ;menu.c: 53: ready_LCD();
  1369  000E8A  EC1F  F009         	call	_ready_LCD	;wreg free
  1370                           
  1371                           ;menu.c: 54: display_string_LCD("Bye user ");
  1372  000E8E  0ECB               	movlw	low STR_10
  1373  000E90  6E02               	movwf	display_string_LCD@data,c
  1374  000E92  0E0D               	movlw	high STR_10
  1375  000E94  6E03               	movwf	display_string_LCD@data+1,c
  1376  000E96  ECF7  F008         	call	_display_string_LCD	;wreg free
  1377                           
  1378                           ;menu.c: 55: display_LCD(readPassword(0x20));
  1379  000E9A  0E20               	movlw	32
  1380  000E9C  EC6E  F009         	call	_readPassword
  1381  000EA0  EC2D  F009         	call	_display_LCD
  1382                           
  1383                           ;menu.c: 56: _delay((unsigned long)((2500)*(8000000/4000.0)));
  1384  000EA4  0E1A               	movlw	26
  1385  000EA6  6E06               	movwf	(??_menu+1)& (0+255),c
  1386  000EA8  0E5E               	movlw	94
  1387  000EAA  6E05               	movwf	??_menu& (0+255),c
  1388  000EAC  0E6E               	movlw	110
  1389  000EAE                     u637:
  1390  000EAE  2EE8               	decfsz	wreg,f,c
  1391  000EB0  D7FE               	bra	u637
  1392  000EB2  2E05               	decfsz	??_menu& (0+255),f,c
  1393  000EB4  D7FC               	bra	u637
  1394  000EB6  2E06               	decfsz	(??_menu+1)& (0+255),f,c
  1395  000EB8  D7FA               	bra	u637
  1396  000EBA  D000               	nop2	
  1397                           
  1398                           ;menu.c: 57: flag = 1;
  1399  000EBC  0E01               	movlw	1
  1400  000EBE  6E09               	movwf	_flag,c
  1401                           
  1402                           ;menu.c: 58: return;
  1403  000EC0  0012               	return	
  1404  000EC2                     __end_of_menu:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           intcon	equ	0xFF2
  1409                           wreg	equ	0xFE8
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _second_line_LCD *****************
  1413 ;; Defined at:
  1414 ;;		line 80 in file "lcdCon.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		_command_LCD
  1437 ;;		_ready_LCD
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;;		_menu
  1441 ;;		_profile
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text9
  1446  0012FE                     __ptext9:
  1447                           	opt stack 0
  1448  0012FE                     _second_line_LCD:
  1449                           	opt stack 29
  1450                           
  1451                           ;lcdCon.c: 81: command_LCD(0xC0);
  1452                           
  1453                           ;incstack = 0
  1454  0012FE  0EC0               	movlw	192
  1455  001300  EC39  F009         	call	_command_LCD
  1456                           
  1457                           ;lcdCon.c: 82: ready_LCD();
  1458  001304  EC1F  F009         	call	_ready_LCD	;wreg free
  1459  001308  0012               	return		;funcret
  1460  00130A                     __end_of_second_line_LCD:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           intcon	equ	0xFF2
  1465                           wreg	equ	0xFE8
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _open *****************
  1469 ;; Defined at:
  1470 ;;		line 22 in file "status.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_menu
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text10
  1498  00132E                     __ptext10:
  1499                           	opt stack 0
  1500  00132E                     _open:
  1501                           	opt stack 29
  1502                           
  1503                           ;status.c: 23: CCPR1L = 0x5F;
  1504                           
  1505                           ;incstack = 0
  1506  00132E  0E5F               	movlw	95
  1507  001330  6EBE               	movwf	4030,c	;volatile
  1508  001332  0012               	return		;funcret
  1509  001334                     __end_of_open:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           intcon	equ	0xFF2
  1514                           wreg	equ	0xFE8
  1515                           status	equ	0xFD8
  1516                           
  1517 ;; *************** function _first_line_LCD *****************
  1518 ;; Defined at:
  1519 ;;		line 76 in file "lcdCon.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		_command_LCD
  1542 ;;		_ready_LCD
  1543 ;; This function is called by:
  1544 ;;		_menu
  1545 ;;		_profile
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text11
  1550  00130A                     __ptext11:
  1551                           	opt stack 0
  1552  00130A                     _first_line_LCD:
  1553                           	opt stack 28
  1554                           
  1555                           ;lcdCon.c: 77: command_LCD(0x20);
  1556                           
  1557                           ;incstack = 0
  1558  00130A  0E20               	movlw	32
  1559  00130C  EC39  F009         	call	_command_LCD
  1560                           
  1561                           ;lcdCon.c: 78: ready_LCD();
  1562  001310  EC1F  F009         	call	_ready_LCD	;wreg free
  1563  001314  0012               	return		;funcret
  1564  001316                     __end_of_first_line_LCD:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           intcon	equ	0xFF2
  1569                           wreg	equ	0xFE8
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _display_string_LCD *****************
  1573 ;; Defined at:
  1574 ;;		line 69 in file "lcdCon.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  data            2    1[COMRAM] PTR unsigned char 
  1577 ;;		 -> STR_16(10), STR_15(11), STR_14(14), STR_13(16), 
  1578 ;;		 -> STR_12(17), STR_11(16), STR_10(10), STR_9(12), 
  1579 ;;		 -> STR_8(14), STR_7(12), STR_6(16), STR_5(16), 
  1580 ;;		 -> STR_4(16), STR_3(14), STR_2(15), STR_1(15), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;Total ram usage:        2 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    1
  1599 ;; This function calls:
  1600 ;;		_display_LCD
  1601 ;;		_ready_LCD
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;;		_welcome
  1605 ;;		_menu
  1606 ;;		_profile
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text12
  1611  0011EE                     __ptext12:
  1612                           	opt stack 0
  1613  0011EE                     _display_string_LCD:
  1614                           	opt stack 28
  1615                           
  1616                           ;lcdCon.c: 70: PORTAbits.RA1 = 1;
  1617                           
  1618                           ;incstack = 0
  1619  0011EE  8280               	bsf	3968,1,c	;volatile
  1620                           
  1621                           ;lcdCon.c: 71: while(*data){
  1622  0011F0  D00A               	goto	l1353
  1623  0011F2                     l1349:
  1624                           
  1625                           ;lcdCon.c: 72: display_LCD(*data++);
  1626  0011F2  C002  FFF6         	movff	display_string_LCD@data,tblptrl
  1627  0011F6  C003  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1628  0011FA                     	if	0	;tblptru may be non-zero
  1629  0011FA                     	endif
  1630  0011FA                     	if	0	;tblptru may be non-zero
  1631  0011FA                     	endif
  1632  0011FA  0008               	tblrd		*
  1633  0011FC  50F5               	movf	tablat,w,c
  1634  0011FE  EC2D  F009         	call	_display_LCD
  1635  001202  4A02               	infsnz	display_string_LCD@data,f,c
  1636  001204  2A03               	incf	display_string_LCD@data+1,f,c
  1637  001206                     l1353:
  1638  001206  C002  FFF6         	movff	display_string_LCD@data,tblptrl
  1639  00120A  C003  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1640  00120E                     	if	0	;tblptru may be non-zero
  1641  00120E                     	endif
  1642  00120E                     	if	0	;tblptru may be non-zero
  1643  00120E                     	endif
  1644  00120E  0008               	tblrd		*
  1645  001210  50F5               	movf	tablat,w,c
  1646  001212  0900               	iorlw	0
  1647  001214  A4D8               	btfss	status,2,c
  1648  001216  D7ED               	goto	l1349
  1649                           
  1650                           ;lcdCon.c: 73: }
  1651                           ;lcdCon.c: 74: ready_LCD();
  1652  001218  EC1F  F009         	call	_ready_LCD	;wreg free
  1653  00121C  0012               	return		;funcret
  1654  00121E                     __end_of_display_string_LCD:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           intcon	equ	0xFF2
  1661                           wreg	equ	0xFE8
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _ready_LCD *****************
  1665 ;; Defined at:
  1666 ;;		line 48 in file "lcdCon.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;;		_setup_LCD
  1691 ;;		_display_string_LCD
  1692 ;;		_first_line_LCD
  1693 ;;		_second_line_LCD
  1694 ;;		_welcome
  1695 ;;		_menu
  1696 ;;		_profile
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text13
  1701  00123E                     __ptext13:
  1702                           	opt stack 0
  1703  00123E                     _ready_LCD:
  1704                           	opt stack 29
  1705                           
  1706                           ;lcdCon.c: 49: TRISD = 0xFF;
  1707                           
  1708                           ;incstack = 0
  1709  00123E  6895               	setf	3989,c	;volatile
  1710                           
  1711                           ;lcdCon.c: 50: PORTAbits.RA1 = 0;
  1712  001240  9280               	bcf	3968,1,c	;volatile
  1713                           
  1714                           ;lcdCon.c: 51: PORTAbits.RA2 = 1;
  1715  001242  8480               	bsf	3968,2,c	;volatile
  1716  001244                     l95:
  1717                           
  1718                           ;lcdCon.c: 53: PORTAbits.RA3 = 1;
  1719  001244  8680               	bsf	3968,3,c	;volatile
  1720                           
  1721                           ;lcdCon.c: 54: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1722  001246  0EB4               	movlw	180
  1723  001248                     u647:
  1724  001248  D000               	nop2	
  1725  00124A  2EE8               	decfsz	wreg,f,c
  1726  00124C  D7FD               	bra	u647
  1727                           
  1728                           ;lcdCon.c: 55: PORTAbits.RA3 = 0;
  1729  00124E  9680               	bcf	3968,3,c	;volatile
  1730                           
  1731                           ;lcdCon.c: 56: }while(PORTDbits.RD7 == 1);
  1732  001250  BE83               	btfsc	3971,7,c	;volatile
  1733  001252  D7F8               	goto	l95
  1734                           
  1735                           ;lcdCon.c: 57: TRISD = 0x00;
  1736  001254  0E00               	movlw	0
  1737  001256  6E95               	movwf	3989,c	;volatile
  1738  001258  0012               	return		;funcret
  1739  00125A                     __end_of_ready_LCD:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           intcon	equ	0xFF2
  1746                           wreg	equ	0xFE8
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function _display_LCD *****************
  1750 ;; Defined at:
  1751 ;;		line 60 in file "lcdCon.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  data            1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  data            1    0[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;;		_display_string_LCD
  1776 ;;		_menu
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text14
  1781  00125A                     __ptext14:
  1782                           	opt stack 0
  1783  00125A                     _display_LCD:
  1784                           	opt stack 28
  1785                           
  1786                           ;incstack = 0
  1787                           ;display_LCD@data stored from wreg
  1788  00125A  6E01               	movwf	display_LCD@data,c
  1789                           
  1790                           ;lcdCon.c: 61: PORTD = data;
  1791  00125C  C001  FF83         	movff	display_LCD@data,3971	;volatile
  1792                           
  1793                           ;lcdCon.c: 62: PORTAbits.RA1 = 1;
  1794  001260  8280               	bsf	3968,1,c	;volatile
  1795                           
  1796                           ;lcdCon.c: 63: PORTAbits.RA2 = 0;
  1797  001262  9480               	bcf	3968,2,c	;volatile
  1798                           
  1799                           ;lcdCon.c: 64: PORTAbits.RA3 = 1;
  1800  001264  8680               	bsf	3968,3,c	;volatile
  1801                           
  1802                           ;lcdCon.c: 65: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1803  001266  0EB4               	movlw	180
  1804  001268                     u657:
  1805  001268  D000               	nop2	
  1806  00126A  2EE8               	decfsz	wreg,f,c
  1807  00126C  D7FD               	bra	u657
  1808                           
  1809                           ;lcdCon.c: 66: PORTAbits.RA3 = 0;
  1810  00126E  9680               	bcf	3968,3,c	;volatile
  1811  001270  0012               	return		;funcret
  1812  001272                     __end_of_display_LCD:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           intcon	equ	0xFF2
  1819                           wreg	equ	0xFE8
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _close *****************
  1823 ;; Defined at:
  1824 ;;		line 25 in file "status.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_menu
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text15
  1852  001334                     __ptext15:
  1853                           	opt stack 0
  1854  001334                     _close:
  1855                           	opt stack 29
  1856                           
  1857                           ;status.c: 26: CCPR1L = 0x1F;
  1858                           
  1859                           ;incstack = 0
  1860  001334  0E1F               	movlw	31
  1861  001336  6EBE               	movwf	4030,c	;volatile
  1862  001338  0012               	return		;funcret
  1863  00133A                     __end_of_close:
  1864                           	opt stack 0
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           intcon	equ	0xFF2
  1870                           wreg	equ	0xFE8
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _clear_LCD *****************
  1874 ;; Defined at:
  1875 ;;		line 84 in file "lcdCon.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		_command_LCD
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;;		_menu
  1901 ;;		_profile
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text16
  1906  001320                     __ptext16:
  1907                           	opt stack 0
  1908  001320                     _clear_LCD:
  1909                           	opt stack 28
  1910                           
  1911                           ;lcdCon.c: 85: command_LCD(0x01);
  1912                           
  1913                           ;incstack = 0
  1914  001320  0E01               	movlw	1
  1915  001322  EC39  F009         	call	_command_LCD
  1916  001326  0012               	return		;funcret
  1917  001328                     __end_of_clear_LCD:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           intcon	equ	0xFF2
  1924                           wreg	equ	0xFE8
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _command_LCD *****************
  1928 ;; Defined at:
  1929 ;;		line 39 in file "lcdCon.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  x               1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  x               1    0[COMRAM] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;Total ram usage:        1 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_setup_LCD
  1953 ;;		_first_line_LCD
  1954 ;;		_second_line_LCD
  1955 ;;		_clear_LCD
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text17
  1960  001272                     __ptext17:
  1961                           	opt stack 0
  1962  001272                     _command_LCD:
  1963                           	opt stack 29
  1964                           
  1965                           ;incstack = 0
  1966                           ;command_LCD@x stored from wreg
  1967  001272  6E01               	movwf	command_LCD@x,c
  1968                           
  1969                           ;lcdCon.c: 40: PORTD = x;
  1970  001274  C001  FF83         	movff	command_LCD@x,3971	;volatile
  1971                           
  1972                           ;lcdCon.c: 41: PORTAbits.RA1 = 0;
  1973  001278  9280               	bcf	3968,1,c	;volatile
  1974                           
  1975                           ;lcdCon.c: 42: PORTAbits.RA2 = 0;
  1976  00127A  9480               	bcf	3968,2,c	;volatile
  1977                           
  1978                           ;lcdCon.c: 43: PORTAbits.RA3 = 1;
  1979  00127C  8680               	bsf	3968,3,c	;volatile
  1980                           
  1981                           ;lcdCon.c: 44: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1982  00127E  0EB4               	movlw	180
  1983  001280                     u667:
  1984  001280  D000               	nop2	
  1985  001282  2EE8               	decfsz	wreg,f,c
  1986  001284  D7FD               	bra	u667
  1987                           
  1988                           ;lcdCon.c: 45: PORTAbits.RA3 = 0;
  1989  001286  9680               	bcf	3968,3,c	;volatile
  1990  001288  0012               	return		;funcret
  1991  00128A                     __end_of_command_LCD:
  1992                           	opt stack 0
  1993                           tblptru	equ	0xFF8
  1994                           tblptrh	equ	0xFF7
  1995                           tblptrl	equ	0xFF6
  1996                           tablat	equ	0xFF5
  1997                           intcon	equ	0xFF2
  1998                           wreg	equ	0xFE8
  1999                           status	equ	0xFD8
  2000                           
  2001 ;; *************** function _checkPassword *****************
  2002 ;; Defined at:
  2003 ;;		line 50 in file "profile.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  pass            1    4[COMRAM] unsigned char 
  2008 ;;  i               1    5[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      unsigned char 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;Total ram usage:        2 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    2
  2025 ;; This function calls:
  2026 ;;		_obtainedKey
  2027 ;;		_readPassword
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text18
  2034  0011B6                     __ptext18:
  2035                           	opt stack 0
  2036  0011B6                     _checkPassword:
  2037                           	opt stack 28
  2038                           
  2039                           ;profile.c: 51: unsigned char i = 0;
  2040                           
  2041                           ;incstack = 0
  2042  0011B6  0E00               	movlw	0
  2043  0011B8  6E06               	movwf	checkPassword@i,c
  2044  0011BA                     l1401:
  2045                           
  2046                           ;profile.c: 54: unsigned char pass = readPassword(0x00+1);
  2047  0011BA  0E01               	movlw	1
  2048  0011BC  EC6E  F009         	call	_readPassword
  2049  0011C0  6E05               	movwf	checkPassword@pass,c
  2050                           
  2051                           ;profile.c: 55: if(obtainedKey() == pass){
  2052  0011C2  EC0F  F009         	call	_obtainedKey	;wreg free
  2053  0011C6  1805               	xorwf	checkPassword@pass,w,c
  2054  0011C8  A4D8               	btfss	status,2,c
  2055  0011CA  D002               	goto	l1411
  2056                           
  2057                           ;profile.c: 56: return 1;
  2058  0011CC  0E01               	movlw	1
  2059  0011CE  0012               	return	
  2060  0011D0                     l1411:
  2061  0011D0  0E02               	movlw	2
  2062  0011D2  6006               	cpfslt	checkPassword@i,c
  2063  0011D4  D007               	goto	l1419
  2064  0011D6  EC0F  F009         	call	_obtainedKey	;wreg free
  2065  0011DA  1805               	xorwf	checkPassword@pass,w,c
  2066  0011DC  B4D8               	btfsc	status,2,c
  2067  0011DE  D002               	goto	l1419
  2068                           
  2069                           ;profile.c: 58: return 0;
  2070  0011E0  0E00               	movlw	0
  2071  0011E2  0012               	return	
  2072  0011E4                     l1419:
  2073                           
  2074                           ;profile.c: 59: }
  2075                           ;profile.c: 60: i++;
  2076  0011E4  2A06               	incf	checkPassword@i,f,c
  2077                           
  2078                           ;profile.c: 61: }while(i<2);
  2079  0011E6  0E01               	movlw	1
  2080  0011E8  6406               	cpfsgt	checkPassword@i,c
  2081  0011EA  D7E7               	goto	l1401
  2082  0011EC  0012               	return	
  2083  0011EE                     __end_of_checkPassword:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           intcon	equ	0xFF2
  2090                           wreg	equ	0xFE8
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _readPassword *****************
  2094 ;; Defined at:
  2095 ;;		line 14 in file "profile.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  address         1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  address         1    2[COMRAM] unsigned char 
  2100 ;;  value           1    3[COMRAM] volatile unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    1
  2117 ;; This function calls:
  2118 ;;		_Read_b_eep
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;;		_menu
  2122 ;;		_checkPassword
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text19
  2127  0012DC                     __ptext19:
  2128                           	opt stack 0
  2129  0012DC                     _readPassword:
  2130                           	opt stack 29
  2131                           
  2132                           ;incstack = 0
  2133                           ;readPassword@address stored from wreg
  2134  0012DC  6E03               	movwf	readPassword@address,c
  2135                           
  2136                           ;profile.c: 15: volatile unsigned char value;
  2137                           ;profile.c: 16: value = Read_b_eep(address);
  2138  0012DE  C003  F001         	movff	readPassword@address,Read_b_eep@badd
  2139  0012E2  6A02               	clrf	Read_b_eep@badd+1,c
  2140  0012E4  EC45  F009         	call	_Read_b_eep	;wreg free
  2141  0012E8  6E04               	movwf	readPassword@value,c	;volatile
  2142                           
  2143                           ;profile.c: 17: return value;
  2144  0012EA  5004               	movf	readPassword@value,w,c	;volatile
  2145  0012EC  0012               	return	
  2146  0012EE                     __end_of_readPassword:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           intcon	equ	0xFF2
  2153                           wreg	equ	0xFE8
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _Read_b_eep *****************
  2157 ;; Defined at:
  2158 ;;		line 35 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/read_B.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  badd            2    0[COMRAM] unsigned int 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_readPassword
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text20
  2186  00128A                     __ptext20:
  2187                           	opt stack 0
  2188  00128A                     _Read_b_eep:
  2189                           	opt stack 29
  2190                           
  2191                           ;incstack = 0
  2192  00128A  5002               	movf	Read_b_eep@badd+1,w,c
  2193  00128C  0B03               	andlw	3
  2194  00128E  6EAA               	movwf	4010,c	;volatile
  2195  001290  C001  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  2196  001294  9CA6               	bcf	4006,6,c	;volatile
  2197  001296  9EA6               	bcf	4006,7,c	;volatile
  2198  001298  80A6               	bsf	4006,0,c	;volatile
  2199  00129A  F000               	nop	
  2200  00129C  F000               	nop	
  2201  00129E  50A8               	movf	4008,w,c	;volatile
  2202  0012A0  0012               	return	
  2203  0012A2                     __end_of_Read_b_eep:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           intcon	equ	0xFF2
  2210                           wreg	equ	0xFE8
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function _obtainedKey *****************
  2214 ;; Defined at:
  2215 ;;		line 73 in file "keypadCon.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  key_presiona    1    1[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;Total ram usage:        1 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    1
  2236 ;; This function calls:
  2237 ;;		_getKey
  2238 ;;		_ground
  2239 ;; This function is called by:
  2240 ;;		_menu
  2241 ;;		_profile
  2242 ;;		_checkPassword
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text21
  2247  00121E                     __ptext21:
  2248                           	opt stack 0
  2249  00121E                     _obtainedKey:
  2250                           	opt stack 28
  2251                           
  2252                           ;keypadCon.c: 74: ground();
  2253                           
  2254                           ;incstack = 0
  2255  00121E  EC8B  F009         	call	_ground	;wreg free
  2256                           
  2257                           ;keypadCon.c: 75: unsigned char key_presionada = 0xFF;
  2258  001222  6802               	setf	obtainedKey@key_presionada,c
  2259  001224                     l1099:
  2260                           
  2261                           ;keypadCon.c: 77: key_presionada = getKey();
  2262  001224  EC61  F007         	call	_getKey	;wreg free
  2263  001228  6E02               	movwf	obtainedKey@key_presionada,c
  2264                           
  2265                           ;keypadCon.c: 78: }
  2266                           ;keypadCon.c: 79: while(key_presionada == 0xFF);
  2267  00122A  2802               	incf	obtainedKey@key_presionada,w,c
  2268  00122C  B4D8               	btfsc	status,2,c
  2269  00122E  D7FA               	goto	l1099
  2270  001230                     l1103:
  2271  001230  EC61  F007         	call	_getKey	;wreg free
  2272  001234  0AFF               	xorlw	255
  2273  001236  A4D8               	btfss	status,2,c
  2274  001238  D7FB               	goto	l1103
  2275                           
  2276                           ;keypadCon.c: 82: return key_presionada;
  2277  00123A  5002               	movf	obtainedKey@key_presionada,w,c
  2278  00123C  0012               	return	
  2279  00123E                     __end_of_obtainedKey:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           intcon	equ	0xFF2
  2286                           wreg	equ	0xFE8
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _ground *****************
  2290 ;; Defined at:
  2291 ;;		line 66 in file "keypadCon.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		None
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_obtainedKey
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text22
  2319  001316                     __ptext22:
  2320                           	opt stack 0
  2321  001316                     _ground:
  2322                           	opt stack 28
  2323                           
  2324                           ;keypadCon.c: 67: LATCbits.LATC0 = 0;
  2325                           
  2326                           ;incstack = 0
  2327  001316  908B               	bcf	3979,0,c	;volatile
  2328                           
  2329                           ;keypadCon.c: 68: LATCbits.LATC1 = 0;
  2330  001318  928B               	bcf	3979,1,c	;volatile
  2331                           
  2332                           ;keypadCon.c: 69: LATEbits.LATE2 = 0;
  2333  00131A  948D               	bcf	3981,2,c	;volatile
  2334                           
  2335                           ;keypadCon.c: 70: LATCbits.LATC3 = 0;
  2336  00131C  968B               	bcf	3979,3,c	;volatile
  2337  00131E  0012               	return		;funcret
  2338  001320                     __end_of_ground:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           intcon	equ	0xFF2
  2345                           wreg	equ	0xFE8
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _getKey *****************
  2349 ;; Defined at:
  2350 ;;		line 21 in file "keypadCon.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_obtainedKey
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text23
  2378  000EC2                     __ptext23:
  2379                           	opt stack 0
  2380  000EC2                     _getKey:
  2381                           	opt stack 28
  2382                           
  2383                           ;keypadCon.c: 23: LATCbits.LATC0 = 0;
  2384                           
  2385                           ;incstack = 0
  2386  000EC2  908B               	bcf	3979,0,c	;volatile
  2387                           
  2388                           ;keypadCon.c: 24: LATCbits.LATC1 = 1;
  2389  000EC4  828B               	bsf	3979,1,c	;volatile
  2390                           
  2391                           ;keypadCon.c: 25: LATEbits.LATE2 = 1;
  2392  000EC6  848D               	bsf	3981,2,c	;volatile
  2393                           
  2394                           ;keypadCon.c: 26: LATCbits.LATC3 = 1;
  2395  000EC8  868B               	bsf	3979,3,c	;volatile
  2396                           
  2397                           ;keypadCon.c: 27: _delay((unsigned long)((25)*(8000000/4000.0)));
  2398  000ECA  0E41               	movlw	65
  2399  000ECC  6E01               	movwf	??_getKey& (0+255),c
  2400  000ECE  0EEE               	movlw	238
  2401  000ED0                     u677:
  2402  000ED0  2EE8               	decfsz	wreg,f,c
  2403  000ED2  D7FE               	bra	u677
  2404  000ED4  2E01               	decfsz	??_getKey& (0+255),f,c
  2405  000ED6  D7FC               	bra	u677
  2406  000ED8  D000               	nop2	
  2407                           
  2408                           ;keypadCon.c: 28: if(PORTCbits.RC4 == 0) return '1';
  2409  000EDA  B882               	btfsc	3970,4,c	;volatile
  2410  000EDC  D002               	goto	l227
  2411  000EDE  0E31               	movlw	49
  2412  000EE0  0012               	return	
  2413  000EE2                     l227:
  2414                           
  2415                           ;keypadCon.c: 29: if(PORTCbits.RC5 == 0) return '2';
  2416  000EE2  BA82               	btfsc	3970,5,c	;volatile
  2417  000EE4  D002               	goto	l229
  2418  000EE6  0E32               	movlw	50
  2419  000EE8  0012               	return	
  2420  000EEA                     l229:
  2421                           
  2422                           ;keypadCon.c: 30: if(PORTCbits.RC6 == 0) return '3';
  2423  000EEA  BC82               	btfsc	3970,6,c	;volatile
  2424  000EEC  D002               	goto	l230
  2425  000EEE  0E33               	movlw	51
  2426  000EF0  0012               	return	
  2427  000EF2                     l230:
  2428                           
  2429                           ;keypadCon.c: 31: if(PORTCbits.RC7 == 0) return 'A';
  2430  000EF2  BE82               	btfsc	3970,7,c	;volatile
  2431  000EF4  D002               	goto	l231
  2432  000EF6  0E41               	movlw	65
  2433  000EF8  0012               	return	
  2434  000EFA                     l231:
  2435                           
  2436                           ;keypadCon.c: 33: LATCbits.LATC0 = 1;
  2437  000EFA  808B               	bsf	3979,0,c	;volatile
  2438                           
  2439                           ;keypadCon.c: 34: LATCbits.LATC1 = 0;
  2440  000EFC  928B               	bcf	3979,1,c	;volatile
  2441                           
  2442                           ;keypadCon.c: 35: LATEbits.LATE2 = 1;
  2443  000EFE  848D               	bsf	3981,2,c	;volatile
  2444                           
  2445                           ;keypadCon.c: 36: LATCbits.LATC3 = 1;
  2446  000F00  868B               	bsf	3979,3,c	;volatile
  2447                           
  2448                           ;keypadCon.c: 37: _delay((unsigned long)((25)*(8000000/4000.0)));
  2449  000F02  0E41               	movlw	65
  2450  000F04  6E01               	movwf	??_getKey& (0+255),c
  2451  000F06  0EEE               	movlw	238
  2452  000F08                     u687:
  2453  000F08  2EE8               	decfsz	wreg,f,c
  2454  000F0A  D7FE               	bra	u687
  2455  000F0C  2E01               	decfsz	??_getKey& (0+255),f,c
  2456  000F0E  D7FC               	bra	u687
  2457  000F10  D000               	nop2	
  2458                           
  2459                           ;keypadCon.c: 38: if(PORTCbits.RC4 == 0) return '4';
  2460  000F12  B882               	btfsc	3970,4,c	;volatile
  2461  000F14  D002               	goto	l232
  2462  000F16  0E34               	movlw	52
  2463  000F18  0012               	return	
  2464  000F1A                     l232:
  2465                           
  2466                           ;keypadCon.c: 39: if(PORTCbits.RC5 == 0) return '5';
  2467  000F1A  BA82               	btfsc	3970,5,c	;volatile
  2468  000F1C  D002               	goto	l233
  2469  000F1E  0E35               	movlw	53
  2470  000F20  0012               	return	
  2471  000F22                     l233:
  2472                           
  2473                           ;keypadCon.c: 40: if(PORTCbits.RC6 == 0) return '6';
  2474  000F22  BC82               	btfsc	3970,6,c	;volatile
  2475  000F24  D002               	goto	l234
  2476  000F26  0E36               	movlw	54
  2477  000F28  0012               	return	
  2478  000F2A                     l234:
  2479                           
  2480                           ;keypadCon.c: 41: if(PORTCbits.RC7 == 0) return 'B';
  2481  000F2A  BE82               	btfsc	3970,7,c	;volatile
  2482  000F2C  D002               	goto	l235
  2483  000F2E  0E42               	movlw	66
  2484  000F30  0012               	return	
  2485  000F32                     l235:
  2486                           
  2487                           ;keypadCon.c: 43: LATCbits.LATC0 = 1;
  2488  000F32  808B               	bsf	3979,0,c	;volatile
  2489                           
  2490                           ;keypadCon.c: 44: LATCbits.LATC1 = 1;
  2491  000F34  828B               	bsf	3979,1,c	;volatile
  2492                           
  2493                           ;keypadCon.c: 45: LATEbits.LATE2 = 0;
  2494  000F36  948D               	bcf	3981,2,c	;volatile
  2495                           
  2496                           ;keypadCon.c: 46: LATCbits.LATC3 = 1;
  2497  000F38  868B               	bsf	3979,3,c	;volatile
  2498                           
  2499                           ;keypadCon.c: 47: _delay((unsigned long)((25)*(8000000/4000.0)));
  2500  000F3A  0E41               	movlw	65
  2501  000F3C  6E01               	movwf	??_getKey& (0+255),c
  2502  000F3E  0EEE               	movlw	238
  2503  000F40                     u697:
  2504  000F40  2EE8               	decfsz	wreg,f,c
  2505  000F42  D7FE               	bra	u697
  2506  000F44  2E01               	decfsz	??_getKey& (0+255),f,c
  2507  000F46  D7FC               	bra	u697
  2508  000F48  D000               	nop2	
  2509                           
  2510                           ;keypadCon.c: 48: if(PORTCbits.RC4 == 0) return '7';
  2511  000F4A  B882               	btfsc	3970,4,c	;volatile
  2512  000F4C  D002               	goto	l236
  2513  000F4E  0E37               	movlw	55
  2514  000F50  0012               	return	
  2515  000F52                     l236:
  2516                           
  2517                           ;keypadCon.c: 49: if(PORTCbits.RC5 == 0) return '8';
  2518  000F52  BA82               	btfsc	3970,5,c	;volatile
  2519  000F54  D002               	goto	l237
  2520  000F56  0E38               	movlw	56
  2521  000F58  0012               	return	
  2522  000F5A                     l237:
  2523                           
  2524                           ;keypadCon.c: 50: if(PORTCbits.RC6 == 0) return '9';
  2525  000F5A  BC82               	btfsc	3970,6,c	;volatile
  2526  000F5C  D002               	goto	l238
  2527  000F5E  0E39               	movlw	57
  2528  000F60  0012               	return	
  2529  000F62                     l238:
  2530                           
  2531                           ;keypadCon.c: 51: if(PORTCbits.RC7 == 0) return 'C';
  2532  000F62  BE82               	btfsc	3970,7,c	;volatile
  2533  000F64  D002               	goto	l239
  2534  000F66  0E43               	movlw	67
  2535  000F68  0012               	return	
  2536  000F6A                     l239:
  2537                           
  2538                           ;keypadCon.c: 53: LATCbits.LATC0 = 1;
  2539  000F6A  808B               	bsf	3979,0,c	;volatile
  2540                           
  2541                           ;keypadCon.c: 54: LATCbits.LATC1 = 1;
  2542  000F6C  828B               	bsf	3979,1,c	;volatile
  2543                           
  2544                           ;keypadCon.c: 55: LATEbits.LATE2 = 1;
  2545  000F6E  848D               	bsf	3981,2,c	;volatile
  2546                           
  2547                           ;keypadCon.c: 56: LATCbits.LATC3 = 0;
  2548  000F70  968B               	bcf	3979,3,c	;volatile
  2549                           
  2550                           ;keypadCon.c: 57: _delay((unsigned long)((25)*(8000000/4000.0)));
  2551  000F72  0E41               	movlw	65
  2552  000F74  6E01               	movwf	??_getKey& (0+255),c
  2553  000F76  0EEE               	movlw	238
  2554  000F78                     u707:
  2555  000F78  2EE8               	decfsz	wreg,f,c
  2556  000F7A  D7FE               	bra	u707
  2557  000F7C  2E01               	decfsz	??_getKey& (0+255),f,c
  2558  000F7E  D7FC               	bra	u707
  2559  000F80  D000               	nop2	
  2560                           
  2561                           ;keypadCon.c: 58: if(PORTCbits.RC4 == 0) return '*';
  2562  000F82  B882               	btfsc	3970,4,c	;volatile
  2563  000F84  D002               	goto	l240
  2564  000F86  0E2A               	movlw	42
  2565  000F88  0012               	return	
  2566  000F8A                     l240:
  2567                           
  2568                           ;keypadCon.c: 59: if(PORTCbits.RC5 == 0) return '0';
  2569  000F8A  BA82               	btfsc	3970,5,c	;volatile
  2570  000F8C  D002               	goto	l241
  2571  000F8E  0E30               	movlw	48
  2572  000F90  0012               	return	
  2573  000F92                     l241:
  2574                           
  2575                           ;keypadCon.c: 60: if(PORTCbits.RC6 == 0) return '#';
  2576  000F92  BC82               	btfsc	3970,6,c	;volatile
  2577  000F94  D002               	goto	l242
  2578  000F96  0E23               	movlw	35
  2579  000F98  0012               	return	
  2580  000F9A                     l242:
  2581                           
  2582                           ;keypadCon.c: 61: if(PORTCbits.RC7 == 0) return 'D';
  2583  000F9A  BE82               	btfsc	3970,7,c	;volatile
  2584  000F9C  D002               	goto	l1067
  2585  000F9E  0E44               	movlw	68
  2586  000FA0  0012               	return	
  2587  000FA2                     l1067:
  2588                           
  2589                           ;keypadCon.c: 63: return 0xFF;
  2590  000FA2  0EFF               	movlw	255
  2591  000FA4  0012               	return	
  2592  000FA6                     __end_of_getKey:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           intcon	equ	0xFF2
  2599                           wreg	equ	0xFE8
  2600                           status	equ	0xFD8
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           intcon	equ	0xFF2
  2606                           wreg	equ	0xFE8
  2607                           status	equ	0xFD8
  2608                           
  2609                           	psect	rparam
  2610  0000                     tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           intcon	equ	0xFF2
  2615                           wreg	equ	0xFE8
  2616                           status	equ	0xFD8


Data Sizes:
    Strings     212
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__read_display_LCD	PTR unsigned char  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 

    display_string_LCD@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[14]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[10]), STR_9(CODE[12]), 
		 -> STR_8(CODE[14]), STR_7(CODE[12]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_profile
    _welcome->_display_string_LCD
    _setup_LCD->_command_LCD
    _profile->_writePassword
    _writePassword->_Write_b_eep
    _menu->_readPassword
    _second_line_LCD->_command_LCD
    _first_line_LCD->_command_LCD
    _display_string_LCD->_display_LCD
    _clear_LCD->_command_LCD
    _checkPassword->_readPassword
    _readPassword->_Read_b_eep
    _obtainedKey->_getKey

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5747
                      _checkPassword
                          _clear_LCD
                        _display_LCD
                 _display_string_LCD
                               _menu
                            _profile
                            _pwmInit
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
                          _setup_LCD
                            _welcome
 ---------------------------------------------------------------------------------
 (1) _welcome                                              0     0      0    1084
                 _display_string_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _setup_LCD                                            2     2      0      15
                                              1 COMRAM     2     2      0
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _profile                                              2     2      0    1765
                                              6 COMRAM     2     2      0
                          _clear_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                          _ready_LCD
                    _second_line_LCD
                      _writePassword
 ---------------------------------------------------------------------------------
 (2) _writePassword                                        2     1      1     582
                                              4 COMRAM     2     1      1
                           _Busy_eep
                        _Write_b_eep
                        _obtainedKey (ARG)
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     218
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    1327
                                              4 COMRAM     2     2      0
                          _clear_LCD
                              _close
                        _display_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                               _open
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
 ---------------------------------------------------------------------------------
 (1) _second_line_LCD                                      0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _first_line_LCD                                       0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _display_string_LCD                                   2     0      2    1084
                                              1 COMRAM     2     0      2
                        _display_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _ready_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_LCD                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            0     0      0      15
                        _command_LCD
 ---------------------------------------------------------------------------------
 (2) _command_LCD                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0     274
                                              4 COMRAM     2     2      0
                        _obtainedKey
                       _readPassword
 ---------------------------------------------------------------------------------
 (1) _readPassword                                         2     2      0     153
                                              2 COMRAM     2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2     108
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _obtainedKey                                          1     1      0      30
                                              1 COMRAM     1     1      0
                             _getKey
                             _ground
 ---------------------------------------------------------------------------------
 (3) _ground                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getKey                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPassword
     _obtainedKey
       _getKey
       _ground
     _readPassword
       _Read_b_eep
   _clear_LCD
     _command_LCD
   _display_LCD
   _display_string_LCD
     _display_LCD
     _ready_LCD
   _menu
     _clear_LCD
       _command_LCD
     _close
     _display_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _open
     _readPassword
       _Read_b_eep
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
   _profile
     _clear_LCD
       _command_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
     _writePassword
       _Busy_eep
       _Write_b_eep
       _obtainedKey (ARG)
         _getKey
         _ground
   _pwmInit
   _readPassword
     _Read_b_eep
   _ready_LCD
   _second_line_LCD
     _command_LCD
     _ready_LCD
   _setup_LCD
     _command_LCD
     _ready_LCD
   _welcome
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _ready_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       9       1        9.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      20        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May  7 13:11:25 2017

               ?_display_LCD 0001                           l95 1244        __end_of_checkPassword 11EE  
                        l230 0EF2                          l231 0EFA                          l240 0F8A  
                        l232 0F1A                          l241 0F92                          l233 0F22  
                        l242 0F9A                          l234 0F2A                          l235 0F32  
                        l227 0EE2                          l236 0F52                          l237 0F5A  
                        l229 0EEA                          l238 0F62                          l239 0F6A  
                        l290 11A4                          l259 1328                          _PR2 000FCB  
                        u425 11B0                          u426 11B2                          u617 113A  
                        u707 0F78                          u627 1156                          u637 0EAE  
                        u647 1248                          u657 1268                          u667 1280  
                        u677 0ED0                          u687 0F08                          u697 0F40  
       __size_of_Write_b_eep 003E                          wreg 000FE8                 __CFG_LVP$OFF 000000  
     display_string_LCD@data 0002                 __CFG_WDT$OFF 000000                         l1103 1230  
                       l1401 11BA                         l1067 0FA2                         l1411 11D0  
                       l1353 1206                         l1099 1224                         l1419 11E4  
                       l1427 0DD6                         l1507 1050                         l1349 11F2  
                       l1463 0E7C                         l1383 10DC                         l1449 0E3A  
                       l1389 10F8                         l1487 0FEA                         l1497 1020  
                       STR_1 0D71                         STR_2 0D62                         STR_3 0D9C  
                       STR_4 0D52                         STR_5 0D42                         STR_6 0D32  
                       STR_7 0DAA                         STR_8 0D8E                         STR_9 0DAA  
                       _LATA 000F89                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         _flag 0009                         _main 0FA6  
                       _menu 0DD6                         _open 132E            ??_second_line_LCD 0002  
                       start 0000                __CFG_MCLRE$ON 000000                 command_LCD@x 0001  
               ___param_bank 000000                        ?_main 0001                        ?_menu 0001  
                      _EEADR 000FA9                        STR_10 0DCB                        STR_11 0D22  
                      ?_open 0001                        STR_12 0D01                        STR_13 0D12  
                      STR_14 0D80                        STR_15 0DB6                        STR_16 0DC1  
                      _CMCON 000FB4                        _T2CON 000FCA      __size_of_first_line_LCD 000C  
                      _PORTA 000F80                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96               Read_b_eep@badd 0001  
                      _close 1334       Write_b_eep@GIE_BIT_VAL 0004                 ?_obtainedKey 0001  
                      tablat 000FF5              __end_of_pwmInit 12DC              __end_of_welcome 12CA  
            __end_of_profile 112E                        status 000FD8              __initialization 12EE  
               __end_of_main 1084         writePassword@address 0005                 __end_of_menu 0EC2  
               __end_of_open 1334                   _Read_b_eep 128A             __end_of_Busy_eep 132E  
                     ??_main 0009                       ??_menu 0005                       ??_open 0001  
              __activetblptr 000001                ?_readPassword 0001                       ?_close 0001  
                     _ADCON1 000FC1                       _EEADRH 000FAA                       _EEDATA 000FA8  
                     _CCPR1L 000FBE                       _EECON2 000FA7                       _OSCCON 000FD3  
       __size_of_command_LCD 0018                       _getKey 0EC2            readPassword@value 0004  
                     _ground 1316         __size_of_display_LCD 0018                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
             ??_readPassword 0003                    ??_pwmInit 0001                    ??_welcome 0004  
                  ??_profile 0007                   __accesstop 0060      __end_of__initialization 12F0  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001   __end_of_display_string_LCD 121E  
     __size_of_writePassword 0016               __pcstackCOMRAM 0001                __end_of_close 133A  
                ?_Read_b_eep 0001           __size_of_clear_LCD 0008               _first_line_LCD 130A  
            _second_line_LCD 12FE                      ??_close 0001         __size_of_obtainedKey 0020  
                  ?_Busy_eep 0001           __size_of_ready_LCD 001C                      ?_getKey 0001  
                    _CCP1CON 000FBD                      ?_ground 0001       __end_of_first_line_LCD 1316  
              ??_Write_b_eep 0004           __size_of_setup_LCD 004A                _writePassword 12A2  
        __size_of_Read_b_eep 0018            __end_of_clear_LCD 1328                   ??_Busy_eep 0001  
     __size_of_checkPassword 0038                      __Hparam 0000                      __Lparam 0000  
       __end_of_readPassword 12EE              __size_of_getKey 00E4                 __psmallconst 0D00  
                    __pcinit 12EE              ?_first_line_LCD 0001                      __ramtop 0D00  
            __size_of_ground 000A                      __ptext0 0FA6                      __ptext1 12B8  
                    __ptext2 112E                      __ptext3 12CA                      __ptext4 1084  
                    __ptext5 12A2                      __ptext6 1178                      __ptext7 1328  
                    __ptext8 0DD6                      __ptext9 12FE      __end_of_second_line_LCD 130A  
             ?_writePassword 0005            __end_of_ready_LCD 125A    obtainedKey@key_presionada 0002  
        __end_of_Write_b_eep 11B6                      _pwmInit 12CA                      _welcome 12B8  
                    _profile 1084         end_of_initialization 12F0            __end_of_setup_LCD 1178  
             checkPassword@i 0006                _checkPassword 11B6                    _PORTAbits 000F80  
                  _PORTCbits 000F82                    _PORTDbits 000F83                ??_command_LCD 0001  
              ??_display_LCD 0001                 ??_Read_b_eep 0003               ?_checkPassword 0001  
             __end_of_getKey 0FA6              ??_writePassword 0006                  _Write_b_eep 1178  
             __end_of_ground 1320             ?_second_line_LCD 0001           _display_string_LCD 11EE  
        start_initialization 12EE          ?_display_string_LCD 0002           __end_of_Read_b_eep 12A2  
           __CFG_OSC$IRCIO67 000000        __size_of_readPassword 0012            __size_of_Busy_eep 0006  
       ??_display_string_LCD 0004                     ??_getKey 0001                     ??_ground 0001  
        __end_of_command_LCD 128A          __end_of_display_LCD 1272                  __pbssCOMRAM 0009  
               _readPassword 12DC                ??_obtainedKey 0002                    _clear_LCD 1320  
           ??_first_line_LCD 0002              ??_checkPassword 0005                  __smallconst 0D00  
                   ?_pwmInit 0001                     ?_welcome 0001                     ?_profile 0001  
             __size_of_close 0006                    _ready_LCD 123E                     _LATCbits 000F8B  
                   _LATEbits 000F8D          __end_of_obtainedKey 123E                   ?_clear_LCD 0001  
                _command_LCD 1272                    _setup_LCD 112E                  _display_LCD 125A  
            Write_b_eep@badd 0001              Write_b_eep@bdat 0003            checkPassword@pass 0005  
                 ?_ready_LCD 0001                     _Busy_eep 1328           writePassword@value 0006  
                 _EECON1bits 000FA6                     __Hrparam 0000              display_LCD@data 0001  
                   __Lrparam 0000                 __Lsmallconst 0D00                   ?_setup_LCD 0001  
               ?_Write_b_eep 0001          readPassword@address 0003                     __ptext10 132E  
                   __ptext11 130A                     __ptext20 128A                     __ptext12 11EE  
                   __ptext21 121E                     __ptext13 123E                     __ptext22 1316  
                   __ptext14 125A                     __ptext23 0EC2                     __ptext15 1334  
                   __ptext16 1320                     __ptext17 1272                     __ptext18 11B6  
                   __ptext19 12DC             __size_of_pwmInit 0012             __size_of_welcome 0012  
           __size_of_profile 00AA                  _obtainedKey 121E                __size_of_main 00DE  
              __size_of_menu 00EC                __size_of_open 0006                  ??_clear_LCD 0002  
                 _CVRCONbits 000FB5        __end_of_writePassword 12B8                   _INTCONbits 000FF2  
   __size_of_second_line_LCD 000C                  ??_ready_LCD 0001  __size_of_display_string_LCD 0030  
                ??_setup_LCD 0002                     profile@i 0007                 ?_command_LCD 0001  
