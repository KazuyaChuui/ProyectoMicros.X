

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May  7 14:46:49 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4585 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _EECON2	set	4007
    72  0000                     _INTCONbits	set	4082
    73  0000                     _EEDATA	set	4008
    74  0000                     _EEADR	set	4009
    75  0000                     _EEADRH	set	4010
    76  0000                     _EECON1bits	set	4006
    77  0000                     _PORTBbits	set	3969
    78  0000                     _PORTCbits	set	3970
    79  0000                     _LATEbits	set	3981
    80  0000                     _LATCbits	set	3979
    81  0000                     _CCP1CON	set	4029
    82  0000                     _T2CON	set	4042
    83  0000                     _CCPR1L	set	4030
    84  0000                     _PR2	set	4043
    85  0000                     _PORTDbits	set	3971
    86  0000                     _PORTEbits	set	3972
    87  0000                     _PORTAbits	set	3968
    88  0000                     _TRISE	set	3990
    89  0000                     _TRISD	set	3989
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISA	set	3986
    93  0000                     _LATE	set	3981
    94  0000                     _LATD	set	3980
    95  0000                     _LATC	set	3979
    96  0000                     _LATB	set	3978
    97  0000                     _LATA	set	3977
    98  0000                     _PORTE	set	3972
    99  0000                     _PORTD	set	3971
   100  0000                     _PORTC	set	3970
   101  0000                     _PORTB	set	3969
   102  0000                     _PORTA	set	3968
   103  0000                     _INTCON2bits	set	4081
   104  0000                     _ADCON1	set	4033
   105  0000                     _CVRCONbits	set	4021
   106  0000                     _CMCON	set	4020
   107  0000                     _OSCCON	set	4051
   108                           
   109                           	psect	smallconst
   110  000D00                     __psmallconst:
   111                           	opt stack 0
   112  000D00  00                 	db	0
   113  000D01                     STR_14:
   114  000D01  55                 	db	85	;'U'
   115  000D02  20                 	db	32
   116  000D03  50                 	db	80	;'P'
   117  000D04  72                 	db	114	;'r'
   118  000D05  65                 	db	101	;'e'
   119  000D06  66                 	db	102	;'f'
   120  000D07  65                 	db	101	;'e'
   121  000D08  72                 	db	114	;'r'
   122  000D09  20                 	db	32
   123  000D0A  41                 	db	65	;'A'
   124  000D0B  20                 	db	32
   125  000D0C  42                 	db	66	;'B'
   126  000D0D  20                 	db	32
   127  000D0E  43                 	db	67	;'C'
   128  000D0F  20                 	db	32
   129  000D10  44                 	db	68	;'D'
   130  000D11  00                 	db	0
   131  000D12                     STR_15:
   132  000D12  49                 	db	73	;'I'
   133  000D13  6E                 	db	110	;'n'
   134  000D14  74                 	db	116	;'t'
   135  000D15  72                 	db	114	;'r'
   136  000D16  6F                 	db	111	;'o'
   137  000D17  64                 	db	100	;'d'
   138  000D18  75                 	db	117	;'u'
   139  000D19  63                 	db	99	;'c'
   140  000D1A  65                 	db	101	;'e'
   141  000D1B  20                 	db	32
   142  000D1C  50                 	db	80	;'P'
   143  000D1D  73                 	db	115	;'s'
   144  000D1E  73                 	db	115	;'s'
   145  000D1F  77                 	db	119	;'w'
   146  000D20  64                 	db	100	;'d'
   147  000D21  00                 	db	0
   148  000D22                     STR_13:
   149  000D22  57                 	db	87	;'W'
   150  000D23  68                 	db	104	;'h'
   151  000D24  69                 	db	105	;'i'
   152  000D25  63                 	db	99	;'c'
   153  000D26  68                 	db	104	;'h'
   154  000D27  20                 	db	32
   155  000D28  6C                 	db	108	;'l'
   156  000D29  65                 	db	101	;'e'
   157  000D2A  74                 	db	116	;'t'
   158  000D2B  74                 	db	116	;'t'
   159  000D2C  65                 	db	101	;'e'
   160  000D2D  72                 	db	114	;'r'
   161  000D2E  20                 	db	32
   162  000D2F  64                 	db	100	;'d'
   163  000D30  6F                 	db	111	;'o'
   164  000D31  00                 	db	0
   165  000D32                     STR_7:
   166  000D32  2D                 	db	45
   167  000D33  44                 	db	68	;'D'
   168  000D34  6F                 	db	111	;'o'
   169  000D35  6F                 	db	111	;'o'
   170  000D36  72                 	db	114	;'r'
   171  000D37  20                 	db	32
   172  000D38  55                 	db	85	;'U'
   173  000D39  6E                 	db	110	;'n'
   174  000D3A  6C                 	db	108	;'l'
   175  000D3B  6F                 	db	111	;'o'
   176  000D3C  63                 	db	99	;'c'
   177  000D3D  6B                 	db	107	;'k'
   178  000D3E  65                 	db	101	;'e'
   179  000D3F  64                 	db	100	;'d'
   180  000D40  2D                 	db	45
   181  000D41  00                 	db	0
   182  000D42                     STR_6:
   183  000D42  31                 	db	49	;'1'
   184  000D43  2E                 	db	46
   185  000D44  55                 	db	85	;'U'
   186  000D45  6E                 	db	110	;'n'
   187  000D46  6C                 	db	108	;'l'
   188  000D47  6F                 	db	111	;'o'
   189  000D48  63                 	db	99	;'c'
   190  000D49  6B                 	db	107	;'k'
   191  000D4A  20                 	db	32
   192  000D4B  32                 	db	50	;'2'
   193  000D4C  2E                 	db	46
   194  000D4D  4C                 	db	76	;'L'
   195  000D4E  6F                 	db	111	;'o'
   196  000D4F  63                 	db	99	;'c'
   197  000D50  6B                 	db	107	;'k'
   198  000D51  00                 	db	0
   199  000D52                     STR_5:
   200  000D52  31                 	db	49	;'1'
   201  000D53  2E                 	db	46
   202  000D54  44                 	db	68	;'D'
   203  000D55  6F                 	db	111	;'o'
   204  000D56  6F                 	db	111	;'o'
   205  000D57  72                 	db	114	;'r'
   206  000D58  20                 	db	32
   207  000D59  32                 	db	50	;'2'
   208  000D5A  2E                 	db	46
   209  000D5B  4C                 	db	76	;'L'
   210  000D5C  6F                 	db	111	;'o'
   211  000D5D  67                 	db	103	;'g'
   212  000D5E  4F                 	db	79	;'O'
   213  000D5F  75                 	db	117	;'u'
   214  000D60  74                 	db	116	;'t'
   215  000D61  00                 	db	0
   216  000D62                     STR_2:
   217  000D62  57                 	db	87	;'W'
   218  000D63  72                 	db	114	;'r'
   219  000D64  6F                 	db	111	;'o'
   220  000D65  6E                 	db	110	;'n'
   221  000D66  67                 	db	103	;'g'
   222  000D67  20                 	db	32
   223  000D68  50                 	db	80	;'P'
   224  000D69  61                 	db	97	;'a'
   225  000D6A  73                 	db	115	;'s'
   226  000D6B  73                 	db	115	;'s'
   227  000D6C  77                 	db	119	;'w'
   228  000D6D  6F                 	db	111	;'o'
   229  000D6E  72                 	db	114	;'r'
   230  000D6F  64                 	db	100	;'d'
   231  000D70  00                 	db	0
   232  000D71                     STR_1:
   233  000D71  45                 	db	69	;'E'
   234  000D72  6E                 	db	110	;'n'
   235  000D73  74                 	db	116	;'t'
   236  000D74  65                 	db	101	;'e'
   237  000D75  72                 	db	114	;'r'
   238  000D76  20                 	db	32
   239  000D77  50                 	db	80	;'P'
   240  000D78  61                 	db	97	;'a'
   241  000D79  73                 	db	115	;'s'
   242  000D7A  73                 	db	115	;'s'
   243  000D7B  77                 	db	119	;'w'
   244  000D7C  6F                 	db	111	;'o'
   245  000D7D  72                 	db	114	;'r'
   246  000D7E  64                 	db	100	;'d'
   247  000D7F  00                 	db	0
   248  000D80                     STR_16:
   249  000D80  4F                 	db	79	;'O'
   250  000D81  6E                 	db	110	;'n'
   251  000D82  6C                 	db	108	;'l'
   252  000D83  79                 	db	121	;'y'
   253  000D84  20                 	db	32
   254  000D85  74                 	db	116	;'t'
   255  000D86  77                 	db	119	;'w'
   256  000D87  6F                 	db	111	;'o'
   257  000D88  20                 	db	32
   258  000D89  6B                 	db	107	;'k'
   259  000D8A  65                 	db	101	;'e'
   260  000D8B  79                 	db	121	;'y'
   261  000D8C  73                 	db	115	;'s'
   262  000D8D  00                 	db	0
   263  000D8E                     STR_9:
   264  000D8E  2D                 	db	45
   265  000D8F  44                 	db	68	;'D'
   266  000D90  6F                 	db	111	;'o'
   267  000D91  6F                 	db	111	;'o'
   268  000D92  72                 	db	114	;'r'
   269  000D93  20                 	db	32
   270  000D94  4C                 	db	76	;'L'
   271  000D95  6F                 	db	111	;'o'
   272  000D96  63                 	db	99	;'c'
   273  000D97  6B                 	db	107	;'k'
   274  000D98  65                 	db	101	;'e'
   275  000D99  64                 	db	100	;'d'
   276  000D9A  2D                 	db	45
   277  000D9B  00                 	db	0
   278  000D9C                     STR_4:
   279  000D9C  57                 	db	87	;'W'
   280  000D9D  65                 	db	101	;'e'
   281  000D9E  6C                 	db	108	;'l'
   282  000D9F  63                 	db	99	;'c'
   283  000DA0  6F                 	db	111	;'o'
   284  000DA1  6D                 	db	109	;'m'
   285  000DA2  65                 	db	101	;'e'
   286  000DA3  20                 	db	32
   287  000DA4  55                 	db	85	;'U'
   288  000DA5  73                 	db	115	;'s'
   289  000DA6  65                 	db	101	;'e'
   290  000DA7  72                 	db	114	;'r'
   291  000DA8  20                 	db	32
   292  000DA9  00                 	db	0
   293  000DAA                     STR_3:
   294  000DAA  41                 	db	65	;'A'
   295  000DAB  6C                 	db	108	;'l'
   296  000DAC  61                 	db	97	;'a'
   297  000DAD  72                 	db	114	;'r'
   298  000DAE  6D                 	db	109	;'m'
   299  000DAF  20                 	db	32
   300  000DB0  44                 	db	68	;'D'
   301  000DB1  65                 	db	101	;'e'
   302  000DB2  61                 	db	97	;'a'
   303  000DB3  63                 	db	99	;'c'
   304  000DB4  74                 	db	116	;'t'
   305  000DB5  69                 	db	105	;'i'
   306  000DB6  76                 	db	118	;'v'
   307  000DB7  00                 	db	0
   308  000DB8                     STR_12:
   309  000DB8  41                 	db	65	;'A'
   310  000DB9  6C                 	db	108	;'l'
   311  000DBA  61                 	db	97	;'a'
   312  000DBB  72                 	db	114	;'r'
   313  000DBC  6D                 	db	109	;'m'
   314  000DBD  20                 	db	32
   315  000DBE  41                 	db	65	;'A'
   316  000DBF  63                 	db	99	;'c'
   317  000DC0  74                 	db	116	;'t'
   318  000DC1  69                 	db	105	;'i'
   319  000DC2  76                 	db	118	;'v'
   320  000DC3  65                 	db	101	;'e'
   321  000DC4  00                 	db	0
   322  000DC5                     STR_8:
   323  000DC5  41                 	db	65	;'A'
   324  000DC6  20                 	db	32
   325  000DC7  74                 	db	116	;'t'
   326  000DC8  6F                 	db	111	;'o'
   327  000DC9  20                 	db	32
   328  000DCA  47                 	db	71	;'G'
   329  000DCB  6F                 	db	111	;'o'
   330  000DCC  42                 	db	66	;'B'
   331  000DCD  61                 	db	97	;'a'
   332  000DCE  63                 	db	99	;'c'
   333  000DCF  6B                 	db	107	;'k'
   334  000DD0  00                 	db	0
   335  000DD1                     STR_17:
   336  000DD1  57                 	db	87	;'W'
   337  000DD2  68                 	db	104	;'h'
   338  000DD3  69                 	db	105	;'i'
   339  000DD4  63                 	db	99	;'c'
   340  000DD5  68                 	db	104	;'h'
   341  000DD6  20                 	db	32
   342  000DD7  74                 	db	116	;'t'
   343  000DD8  65                 	db	101	;'e'
   344  000DD9  6D                 	db	109	;'m'
   345  000DDA  70                 	db	112	;'p'
   346  000DDB  00                 	db	0
   347  000DDC                     STR_18:
   348  000DDC  72                 	db	114	;'r'
   349  000DDD  61                 	db	97	;'a'
   350  000DDE  6E                 	db	110	;'n'
   351  000DDF  67                 	db	103	;'g'
   352  000DE0  65                 	db	101	;'e'
   353  000DE1  20                 	db	32
   354  000DE2  31                 	db	49	;'1'
   355  000DE3  2D                 	db	45
   356  000DE4  39                 	db	57	;'9'
   357  000DE5  00                 	db	0
   358  000DE6                     STR_11:
   359  000DE6  42                 	db	66	;'B'
   360  000DE7  79                 	db	121	;'y'
   361  000DE8  65                 	db	101	;'e'
   362  000DE9  20                 	db	32
   363  000DEA  75                 	db	117	;'u'
   364  000DEB  73                 	db	115	;'s'
   365  000DEC  65                 	db	101	;'e'
   366  000DED  72                 	db	114	;'r'
   367  000DEE  20                 	db	32
   368  000DEF  00                 	db	0
   369  0000                     
   370                           ; #config settings
   371  000DF0  00                 	db	0	; dummy byte at the end
   372  0000                     
   373                           	psect	cinit
   374  00136C                     __pcinit:
   375                           	opt stack 0
   376  00136C                     start_initialization:
   377                           	opt stack 0
   378  00136C                     __initialization:
   379                           	opt stack 0
   380                           
   381                           ; Clear objects allocated to COMRAM (1 bytes)
   382  00136C  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   383  00136E                     end_of_initialization:
   384                           	opt stack 0
   385  00136E                     __end_of__initialization:
   386                           	opt stack 0
   387  00136E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   388  001370  6EF8               	movwf	tblptru,c
   389  001372  0E0D               	movlw	high __Lsmallconst
   390  001374  6EF7               	movwf	tblptrh,c
   391  001376  0100               	movlb	0
   392  001378  EFF9  F006         	goto	_main	;jump to C main() function
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           
   396                           	psect	bssCOMRAM
   397  00000B                     __pbssCOMRAM:
   398                           	opt stack 0
   399  00000B                     _flag:
   400                           	opt stack 0
   401  00000B                     	ds	1
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	opt stack 0
   408  000001                     ??_getKey:
   409  000001                     command_LCD@x:
   410                           	opt stack 0
   411  000001                     display_LCD@data:
   412                           	opt stack 0
   413  000001                     Read_b_eep@badd:
   414                           	opt stack 0
   415  000001                     Write_b_eep@badd:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x0
   419  000001                     	ds	1
   420  000002                     ??_setup_LCD:
   421  000002                     obtainedKey@key_presionada:
   422                           	opt stack 0
   423  000002                     display_string_LCD@data:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x1
   427  000002                     	ds	1
   428  000003                     readPassword@address:
   429                           	opt stack 0
   430  000003                     Write_b_eep@bdat:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x2
   434  000003                     	ds	1
   435  000004                     readPassword@value:
   436                           	opt stack 0
   437  000004                     Write_b_eep@GIE_BIT_VAL:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x3
   441  000004                     	ds	1
   442  000005                     ??_menu:
   443  000005                     writePassword@address:
   444                           	opt stack 0
   445  000005                     checkPassword@pass:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x4
   449  000005                     	ds	1
   450  000006                     writePassword@value:
   451                           	opt stack 0
   452  000006                     checkPassword@i:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456  000006                     	ds	1
   457  000007                     profile@i:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x6
   461  000007                     	ds	2
   462  000009                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x8
   465  000009                     	ds	2
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 28 in file "mainCode.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  key             1    0        unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_alarm
   496 ;;		_checkPassword
   497 ;;		_clear_LCD
   498 ;;		_display_LCD
   499 ;;		_display_string_LCD
   500 ;;		_menu
   501 ;;		_profile
   502 ;;		_pwmInit
   503 ;;		_readPassword
   504 ;;		_ready_LCD
   505 ;;		_second_line_LCD
   506 ;;		_setup_LCD
   507 ;;		_welcome
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text0
   514  000DF2                     __ptext0:
   515                           	opt stack 0
   516  000DF2                     _main:
   517                           	opt stack 28
   518                           
   519                           ;mainCode.c: 29: OSCCON = 0x70;
   520                           
   521                           ;incstack = 0
   522  000DF2  0E70               	movlw	112
   523  000DF4  6ED3               	movwf	4051,c	;volatile
   524                           
   525                           ;mainCode.c: 30: CMCON = 0xFF;
   526  000DF6  68B4               	setf	4020,c	;volatile
   527                           
   528                           ;mainCode.c: 31: CVRCONbits.CVREN = 0;
   529  000DF8  9EB5               	bcf	4021,7,c	;volatile
   530                           
   531                           ;mainCode.c: 32: ADCON1 = 0x0F;
   532  000DFA  0E0F               	movlw	15
   533  000DFC  6EC1               	movwf	4033,c	;volatile
   534                           
   535                           ;mainCode.c: 33: INTCON2bits.RBPU = 0;
   536  000DFE  9EF1               	bcf	intcon2,7,c	;volatile
   537                           
   538                           ;mainCode.c: 35: unsigned char key;
   539                           ;mainCode.c: 36: PORTA = 0x00;
   540  000E00  0E00               	movlw	0
   541  000E02  6E80               	movwf	3968,c	;volatile
   542                           
   543                           ;mainCode.c: 37: PORTB = 0x00;
   544  000E04  0E00               	movlw	0
   545  000E06  6E81               	movwf	3969,c	;volatile
   546                           
   547                           ;mainCode.c: 38: PORTC = 0x00;
   548  000E08  0E00               	movlw	0
   549  000E0A  6E82               	movwf	3970,c	;volatile
   550                           
   551                           ;mainCode.c: 39: PORTD = 0x00;
   552  000E0C  0E00               	movlw	0
   553  000E0E  6E83               	movwf	3971,c	;volatile
   554                           
   555                           ;mainCode.c: 40: PORTE = 0x00;
   556  000E10  0E00               	movlw	0
   557  000E12  6E84               	movwf	3972,c	;volatile
   558                           
   559                           ;mainCode.c: 41: LATA = 0x00;
   560  000E14  0E00               	movlw	0
   561  000E16  6E89               	movwf	3977,c	;volatile
   562                           
   563                           ;mainCode.c: 42: LATB = 0x00;
   564  000E18  0E00               	movlw	0
   565  000E1A  6E8A               	movwf	3978,c	;volatile
   566                           
   567                           ;mainCode.c: 43: LATC = 0x00;
   568  000E1C  0E00               	movlw	0
   569  000E1E  6E8B               	movwf	3979,c	;volatile
   570                           
   571                           ;mainCode.c: 44: LATD = 0x00;
   572  000E20  0E00               	movlw	0
   573  000E22  6E8C               	movwf	3980,c	;volatile
   574                           
   575                           ;mainCode.c: 45: LATE = 0x00;
   576  000E24  0E00               	movlw	0
   577  000E26  6E8D               	movwf	3981,c	;volatile
   578                           
   579                           ;mainCode.c: 46: TRISA = 0x00;
   580  000E28  0E00               	movlw	0
   581  000E2A  6E92               	movwf	3986,c	;volatile
   582                           
   583                           ;mainCode.c: 47: TRISB = 0x03;
   584  000E2C  0E03               	movlw	3
   585  000E2E  6E93               	movwf	3987,c	;volatile
   586                           
   587                           ;mainCode.c: 48: TRISC = 0xF0;
   588  000E30  0EF0               	movlw	240
   589  000E32  6E94               	movwf	3988,c	;volatile
   590                           
   591                           ;mainCode.c: 49: TRISD = 0x00;
   592  000E34  0E00               	movlw	0
   593  000E36  6E95               	movwf	3989,c	;volatile
   594                           
   595                           ;mainCode.c: 50: TRISE = 0x00;
   596  000E38  0E00               	movlw	0
   597  000E3A  6E96               	movwf	3990,c	;volatile
   598                           
   599                           ;mainCode.c: 52: setup_LCD();
   600  000E3C  ECCD  F008         	call	_setup_LCD	;wreg free
   601                           
   602                           ;mainCode.c: 53: pwmInit();
   603  000E40  EC9B  F009         	call	_pwmInit	;wreg free
   604  000E44                     l1547:
   605                           
   606                           ;mainCode.c: 56: if(readPassword(0x20) != 'A' &&
   607                           ;mainCode.c: 57: readPassword(0x20) != 'B' &&
   608                           ;mainCode.c: 58: readPassword(0x20) != 'C' &&
   609                           ;mainCode.c: 59: readPassword(0x20) != 'D')
   610  000E44  0E20               	movlw	32
   611  000E46  ECA4  F009         	call	_readPassword
   612  000E4A  0A41               	xorlw	65
   613  000E4C  B4D8               	btfsc	status,2,c
   614  000E4E  D015               	goto	l1557
   615  000E50  0E20               	movlw	32
   616  000E52  ECA4  F009         	call	_readPassword
   617  000E56  0A42               	xorlw	66
   618  000E58  B4D8               	btfsc	status,2,c
   619  000E5A  D00F               	goto	l1557
   620  000E5C  0E20               	movlw	32
   621  000E5E  ECA4  F009         	call	_readPassword
   622  000E62  0A43               	xorlw	67
   623  000E64  B4D8               	btfsc	status,2,c
   624  000E66  D009               	goto	l1557
   625  000E68  0E20               	movlw	32
   626  000E6A  ECA4  F009         	call	_readPassword
   627  000E6E  0A44               	xorlw	68
   628  000E70  B4D8               	btfsc	status,2,c
   629  000E72  D003               	goto	l1557
   630                           
   631                           ;mainCode.c: 60: {
   632                           ;mainCode.c: 61: profile();
   633  000E74  EC78  F008         	call	_profile	;wreg free
   634                           
   635                           ;mainCode.c: 62: }else{
   636  000E78  D7E5               	goto	l1547
   637  000E7A                     l1557:
   638                           
   639                           ;mainCode.c: 63: ready_LCD();
   640  000E7A  EC55  F009         	call	_ready_LCD	;wreg free
   641                           
   642                           ;mainCode.c: 64: display_string_LCD("Enter Password");
   643  000E7E  0E71               	movlw	low STR_1
   644  000E80  6E02               	movwf	display_string_LCD@data,c
   645  000E82  0E0D               	movlw	high STR_1
   646  000E84  6E03               	movwf	display_string_LCD@data+1,c
   647  000E86  EC2D  F009         	call	_display_string_LCD	;wreg free
   648                           
   649                           ;mainCode.c: 65: alarm();
   650  000E8A  ECAD  F009         	call	_alarm	;wreg free
   651                           
   652                           ;mainCode.c: 66: if(checkPassword() != 1){
   653  000E8E  EC11  F009         	call	_checkPassword	;wreg free
   654  000E92  06E8               	decf	wreg,f,c
   655  000E94  B4D8               	btfsc	status,2,c
   656  000E96  D00B               	goto	l82
   657                           
   658                           ;mainCode.c: 67: clear_LCD();
   659  000E98  ECCF  F009         	call	_clear_LCD	;wreg free
   660                           
   661                           ;mainCode.c: 68: ready_LCD();
   662  000E9C  EC55  F009         	call	_ready_LCD	;wreg free
   663                           
   664                           ;mainCode.c: 69: display_string_LCD("Wrong Password");
   665  000EA0  0E62               	movlw	low STR_2
   666  000EA2  6E02               	movwf	display_string_LCD@data,c
   667  000EA4  0E0D               	movlw	high STR_2
   668  000EA6  6E03               	movwf	display_string_LCD@data+1,c
   669  000EA8  EC2D  F009         	call	_display_string_LCD	;wreg free
   670                           
   671                           ;mainCode.c: 70: }else{
   672  000EAC  D7CB               	goto	l1547
   673  000EAE                     l82:
   674                           
   675                           ;mainCode.c: 72: PORTAbits.RA0 = 0;
   676  000EAE  9080               	bcf	3968,0,c	;volatile
   677                           
   678                           ;mainCode.c: 73: PORTEbits.RE0 = 0;
   679  000EB0  9084               	bcf	3972,0,c	;volatile
   680                           
   681                           ;mainCode.c: 74: clear_LCD();
   682  000EB2  ECCF  F009         	call	_clear_LCD	;wreg free
   683                           
   684                           ;mainCode.c: 75: ready_LCD();
   685  000EB6  EC55  F009         	call	_ready_LCD	;wreg free
   686                           
   687                           ;mainCode.c: 76: display_string_LCD("Alarm Deactiv");
   688  000EBA  0EAA               	movlw	low STR_3
   689  000EBC  6E02               	movwf	display_string_LCD@data,c
   690  000EBE  0E0D               	movlw	high STR_3
   691  000EC0  6E03               	movwf	display_string_LCD@data+1,c
   692  000EC2  EC2D  F009         	call	_display_string_LCD	;wreg free
   693                           
   694                           ;mainCode.c: 77: _delay((unsigned long)((1500)*(8000000/4000.0)));
   695  000EC6  0E10               	movlw	16
   696  000EC8  6E0A               	movwf	(??_main+1)& (0+255),c
   697  000ECA  0E39               	movlw	57
   698  000ECC  6E09               	movwf	??_main& (0+255),c
   699  000ECE  0E0E               	movlw	14
   700  000ED0                     u637:
   701  000ED0  2EE8               	decfsz	wreg,f,c
   702  000ED2  D7FE               	bra	u637
   703  000ED4  2E09               	decfsz	??_main& (0+255),f,c
   704  000ED6  D7FC               	bra	u637
   705  000ED8  2E0A               	decfsz	(??_main+1)& (0+255),f,c
   706  000EDA  D7FA               	bra	u637
   707                           
   708                           ;mainCode.c: 78: clear_LCD();
   709  000EDC  ECCF  F009         	call	_clear_LCD	;wreg free
   710                           
   711                           ;mainCode.c: 79: ready_LCD();
   712  000EE0  EC55  F009         	call	_ready_LCD	;wreg free
   713                           
   714                           ;mainCode.c: 80: display_string_LCD("Welcome User ");
   715  000EE4  0E9C               	movlw	low STR_4
   716  000EE6  6E02               	movwf	display_string_LCD@data,c
   717  000EE8  0E0D               	movlw	high STR_4
   718  000EEA  6E03               	movwf	display_string_LCD@data+1,c
   719  000EEC  EC2D  F009         	call	_display_string_LCD	;wreg free
   720                           
   721                           ;mainCode.c: 81: display_LCD(readPassword(0x20));
   722  000EF0  0E20               	movlw	32
   723  000EF2  ECA4  F009         	call	_readPassword
   724  000EF6  EC63  F009         	call	_display_LCD
   725                           
   726                           ;mainCode.c: 82: second_line_LCD();
   727  000EFA  ECBE  F009         	call	_second_line_LCD	;wreg free
   728                           
   729                           ;mainCode.c: 83: welcome();
   730  000EFE  EC92  F009         	call	_welcome	;wreg free
   731                           
   732                           ;mainCode.c: 84: menu();
   733  000F02  EC88  F007         	call	_menu	;wreg free
   734                           
   735                           ;mainCode.c: 85: if(flag == 1){
   736  000F06  040B               	decf	_flag,w,c
   737  000F08  B4D8               	btfsc	status,2,c
   738  000F0A  EF00  F000         	goto	start
   739  000F0E  D7CF               	goto	l82
   740  000F10                     __end_of_main:
   741                           	opt stack 0
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           intcon2	equ	0xFF1
   745                           wreg	equ	0xFE8
   746                           status	equ	0xFD8
   747                           
   748 ;; *************** function _welcome *****************
   749 ;; Defined at:
   750 ;;		line 16 in file "menu.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; Hardware stack levels required when called:    2
   771 ;; This function calls:
   772 ;;		_display_string_LCD
   773 ;;		_ready_LCD
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text1
   780  001324                     __ptext1:
   781                           	opt stack 0
   782  001324                     _welcome:
   783                           	opt stack 28
   784                           
   785                           ;menu.c: 17: ready_LCD();
   786                           
   787                           ;incstack = 0
   788  001324  EC55  F009         	call	_ready_LCD	;wreg free
   789                           
   790                           ;menu.c: 18: display_string_LCD("1.Door 2.LogOut");
   791  001328  0E52               	movlw	low STR_5
   792  00132A  6E02               	movwf	display_string_LCD@data,c
   793  00132C  0E0D               	movlw	high STR_5
   794  00132E  6E03               	movwf	display_string_LCD@data+1,c
   795  001330  EC2D  F009         	call	_display_string_LCD	;wreg free
   796  001334  0012               	return		;funcret
   797  001336                     __end_of_welcome:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           intcon2	equ	0xFF1
   802                           wreg	equ	0xFE8
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _setup_LCD *****************
   806 ;; Defined at:
   807 ;;		line 28 in file "lcdCon.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    1
   828 ;; This function calls:
   829 ;;		_command_LCD
   830 ;;		_ready_LCD
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text2
   837  00119A                     __ptext2:
   838                           	opt stack 0
   839  00119A                     _setup_LCD:
   840                           	opt stack 29
   841                           
   842                           ;lcdCon.c: 29: PORTAbits.RA3 = 0;
   843                           
   844                           ;incstack = 0
   845  00119A  9680               	bcf	3968,3,c	;volatile
   846                           
   847                           ;lcdCon.c: 30: _delay((unsigned long)((250)*(8000000/4000.0)));
   848  00119C  0E03               	movlw	3
   849  00119E  6E03               	movwf	(??_setup_LCD+1)& (0+255),c
   850  0011A0  0E8A               	movlw	138
   851  0011A2  6E02               	movwf	??_setup_LCD& (0+255),c
   852  0011A4  0E56               	movlw	86
   853  0011A6                     u647:
   854  0011A6  2EE8               	decfsz	wreg,f,c
   855  0011A8  D7FE               	bra	u647
   856  0011AA  2E02               	decfsz	??_setup_LCD& (0+255),f,c
   857  0011AC  D7FC               	bra	u647
   858  0011AE  2E03               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   859  0011B0  D7FA               	bra	u647
   860                           
   861                           ;lcdCon.c: 31: command_LCD(0x38);
   862  0011B2  0E38               	movlw	56
   863  0011B4  EC6F  F009         	call	_command_LCD
   864                           
   865                           ;lcdCon.c: 32: _delay((unsigned long)((250)*(8000000/4000.0)));
   866  0011B8  0E03               	movlw	3
   867  0011BA  6E03               	movwf	(??_setup_LCD+1)& (0+255),c
   868  0011BC  0E8A               	movlw	138
   869  0011BE  6E02               	movwf	??_setup_LCD& (0+255),c
   870  0011C0  0E56               	movlw	86
   871  0011C2                     u657:
   872  0011C2  2EE8               	decfsz	wreg,f,c
   873  0011C4  D7FE               	bra	u657
   874  0011C6  2E02               	decfsz	??_setup_LCD& (0+255),f,c
   875  0011C8  D7FC               	bra	u657
   876  0011CA  2E03               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   877  0011CC  D7FA               	bra	u657
   878                           
   879                           ;lcdCon.c: 33: command_LCD(0x0F);
   880  0011CE  0E0F               	movlw	15
   881  0011D0  EC6F  F009         	call	_command_LCD
   882                           
   883                           ;lcdCon.c: 34: ready_LCD();
   884  0011D4  EC55  F009         	call	_ready_LCD	;wreg free
   885                           
   886                           ;lcdCon.c: 35: command_LCD(0x01);
   887  0011D8  0E01               	movlw	1
   888  0011DA  EC6F  F009         	call	_command_LCD
   889                           
   890                           ;lcdCon.c: 36: ready_LCD();
   891  0011DE  EC55  F009         	call	_ready_LCD	;wreg free
   892  0011E2  0012               	return		;funcret
   893  0011E4                     __end_of_setup_LCD:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           intcon2	equ	0xFF1
   898                           wreg	equ	0xFE8
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _pwmInit *****************
   902 ;; Defined at:
   903 ;;		line 12 in file "status.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text3
   931  001336                     __ptext3:
   932                           	opt stack 0
   933  001336                     _pwmInit:
   934                           	opt stack 30
   935                           
   936                           ;status.c: 16: PR2 = 0x9B;
   937                           
   938                           ;incstack = 0
   939  001336  0E9B               	movlw	155
   940  001338  6ECB               	movwf	4043,c	;volatile
   941                           
   942                           ;status.c: 17: CCPR1L = 0x2F;
   943  00133A  0E2F               	movlw	47
   944  00133C  6EBE               	movwf	4030,c	;volatile
   945                           
   946                           ;status.c: 18: T2CON = 0x07;
   947  00133E  0E07               	movlw	7
   948  001340  6ECA               	movwf	4042,c	;volatile
   949                           
   950                           ;status.c: 19: CCP1CON = 0x3C;
   951  001342  0E3C               	movlw	60
   952  001344  6EBD               	movwf	4029,c	;volatile
   953  001346  0012               	return		;funcret
   954  001348                     __end_of_pwmInit:
   955                           	opt stack 0
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           intcon2	equ	0xFF1
   959                           wreg	equ	0xFE8
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _profile *****************
   963 ;; Defined at:
   964 ;;		line 26 in file "profile.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  i               2    6[COMRAM] unsigned int 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;Total ram usage:        2 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    2
   985 ;; This function calls:
   986 ;;		_clear_LCD
   987 ;;		_display_string_LCD
   988 ;;		_first_line_LCD
   989 ;;		_obtainedKey
   990 ;;		_ready_LCD
   991 ;;		_second_line_LCD
   992 ;;		_writePassword
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text4
   999  0010F0                     __ptext4:
  1000                           	opt stack 0
  1001  0010F0                     _profile:
  1002                           	opt stack 28
  1003                           
  1004                           ;profile.c: 27: unsigned int i = 0;
  1005                           
  1006                           ;incstack = 0
  1007  0010F0  0E00               	movlw	0
  1008  0010F2  6E08               	movwf	profile@i+1,c
  1009  0010F4  0E00               	movlw	0
  1010  0010F6  6E07               	movwf	profile@i,c
  1011                           
  1012                           ;profile.c: 28: ready_LCD();
  1013  0010F8  EC55  F009         	call	_ready_LCD	;wreg free
  1014                           
  1015                           ;profile.c: 29: display_string_LCD("Which letter do");
  1016  0010FC  0E22               	movlw	low STR_13
  1017  0010FE  6E02               	movwf	display_string_LCD@data,c
  1018  001100  0E0D               	movlw	high STR_13
  1019  001102  6E03               	movwf	display_string_LCD@data+1,c
  1020  001104  EC2D  F009         	call	_display_string_LCD	;wreg free
  1021                           
  1022                           ;profile.c: 30: second_line_LCD();
  1023  001108  ECBE  F009         	call	_second_line_LCD	;wreg free
  1024                           
  1025                           ;profile.c: 31: display_string_LCD("U Prefer A B C D");
  1026  00110C  0E01               	movlw	low STR_14
  1027  00110E  6E02               	movwf	display_string_LCD@data,c
  1028  001110  0E0D               	movlw	high STR_14
  1029  001112  6E03               	movwf	display_string_LCD@data+1,c
  1030  001114  EC2D  F009         	call	_display_string_LCD	;wreg free
  1031                           
  1032                           ;profile.c: 32: writePassword(obtainedKey(),0x20);
  1033  001118  0E20               	movlw	32
  1034  00111A  6E05               	movwf	writePassword@address,c
  1035  00111C  EC45  F009         	call	_obtainedKey	;wreg free
  1036  001120  EC87  F009         	call	_writePassword
  1037                           
  1038                           ;profile.c: 33: clear_LCD();
  1039  001124  ECCF  F009         	call	_clear_LCD	;wreg free
  1040                           
  1041                           ;profile.c: 34: first_line_LCD();
  1042  001128  ECC4  F009         	call	_first_line_LCD	;wreg free
  1043                           
  1044                           ;profile.c: 35: display_string_LCD("Introduce Psswd");
  1045  00112C  0E12               	movlw	low STR_15
  1046  00112E  6E02               	movwf	display_string_LCD@data,c
  1047  001130  0E0D               	movlw	high STR_15
  1048  001132  6E03               	movwf	display_string_LCD@data+1,c
  1049  001134  EC2D  F009         	call	_display_string_LCD	;wreg free
  1050                           
  1051                           ;profile.c: 36: second_line_LCD();
  1052  001138  ECBE  F009         	call	_second_line_LCD	;wreg free
  1053                           
  1054                           ;profile.c: 37: display_string_LCD("Only two keys");
  1055  00113C  0E80               	movlw	low STR_16
  1056  00113E  6E02               	movwf	display_string_LCD@data,c
  1057  001140  0E0D               	movlw	high STR_16
  1058  001142  6E03               	movwf	display_string_LCD@data+1,c
  1059  001144  EC2D  F009         	call	_display_string_LCD	;wreg free
  1060  001148                     l1437:
  1061                           
  1062                           ;profile.c: 39: writePassword(obtainedKey(),0x00+1);
  1063  001148  0E01               	movlw	1
  1064  00114A  6E05               	movwf	writePassword@address,c
  1065  00114C  EC45  F009         	call	_obtainedKey	;wreg free
  1066  001150  EC87  F009         	call	_writePassword
  1067                           
  1068                           ;profile.c: 40: i++;
  1069  001154  4A07               	infsnz	profile@i,f,c
  1070  001156  2A08               	incf	profile@i+1,f,c
  1071                           
  1072                           ;profile.c: 41: }while(i<2);
  1073  001158  5008               	movf	profile@i+1,w,c
  1074  00115A  E104               	bnz	l1443
  1075  00115C  0E02               	movlw	2
  1076  00115E  5C07               	subwf	profile@i,w,c
  1077  001160  A0D8               	btfss	status,0,c
  1078  001162  D7F2               	goto	l1437
  1079  001164                     l1443:
  1080                           
  1081                           ;profile.c: 42: clear_LCD();
  1082  001164  ECCF  F009         	call	_clear_LCD	;wreg free
  1083                           
  1084                           ;profile.c: 43: first_line_LCD();
  1085  001168  ECC4  F009         	call	_first_line_LCD	;wreg free
  1086                           
  1087                           ;profile.c: 44: display_string_LCD("Which temp");
  1088  00116C  0ED1               	movlw	low STR_17
  1089  00116E  6E02               	movwf	display_string_LCD@data,c
  1090  001170  0E0D               	movlw	high STR_17
  1091  001172  6E03               	movwf	display_string_LCD@data+1,c
  1092  001174  EC2D  F009         	call	_display_string_LCD	;wreg free
  1093                           
  1094                           ;profile.c: 45: second_line_LCD();
  1095  001178  ECBE  F009         	call	_second_line_LCD	;wreg free
  1096                           
  1097                           ;profile.c: 46: display_string_LCD("range 1-9");
  1098  00117C  0EDC               	movlw	low STR_18
  1099  00117E  6E02               	movwf	display_string_LCD@data,c
  1100  001180  0E0D               	movlw	high STR_18
  1101  001182  6E03               	movwf	display_string_LCD@data+1,c
  1102  001184  EC2D  F009         	call	_display_string_LCD	;wreg free
  1103                           
  1104                           ;profile.c: 47: writePassword(obtainedKey(),0x40);
  1105  001188  0E40               	movlw	64
  1106  00118A  6E05               	movwf	writePassword@address,c
  1107  00118C  EC45  F009         	call	_obtainedKey	;wreg free
  1108  001190  EC87  F009         	call	_writePassword
  1109                           
  1110                           ;profile.c: 48: clear_LCD();
  1111  001194  ECCF  F009         	call	_clear_LCD	;wreg free
  1112  001198  0012               	return		;funcret
  1113  00119A                     __end_of_profile:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           intcon2	equ	0xFF1
  1118                           wreg	equ	0xFE8
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function _writePassword *****************
  1122 ;; Defined at:
  1123 ;;		line 19 in file "profile.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  value           1    wreg     unsigned char 
  1126 ;;  address         1    4[COMRAM] unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  value           1    5[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1138 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		_Busy_eep
  1147 ;;		_Write_b_eep
  1148 ;; This function is called by:
  1149 ;;		_profile
  1150 ;;		_preset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text5
  1155  00130E                     __ptext5:
  1156                           	opt stack 0
  1157  00130E                     _writePassword:
  1158                           	opt stack 28
  1159                           
  1160                           ;incstack = 0
  1161                           ;writePassword@value stored from wreg
  1162  00130E  6E06               	movwf	writePassword@value,c
  1163                           
  1164                           ;profile.c: 20: (Busy_eep(), Write_b_eep(address,value));
  1165  001310  ECD3  F009         	call	_Busy_eep	;wreg free
  1166  001314  C005  F001         	movff	writePassword@address,Write_b_eep@badd
  1167  001318  6A02               	clrf	Write_b_eep@badd+1,c
  1168  00131A  C006  F003         	movff	writePassword@value,Write_b_eep@bdat
  1169  00131E  ECF2  F008         	call	_Write_b_eep	;wreg free
  1170  001322  0012               	return		;funcret
  1171  001324                     __end_of_writePassword:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           intcon2	equ	0xFF1
  1176                           wreg	equ	0xFE8
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _Write_b_eep *****************
  1180 ;; Defined at:
  1181 ;;		line 49 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/write_B.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  badd            2    0[COMRAM] unsigned int 
  1184 ;;  bdat            1    2[COMRAM] unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  GIE_BIT_VAL     1    3[COMRAM] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1196 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1200 ;;Total ram usage:        4 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_writePassword
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text6
  1210  0011E4                     __ptext6:
  1211                           	opt stack 0
  1212  0011E4                     _Write_b_eep:
  1213                           	opt stack 28
  1214                           
  1215                           ;incstack = 0
  1216  0011E4  0E00               	movlw	0
  1217  0011E6  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  1218  0011E8  5002               	movf	Write_b_eep@badd+1,w,c
  1219  0011EA  0B03               	andlw	3
  1220  0011EC  6EAA               	movwf	4010,c	;volatile
  1221  0011EE  C001  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  1222  0011F2  C003  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  1223  0011F6  9EA6               	bcf	4006,7,c	;volatile
  1224  0011F8  9CA6               	bcf	4006,6,c	;volatile
  1225  0011FA  84A6               	bsf	4006,2,c	;volatile
  1226  0011FC  0E00               	movlw	0
  1227  0011FE  BEF2               	btfsc	intcon,7,c	;volatile
  1228  001200  0E01               	movlw	1
  1229  001202  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  1230  001204  9EF2               	bcf	intcon,7,c	;volatile
  1231  001206  0E55               	movlw	85
  1232  001208  6EA7               	movwf	4007,c	;volatile
  1233  00120A  0EAA               	movlw	170
  1234  00120C  6EA7               	movwf	4007,c	;volatile
  1235  00120E  82A6               	bsf	4006,1,c	;volatile
  1236  001210                     l322:
  1237  001210  B2A6               	btfsc	4006,1,c	;volatile
  1238  001212  D7FE               	goto	l322
  1239  001214  B004               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  1240  001216  D002               	bra	u445
  1241  001218  9EF2               	bcf	intcon,7,c	;volatile
  1242  00121A  D001               	bra	u446
  1243  00121C                     u445:
  1244  00121C  8EF2               	bsf	intcon,7,c	;volatile
  1245  00121E                     u446:
  1246  00121E  94A6               	bcf	4006,2,c	;volatile
  1247  001220  0012               	return		;funcret
  1248  001222                     __end_of_Write_b_eep:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           intcon	equ	0xFF2
  1253                           intcon2	equ	0xFF1
  1254                           wreg	equ	0xFE8
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _Busy_eep *****************
  1258 ;; Defined at:
  1259 ;;		line 12 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/busy_eep.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		None
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_writePassword
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text7
  1287  0013A6                     __ptext7:
  1288                           	opt stack 0
  1289  0013A6                     _Busy_eep:
  1290                           	opt stack 28
  1291  0013A6                     l291:
  1292  0013A6  A2A6               	btfss	4006,1,c	;volatile
  1293  0013A8  0012               	return	
  1294  0013AA  D7FD               	goto	l291
  1295  0013AC                     __end_of_Busy_eep:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           intcon	equ	0xFF2
  1300                           intcon2	equ	0xFF1
  1301                           wreg	equ	0xFE8
  1302                           status	equ	0xFD8
  1303                           
  1304 ;; *************** function _menu *****************
  1305 ;; Defined at:
  1306 ;;		line 21 in file "menu.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;Total ram usage:        2 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    2
  1327 ;; This function calls:
  1328 ;;		_clear_LCD
  1329 ;;		_close
  1330 ;;		_display_LCD
  1331 ;;		_display_string_LCD
  1332 ;;		_first_line_LCD
  1333 ;;		_obtainedKey
  1334 ;;		_open
  1335 ;;		_readPassword
  1336 ;;		_ready_LCD
  1337 ;;		_second_line_LCD
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text8
  1344  000F10                     __ptext8:
  1345                           	opt stack 0
  1346  000F10                     _menu:
  1347                           	opt stack 28
  1348  000F10                     
  1349                           ;menu.c: 23: flag = 0;
  1350  000F10  0E00               	movlw	0
  1351  000F12  6E0B               	movwf	_flag,c
  1352                           
  1353                           ;menu.c: 24: if(obtainedKey() == '1'){
  1354  000F14  EC45  F009         	call	_obtainedKey	;wreg free
  1355  000F18  0A31               	xorlw	49
  1356  000F1A  A4D8               	btfss	status,2,c
  1357  000F1C  D04C               	goto	l1517
  1358                           
  1359                           ;menu.c: 25: clear_LCD();
  1360  000F1E  ECCF  F009         	call	_clear_LCD	;wreg free
  1361                           
  1362                           ;menu.c: 26: first_line_LCD();
  1363  000F22  ECC4  F009         	call	_first_line_LCD	;wreg free
  1364                           
  1365                           ;menu.c: 27: display_string_LCD("1.Unlock 2.Lock");
  1366  000F26  0E42               	movlw	low STR_6
  1367  000F28  6E02               	movwf	display_string_LCD@data,c
  1368  000F2A  0E0D               	movlw	high STR_6
  1369  000F2C  6E03               	movwf	display_string_LCD@data+1,c
  1370  000F2E  EC2D  F009         	call	_display_string_LCD	;wreg free
  1371                           
  1372                           ;menu.c: 28: if(obtainedKey() == '1'){
  1373  000F32  EC45  F009         	call	_obtainedKey	;wreg free
  1374  000F36  0A31               	xorlw	49
  1375  000F38  A4D8               	btfss	status,2,c
  1376  000F3A  D01C               	goto	l1503
  1377                           
  1378                           ;menu.c: 29: open();
  1379  000F3C  ECD6  F009         	call	_open	;wreg free
  1380                           
  1381                           ;menu.c: 30: clear_LCD();
  1382  000F40  ECCF  F009         	call	_clear_LCD	;wreg free
  1383                           
  1384                           ;menu.c: 31: first_line_LCD();
  1385  000F44  ECC4  F009         	call	_first_line_LCD	;wreg free
  1386                           
  1387                           ;menu.c: 32: display_string_LCD("-Door Unlocked-");
  1388  000F48  0E32               	movlw	low STR_7
  1389  000F4A  6E02               	movwf	display_string_LCD@data,c
  1390  000F4C  0E0D               	movlw	high STR_7
  1391  000F4E  6E03               	movwf	display_string_LCD@data+1,c
  1392  000F50  EC2D  F009         	call	_display_string_LCD	;wreg free
  1393                           
  1394                           ;menu.c: 33: second_line_LCD();
  1395  000F54  ECBE  F009         	call	_second_line_LCD	;wreg free
  1396                           
  1397                           ;menu.c: 34: display_string_LCD("A to GoBack");
  1398  000F58  0EC5               	movlw	low STR_8
  1399  000F5A  6E02               	movwf	display_string_LCD@data,c
  1400  000F5C  0E0D               	movlw	high STR_8
  1401  000F5E  6E03               	movwf	display_string_LCD@data+1,c
  1402  000F60  EC2D  F009         	call	_display_string_LCD	;wreg free
  1403                           
  1404                           ;menu.c: 35: if(obtainedKey() == 'A'){
  1405  000F64  EC45  F009         	call	_obtainedKey	;wreg free
  1406  000F68  0A41               	xorlw	65
  1407  000F6A  A4D8               	btfss	status,2,c
  1408  000F6C  D7D1               	goto	l1481
  1409                           
  1410                           ;menu.c: 36: clear_LCD();
  1411  000F6E  ECCF  F009         	call	_clear_LCD	;wreg free
  1412                           
  1413                           ;menu.c: 37: return;
  1414  000F72  0012               	return	
  1415  000F74                     l1503:
  1416  000F74  EC45  F009         	call	_obtainedKey	;wreg free
  1417  000F78  0A32               	xorlw	50
  1418  000F7A  A4D8               	btfss	status,2,c
  1419  000F7C  D7C9               	goto	l1481
  1420                           
  1421                           ;menu.c: 40: close();
  1422  000F7E  ECD9  F009         	call	_close	;wreg free
  1423                           
  1424                           ;menu.c: 41: clear_LCD();
  1425  000F82  ECCF  F009         	call	_clear_LCD	;wreg free
  1426                           
  1427                           ;menu.c: 42: first_line_LCD();
  1428  000F86  ECC4  F009         	call	_first_line_LCD	;wreg free
  1429                           
  1430                           ;menu.c: 43: display_string_LCD("-Door Locked-");
  1431  000F8A  0E8E               	movlw	low STR_9
  1432  000F8C  6E02               	movwf	display_string_LCD@data,c
  1433  000F8E  0E0D               	movlw	high STR_9
  1434  000F90  6E03               	movwf	display_string_LCD@data+1,c
  1435  000F92  EC2D  F009         	call	_display_string_LCD	;wreg free
  1436                           
  1437                           ;menu.c: 44: second_line_LCD();
  1438  000F96  ECBE  F009         	call	_second_line_LCD	;wreg free
  1439                           
  1440                           ;menu.c: 45: display_string_LCD("A to GoBack");
  1441  000F9A  0EC5               	movlw	low STR_8
  1442  000F9C  6E02               	movwf	display_string_LCD@data,c
  1443  000F9E  0E0D               	movlw	high STR_8
  1444  000FA0  6E03               	movwf	display_string_LCD@data+1,c
  1445  000FA2  EC2D  F009         	call	_display_string_LCD	;wreg free
  1446                           
  1447                           ;menu.c: 46: if(obtainedKey() == 'A'){
  1448  000FA6  EC45  F009         	call	_obtainedKey	;wreg free
  1449  000FAA  0A41               	xorlw	65
  1450  000FAC  A4D8               	btfss	status,2,c
  1451  000FAE  D7B0               	goto	l1481
  1452                           
  1453                           ;menu.c: 47: clear_LCD();
  1454  000FB0  ECCF  F009         	call	_clear_LCD	;wreg free
  1455                           
  1456                           ;menu.c: 48: return;
  1457  000FB4  0012               	return	
  1458  000FB6                     l1517:
  1459  000FB6  EC45  F009         	call	_obtainedKey	;wreg free
  1460  000FBA  0A32               	xorlw	50
  1461  000FBC  A4D8               	btfss	status,2,c
  1462  000FBE  D7A8               	goto	l1481
  1463                           
  1464                           ;menu.c: 52: clear_LCD();
  1465  000FC0  ECCF  F009         	call	_clear_LCD	;wreg free
  1466                           
  1467                           ;menu.c: 53: ready_LCD();
  1468  000FC4  EC55  F009         	call	_ready_LCD	;wreg free
  1469                           
  1470                           ;menu.c: 54: display_string_LCD("Bye user ");
  1471  000FC8  0EE6               	movlw	low STR_11
  1472  000FCA  6E02               	movwf	display_string_LCD@data,c
  1473  000FCC  0E0D               	movlw	high STR_11
  1474  000FCE  6E03               	movwf	display_string_LCD@data+1,c
  1475  000FD0  EC2D  F009         	call	_display_string_LCD	;wreg free
  1476                           
  1477                           ;menu.c: 55: display_LCD(readPassword(0x20));
  1478  000FD4  0E20               	movlw	32
  1479  000FD6  ECA4  F009         	call	_readPassword
  1480  000FDA  EC63  F009         	call	_display_LCD
  1481                           
  1482                           ;menu.c: 56: second_line_LCD();
  1483  000FDE  ECBE  F009         	call	_second_line_LCD	;wreg free
  1484                           
  1485                           ;menu.c: 57: display_string_LCD("Alarm Active");
  1486  000FE2  0EB8               	movlw	low STR_12
  1487  000FE4  6E02               	movwf	display_string_LCD@data,c
  1488  000FE6  0E0D               	movlw	high STR_12
  1489  000FE8  6E03               	movwf	display_string_LCD@data+1,c
  1490  000FEA  EC2D  F009         	call	_display_string_LCD	;wreg free
  1491                           
  1492                           ;menu.c: 58: _delay((unsigned long)((2500)*(8000000/4000.0)));
  1493  000FEE  0E1A               	movlw	26
  1494  000FF0  6E06               	movwf	(??_menu+1)& (0+255),c
  1495  000FF2  0E5E               	movlw	94
  1496  000FF4  6E05               	movwf	??_menu& (0+255),c
  1497  000FF6  0E6E               	movlw	110
  1498  000FF8                     u667:
  1499  000FF8  2EE8               	decfsz	wreg,f,c
  1500  000FFA  D7FE               	bra	u667
  1501  000FFC  2E05               	decfsz	??_menu& (0+255),f,c
  1502  000FFE  D7FC               	bra	u667
  1503  001000  2E06               	decfsz	(??_menu+1)& (0+255),f,c
  1504  001002  D7FA               	bra	u667
  1505  001004  D000               	nop2	
  1506                           
  1507                           ;menu.c: 59: flag = 1;
  1508  001006  0E01               	movlw	1
  1509  001008  6E0B               	movwf	_flag,c
  1510                           
  1511                           ;menu.c: 60: return;
  1512  00100A  0012               	return	
  1513  00100C                     __end_of_menu:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           tblptrh	equ	0xFF7
  1517                           intcon	equ	0xFF2
  1518                           intcon2	equ	0xFF1
  1519                           wreg	equ	0xFE8
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _second_line_LCD *****************
  1523 ;; Defined at:
  1524 ;;		line 80 in file "lcdCon.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		_command_LCD
  1547 ;;		_ready_LCD
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;;		_menu
  1551 ;;		_profile
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text9
  1556  00137C                     __ptext9:
  1557                           	opt stack 0
  1558  00137C                     _second_line_LCD:
  1559                           	opt stack 29
  1560                           
  1561                           ;lcdCon.c: 81: command_LCD(0xC0);
  1562                           
  1563                           ;incstack = 0
  1564  00137C  0EC0               	movlw	192
  1565  00137E  EC6F  F009         	call	_command_LCD
  1566                           
  1567                           ;lcdCon.c: 82: ready_LCD();
  1568  001382  EC55  F009         	call	_ready_LCD	;wreg free
  1569  001386  0012               	return		;funcret
  1570  001388                     __end_of_second_line_LCD:
  1571                           	opt stack 0
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           intcon	equ	0xFF2
  1575                           intcon2	equ	0xFF1
  1576                           wreg	equ	0xFE8
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _open *****************
  1580 ;; Defined at:
  1581 ;;		line 22 in file "status.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_menu
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text10
  1609  0013AC                     __ptext10:
  1610                           	opt stack 0
  1611  0013AC                     _open:
  1612                           	opt stack 29
  1613                           
  1614                           ;status.c: 23: CCPR1L = 0x5F;
  1615                           
  1616                           ;incstack = 0
  1617  0013AC  0E5F               	movlw	95
  1618  0013AE  6EBE               	movwf	4030,c	;volatile
  1619  0013B0  0012               	return		;funcret
  1620  0013B2                     __end_of_open:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           intcon	equ	0xFF2
  1625                           intcon2	equ	0xFF1
  1626                           wreg	equ	0xFE8
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _first_line_LCD *****************
  1630 ;; Defined at:
  1631 ;;		line 76 in file "lcdCon.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    1
  1652 ;; This function calls:
  1653 ;;		_command_LCD
  1654 ;;		_ready_LCD
  1655 ;; This function is called by:
  1656 ;;		_menu
  1657 ;;		_profile
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text11
  1662  001388                     __ptext11:
  1663                           	opt stack 0
  1664  001388                     _first_line_LCD:
  1665                           	opt stack 28
  1666                           
  1667                           ;lcdCon.c: 77: command_LCD(0x20);
  1668                           
  1669                           ;incstack = 0
  1670  001388  0E20               	movlw	32
  1671  00138A  EC6F  F009         	call	_command_LCD
  1672                           
  1673                           ;lcdCon.c: 78: ready_LCD();
  1674  00138E  EC55  F009         	call	_ready_LCD	;wreg free
  1675  001392  0012               	return		;funcret
  1676  001394                     __end_of_first_line_LCD:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           intcon	equ	0xFF2
  1681                           intcon2	equ	0xFF1
  1682                           wreg	equ	0xFE8
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _display_string_LCD *****************
  1686 ;; Defined at:
  1687 ;;		line 69 in file "lcdCon.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  data            2    1[COMRAM] PTR unsigned char 
  1690 ;;		 -> STR_18(10), STR_17(11), STR_16(14), STR_15(16), 
  1691 ;;		 -> STR_14(17), STR_13(16), STR_12(13), STR_11(10), 
  1692 ;;		 -> STR_10(12), STR_9(14), STR_8(12), STR_7(16), 
  1693 ;;		 -> STR_6(16), STR_5(16), STR_4(14), STR_3(14), 
  1694 ;;		 -> STR_2(15), STR_1(15), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		_display_LCD
  1715 ;;		_ready_LCD
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;;		_welcome
  1719 ;;		_menu
  1720 ;;		_profile
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text12
  1725  00125A                     __ptext12:
  1726                           	opt stack 0
  1727  00125A                     _display_string_LCD:
  1728                           	opt stack 28
  1729                           
  1730                           ;lcdCon.c: 70: PORTAbits.RA1 = 1;
  1731                           
  1732                           ;incstack = 0
  1733  00125A  8280               	bsf	3968,1,c	;volatile
  1734                           
  1735                           ;lcdCon.c: 71: while(*data){
  1736  00125C  D00A               	goto	l1407
  1737  00125E                     l1403:
  1738                           
  1739                           ;lcdCon.c: 72: display_LCD(*data++);
  1740  00125E  C002  FFF6         	movff	display_string_LCD@data,tblptrl
  1741  001262  C003  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1742  001266                     	if	0	;tblptru may be non-zero
  1743  001266                     	endif
  1744  001266                     	if	0	;tblptru may be non-zero
  1745  001266                     	endif
  1746  001266  0008               	tblrd		*
  1747  001268  50F5               	movf	tablat,w,c
  1748  00126A  EC63  F009         	call	_display_LCD
  1749  00126E  4A02               	infsnz	display_string_LCD@data,f,c
  1750  001270  2A03               	incf	display_string_LCD@data+1,f,c
  1751  001272                     l1407:
  1752  001272  C002  FFF6         	movff	display_string_LCD@data,tblptrl
  1753  001276  C003  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1754  00127A                     	if	0	;tblptru may be non-zero
  1755  00127A                     	endif
  1756  00127A                     	if	0	;tblptru may be non-zero
  1757  00127A                     	endif
  1758  00127A  0008               	tblrd		*
  1759  00127C  50F5               	movf	tablat,w,c
  1760  00127E  0900               	iorlw	0
  1761  001280  A4D8               	btfss	status,2,c
  1762  001282  D7ED               	goto	l1403
  1763                           
  1764                           ;lcdCon.c: 73: }
  1765                           ;lcdCon.c: 74: ready_LCD();
  1766  001284  EC55  F009         	call	_ready_LCD	;wreg free
  1767  001288  0012               	return		;funcret
  1768  00128A                     __end_of_display_string_LCD:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           intcon	equ	0xFF2
  1775                           intcon2	equ	0xFF1
  1776                           wreg	equ	0xFE8
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function _ready_LCD *****************
  1780 ;; Defined at:
  1781 ;;		line 48 in file "lcdCon.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;;		_setup_LCD
  1806 ;;		_display_string_LCD
  1807 ;;		_first_line_LCD
  1808 ;;		_second_line_LCD
  1809 ;;		_welcome
  1810 ;;		_menu
  1811 ;;		_profile
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text13
  1816  0012AA                     __ptext13:
  1817                           	opt stack 0
  1818  0012AA                     _ready_LCD:
  1819                           	opt stack 29
  1820                           
  1821                           ;lcdCon.c: 49: TRISD = 0xFF;
  1822                           
  1823                           ;incstack = 0
  1824  0012AA  6895               	setf	3989,c	;volatile
  1825                           
  1826                           ;lcdCon.c: 50: PORTAbits.RA1 = 0;
  1827  0012AC  9280               	bcf	3968,1,c	;volatile
  1828                           
  1829                           ;lcdCon.c: 51: PORTAbits.RA2 = 1;
  1830  0012AE  8480               	bsf	3968,2,c	;volatile
  1831  0012B0                     l111:
  1832                           
  1833                           ;lcdCon.c: 53: PORTAbits.RA3 = 1;
  1834  0012B0  8680               	bsf	3968,3,c	;volatile
  1835                           
  1836                           ;lcdCon.c: 54: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1837  0012B2  0EB4               	movlw	180
  1838  0012B4                     u677:
  1839  0012B4  D000               	nop2	
  1840  0012B6  2EE8               	decfsz	wreg,f,c
  1841  0012B8  D7FD               	bra	u677
  1842                           
  1843                           ;lcdCon.c: 55: PORTAbits.RA3 = 0;
  1844  0012BA  9680               	bcf	3968,3,c	;volatile
  1845                           
  1846                           ;lcdCon.c: 56: }while(PORTDbits.RD7 == 1);
  1847  0012BC  BE83               	btfsc	3971,7,c	;volatile
  1848  0012BE  D7F8               	goto	l111
  1849                           
  1850                           ;lcdCon.c: 57: TRISD = 0x00;
  1851  0012C0  0E00               	movlw	0
  1852  0012C2  6E95               	movwf	3989,c	;volatile
  1853  0012C4  0012               	return		;funcret
  1854  0012C6                     __end_of_ready_LCD:
  1855                           	opt stack 0
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           intcon	equ	0xFF2
  1861                           intcon2	equ	0xFF1
  1862                           wreg	equ	0xFE8
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function _display_LCD *****************
  1866 ;; Defined at:
  1867 ;;		line 60 in file "lcdCon.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  data            1    wreg     unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  data            1    0[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;Total ram usage:        1 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;;		_display_string_LCD
  1892 ;;		_menu
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text14
  1897  0012C6                     __ptext14:
  1898                           	opt stack 0
  1899  0012C6                     _display_LCD:
  1900                           	opt stack 28
  1901                           
  1902                           ;incstack = 0
  1903                           ;display_LCD@data stored from wreg
  1904  0012C6  6E01               	movwf	display_LCD@data,c
  1905                           
  1906                           ;lcdCon.c: 61: PORTD = data;
  1907  0012C8  C001  FF83         	movff	display_LCD@data,3971	;volatile
  1908                           
  1909                           ;lcdCon.c: 62: PORTAbits.RA1 = 1;
  1910  0012CC  8280               	bsf	3968,1,c	;volatile
  1911                           
  1912                           ;lcdCon.c: 63: PORTAbits.RA2 = 0;
  1913  0012CE  9480               	bcf	3968,2,c	;volatile
  1914                           
  1915                           ;lcdCon.c: 64: PORTAbits.RA3 = 1;
  1916  0012D0  8680               	bsf	3968,3,c	;volatile
  1917                           
  1918                           ;lcdCon.c: 65: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1919  0012D2  0EB4               	movlw	180
  1920  0012D4                     u687:
  1921  0012D4  D000               	nop2	
  1922  0012D6  2EE8               	decfsz	wreg,f,c
  1923  0012D8  D7FD               	bra	u687
  1924                           
  1925                           ;lcdCon.c: 66: PORTAbits.RA3 = 0;
  1926  0012DA  9680               	bcf	3968,3,c	;volatile
  1927  0012DC  0012               	return		;funcret
  1928  0012DE                     __end_of_display_LCD:
  1929                           	opt stack 0
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           intcon	equ	0xFF2
  1935                           intcon2	equ	0xFF1
  1936                           wreg	equ	0xFE8
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _close *****************
  1940 ;; Defined at:
  1941 ;;		line 25 in file "status.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_menu
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text15
  1969  0013B2                     __ptext15:
  1970                           	opt stack 0
  1971  0013B2                     _close:
  1972                           	opt stack 29
  1973                           
  1974                           ;status.c: 26: CCPR1L = 0x1F;
  1975                           
  1976                           ;incstack = 0
  1977  0013B2  0E1F               	movlw	31
  1978  0013B4  6EBE               	movwf	4030,c	;volatile
  1979  0013B6  0012               	return		;funcret
  1980  0013B8                     __end_of_close:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           intcon	equ	0xFF2
  1987                           intcon2	equ	0xFF1
  1988                           wreg	equ	0xFE8
  1989                           status	equ	0xFD8
  1990                           
  1991 ;; *************** function _clear_LCD *****************
  1992 ;; Defined at:
  1993 ;;		line 84 in file "lcdCon.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		_command_LCD
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;;		_menu
  2019 ;;		_profile
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text16
  2024  00139E                     __ptext16:
  2025                           	opt stack 0
  2026  00139E                     _clear_LCD:
  2027                           	opt stack 28
  2028                           
  2029                           ;lcdCon.c: 85: command_LCD(0x01);
  2030                           
  2031                           ;incstack = 0
  2032  00139E  0E01               	movlw	1
  2033  0013A0  EC6F  F009         	call	_command_LCD
  2034  0013A4  0012               	return		;funcret
  2035  0013A6                     __end_of_clear_LCD:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           intcon	equ	0xFF2
  2042                           intcon2	equ	0xFF1
  2043                           wreg	equ	0xFE8
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _command_LCD *****************
  2047 ;; Defined at:
  2048 ;;		line 39 in file "lcdCon.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  x               1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  x               1    0[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        1 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_setup_LCD
  2072 ;;		_first_line_LCD
  2073 ;;		_second_line_LCD
  2074 ;;		_clear_LCD
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text17
  2079  0012DE                     __ptext17:
  2080                           	opt stack 0
  2081  0012DE                     _command_LCD:
  2082                           	opt stack 29
  2083                           
  2084                           ;incstack = 0
  2085                           ;command_LCD@x stored from wreg
  2086  0012DE  6E01               	movwf	command_LCD@x,c
  2087                           
  2088                           ;lcdCon.c: 40: PORTD = x;
  2089  0012E0  C001  FF83         	movff	command_LCD@x,3971	;volatile
  2090                           
  2091                           ;lcdCon.c: 41: PORTAbits.RA1 = 0;
  2092  0012E4  9280               	bcf	3968,1,c	;volatile
  2093                           
  2094                           ;lcdCon.c: 42: PORTAbits.RA2 = 0;
  2095  0012E6  9480               	bcf	3968,2,c	;volatile
  2096                           
  2097                           ;lcdCon.c: 43: PORTAbits.RA3 = 1;
  2098  0012E8  8680               	bsf	3968,3,c	;volatile
  2099                           
  2100                           ;lcdCon.c: 44: _delay((unsigned long)((.45)*(8000000/4000.0)));
  2101  0012EA  0EB4               	movlw	180
  2102  0012EC                     u697:
  2103  0012EC  D000               	nop2	
  2104  0012EE  2EE8               	decfsz	wreg,f,c
  2105  0012F0  D7FD               	bra	u697
  2106                           
  2107                           ;lcdCon.c: 45: PORTAbits.RA3 = 0;
  2108  0012F2  9680               	bcf	3968,3,c	;volatile
  2109  0012F4  0012               	return		;funcret
  2110  0012F6                     __end_of_command_LCD:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           intcon	equ	0xFF2
  2117                           intcon2	equ	0xFF1
  2118                           wreg	equ	0xFE8
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _checkPassword *****************
  2122 ;; Defined at:
  2123 ;;		line 50 in file "profile.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  pass            1    4[COMRAM] unsigned char 
  2128 ;;  i               1    5[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      unsigned char 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;Total ram usage:        2 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    2
  2145 ;; This function calls:
  2146 ;;		_obtainedKey
  2147 ;;		_readPassword
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text18
  2154  001222                     __ptext18:
  2155                           	opt stack 0
  2156  001222                     _checkPassword:
  2157                           	opt stack 28
  2158                           
  2159                           ;profile.c: 51: unsigned char i = 0;
  2160                           
  2161                           ;incstack = 0
  2162  001222  0E00               	movlw	0
  2163  001224  6E06               	movwf	checkPassword@i,c
  2164  001226                     l1455:
  2165                           
  2166                           ;profile.c: 54: unsigned char pass = readPassword(0x00+1);
  2167  001226  0E01               	movlw	1
  2168  001228  ECA4  F009         	call	_readPassword
  2169  00122C  6E05               	movwf	checkPassword@pass,c
  2170                           
  2171                           ;profile.c: 55: if(obtainedKey() == pass){
  2172  00122E  EC45  F009         	call	_obtainedKey	;wreg free
  2173  001232  1805               	xorwf	checkPassword@pass,w,c
  2174  001234  A4D8               	btfss	status,2,c
  2175  001236  D002               	goto	l1465
  2176                           
  2177                           ;profile.c: 56: return 1;
  2178  001238  0E01               	movlw	1
  2179  00123A  0012               	return	
  2180  00123C                     l1465:
  2181  00123C  0E02               	movlw	2
  2182  00123E  6006               	cpfslt	checkPassword@i,c
  2183  001240  D007               	goto	l1473
  2184  001242  EC45  F009         	call	_obtainedKey	;wreg free
  2185  001246  1805               	xorwf	checkPassword@pass,w,c
  2186  001248  B4D8               	btfsc	status,2,c
  2187  00124A  D002               	goto	l1473
  2188                           
  2189                           ;profile.c: 58: return 0;
  2190  00124C  0E00               	movlw	0
  2191  00124E  0012               	return	
  2192  001250                     l1473:
  2193                           
  2194                           ;profile.c: 59: }
  2195                           ;profile.c: 60: i++;
  2196  001250  2A06               	incf	checkPassword@i,f,c
  2197                           
  2198                           ;profile.c: 61: }while(i<2);
  2199  001252  0E01               	movlw	1
  2200  001254  6406               	cpfsgt	checkPassword@i,c
  2201  001256  D7E7               	goto	l1455
  2202  001258  0012               	return	
  2203  00125A                     __end_of_checkPassword:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           intcon	equ	0xFF2
  2210                           intcon2	equ	0xFF1
  2211                           wreg	equ	0xFE8
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _readPassword *****************
  2215 ;; Defined at:
  2216 ;;		line 14 in file "profile.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  address         1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  address         1    2[COMRAM] unsigned char 
  2221 ;;  value           1    3[COMRAM] volatile unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    1
  2238 ;; This function calls:
  2239 ;;		_Read_b_eep
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;;		_menu
  2243 ;;		_checkPassword
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text19
  2248  001348                     __ptext19:
  2249                           	opt stack 0
  2250  001348                     _readPassword:
  2251                           	opt stack 29
  2252                           
  2253                           ;incstack = 0
  2254                           ;readPassword@address stored from wreg
  2255  001348  6E03               	movwf	readPassword@address,c
  2256                           
  2257                           ;profile.c: 15: volatile unsigned char value;
  2258                           ;profile.c: 16: value = Read_b_eep(address);
  2259  00134A  C003  F001         	movff	readPassword@address,Read_b_eep@badd
  2260  00134E  6A02               	clrf	Read_b_eep@badd+1,c
  2261  001350  EC7B  F009         	call	_Read_b_eep	;wreg free
  2262  001354  6E04               	movwf	readPassword@value,c	;volatile
  2263                           
  2264                           ;profile.c: 17: return value;
  2265  001356  5004               	movf	readPassword@value,w,c	;volatile
  2266  001358  0012               	return	
  2267  00135A                     __end_of_readPassword:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           intcon	equ	0xFF2
  2274                           intcon2	equ	0xFF1
  2275                           wreg	equ	0xFE8
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _Read_b_eep *****************
  2279 ;; Defined at:
  2280 ;;		line 35 in file "/Applications/microchip/xc8/v1.41/sources/pic18/plib/EEP/read_B.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  badd            2    0[COMRAM] unsigned int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;Total ram usage:        2 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_readPassword
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text20
  2308  0012F6                     __ptext20:
  2309                           	opt stack 0
  2310  0012F6                     _Read_b_eep:
  2311                           	opt stack 29
  2312                           
  2313                           ;incstack = 0
  2314  0012F6  5002               	movf	Read_b_eep@badd+1,w,c
  2315  0012F8  0B03               	andlw	3
  2316  0012FA  6EAA               	movwf	4010,c	;volatile
  2317  0012FC  C001  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  2318  001300  9CA6               	bcf	4006,6,c	;volatile
  2319  001302  9EA6               	bcf	4006,7,c	;volatile
  2320  001304  80A6               	bsf	4006,0,c	;volatile
  2321  001306  F000               	nop	
  2322  001308  F000               	nop	
  2323  00130A  50A8               	movf	4008,w,c	;volatile
  2324  00130C  0012               	return	
  2325  00130E                     __end_of_Read_b_eep:
  2326                           	opt stack 0
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           intcon	equ	0xFF2
  2332                           intcon2	equ	0xFF1
  2333                           wreg	equ	0xFE8
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _alarm *****************
  2337 ;; Defined at:
  2338 ;;		line 12 in file "alarm.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    2
  2359 ;; This function calls:
  2360 ;;		_obtainedKey
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text21
  2367  00135A                     __ptext21:
  2368                           	opt stack 0
  2369  00135A                     _alarm:
  2370                           	opt stack 28
  2371  00135A                     l281:
  2372                           
  2373                           ;alarm.c: 14: PORTEbits.RE0 = 1;
  2374  00135A  8084               	bsf	3972,0,c	;volatile
  2375                           
  2376                           ;alarm.c: 16: if(PORTBbits.RB1 != 0){
  2377  00135C  B281               	btfsc	3969,1,c	;volatile
  2378                           
  2379                           ;alarm.c: 17: PORTAbits.RA0 = 1;
  2380  00135E  8080               	bsf	3968,0,c	;volatile
  2381                           
  2382                           ;alarm.c: 18: }
  2383                           ;alarm.c: 19: if(obtainedKey()){
  2384  001360  EC45  F009         	call	_obtainedKey	;wreg free
  2385  001364  0900               	iorlw	0
  2386  001366  A4D8               	btfss	status,2,c
  2387  001368  0012               	return	
  2388  00136A  D7F7               	goto	l281
  2389  00136C                     __end_of_alarm:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           intcon	equ	0xFF2
  2396                           intcon2	equ	0xFF1
  2397                           wreg	equ	0xFE8
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _obtainedKey *****************
  2401 ;; Defined at:
  2402 ;;		line 73 in file "keypadCon.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  key_presiona    1    1[COMRAM] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      unsigned char 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        1 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    1
  2423 ;; This function calls:
  2424 ;;		_getKey
  2425 ;;		_ground
  2426 ;; This function is called by:
  2427 ;;		_menu
  2428 ;;		_profile
  2429 ;;		_checkPassword
  2430 ;;		_alarm
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text22
  2435  00128A                     __ptext22:
  2436                           	opt stack 0
  2437  00128A                     _obtainedKey:
  2438                           	opt stack 28
  2439                           
  2440                           ;keypadCon.c: 74: ground();
  2441                           
  2442                           ;incstack = 0
  2443  00128A  ECCA  F009         	call	_ground	;wreg free
  2444                           
  2445                           ;keypadCon.c: 75: unsigned char key_presionada = 0xFF;
  2446  00128E  6802               	setf	obtainedKey@key_presionada,c
  2447  001290                     l1131:
  2448                           
  2449                           ;keypadCon.c: 77: key_presionada = getKey();
  2450  001290  EC06  F008         	call	_getKey	;wreg free
  2451  001294  6E02               	movwf	obtainedKey@key_presionada,c
  2452                           
  2453                           ;keypadCon.c: 78: }
  2454                           ;keypadCon.c: 79: while(key_presionada == 0xFF);
  2455  001296  2802               	incf	obtainedKey@key_presionada,w,c
  2456  001298  B4D8               	btfsc	status,2,c
  2457  00129A  D7FA               	goto	l1131
  2458  00129C                     l1135:
  2459  00129C  EC06  F008         	call	_getKey	;wreg free
  2460  0012A0  0AFF               	xorlw	255
  2461  0012A2  A4D8               	btfss	status,2,c
  2462  0012A4  D7FB               	goto	l1135
  2463                           
  2464                           ;keypadCon.c: 82: return key_presionada;
  2465  0012A6  5002               	movf	obtainedKey@key_presionada,w,c
  2466  0012A8  0012               	return	
  2467  0012AA                     __end_of_obtainedKey:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           intcon	equ	0xFF2
  2474                           intcon2	equ	0xFF1
  2475                           wreg	equ	0xFE8
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _ground *****************
  2479 ;; Defined at:
  2480 ;;		line 66 in file "keypadCon.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		None
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_obtainedKey
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text23
  2508  001394                     __ptext23:
  2509                           	opt stack 0
  2510  001394                     _ground:
  2511                           	opt stack 28
  2512                           
  2513                           ;keypadCon.c: 67: LATCbits.LATC0 = 0;
  2514                           
  2515                           ;incstack = 0
  2516  001394  908B               	bcf	3979,0,c	;volatile
  2517                           
  2518                           ;keypadCon.c: 68: LATCbits.LATC1 = 0;
  2519  001396  928B               	bcf	3979,1,c	;volatile
  2520                           
  2521                           ;keypadCon.c: 69: LATEbits.LATE2 = 0;
  2522  001398  948D               	bcf	3981,2,c	;volatile
  2523                           
  2524                           ;keypadCon.c: 70: LATCbits.LATC3 = 0;
  2525  00139A  968B               	bcf	3979,3,c	;volatile
  2526  00139C  0012               	return		;funcret
  2527  00139E                     __end_of_ground:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           intcon	equ	0xFF2
  2534                           intcon2	equ	0xFF1
  2535                           wreg	equ	0xFE8
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _getKey *****************
  2539 ;; Defined at:
  2540 ;;		line 21 in file "keypadCon.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;Total ram usage:        1 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_obtainedKey
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text24
  2568  00100C                     __ptext24:
  2569                           	opt stack 0
  2570  00100C                     _getKey:
  2571                           	opt stack 28
  2572                           
  2573                           ;keypadCon.c: 23: LATCbits.LATC0 = 0;
  2574                           
  2575                           ;incstack = 0
  2576  00100C  908B               	bcf	3979,0,c	;volatile
  2577                           
  2578                           ;keypadCon.c: 24: LATCbits.LATC1 = 1;
  2579  00100E  828B               	bsf	3979,1,c	;volatile
  2580                           
  2581                           ;keypadCon.c: 25: LATEbits.LATE2 = 1;
  2582  001010  848D               	bsf	3981,2,c	;volatile
  2583                           
  2584                           ;keypadCon.c: 26: LATCbits.LATC3 = 1;
  2585  001012  868B               	bsf	3979,3,c	;volatile
  2586                           
  2587                           ;keypadCon.c: 27: _delay((unsigned long)((25)*(8000000/4000.0)));
  2588  001014  0E41               	movlw	65
  2589  001016  6E01               	movwf	??_getKey& (0+255),c
  2590  001018  0EEE               	movlw	238
  2591  00101A                     u707:
  2592  00101A  2EE8               	decfsz	wreg,f,c
  2593  00101C  D7FE               	bra	u707
  2594  00101E  2E01               	decfsz	??_getKey& (0+255),f,c
  2595  001020  D7FC               	bra	u707
  2596  001022  D000               	nop2	
  2597                           
  2598                           ;keypadCon.c: 28: if(PORTCbits.RC4 == 0) return '1';
  2599  001024  B882               	btfsc	3970,4,c	;volatile
  2600  001026  D002               	goto	l243
  2601  001028  0E31               	movlw	49
  2602  00102A  0012               	return	
  2603  00102C                     l243:
  2604                           
  2605                           ;keypadCon.c: 29: if(PORTCbits.RC5 == 0) return '2';
  2606  00102C  BA82               	btfsc	3970,5,c	;volatile
  2607  00102E  D002               	goto	l245
  2608  001030  0E32               	movlw	50
  2609  001032  0012               	return	
  2610  001034                     l245:
  2611                           
  2612                           ;keypadCon.c: 30: if(PORTCbits.RC6 == 0) return '3';
  2613  001034  BC82               	btfsc	3970,6,c	;volatile
  2614  001036  D002               	goto	l246
  2615  001038  0E33               	movlw	51
  2616  00103A  0012               	return	
  2617  00103C                     l246:
  2618                           
  2619                           ;keypadCon.c: 31: if(PORTCbits.RC7 == 0) return 'A';
  2620  00103C  BE82               	btfsc	3970,7,c	;volatile
  2621  00103E  D002               	goto	l247
  2622  001040  0E41               	movlw	65
  2623  001042  0012               	return	
  2624  001044                     l247:
  2625                           
  2626                           ;keypadCon.c: 33: LATCbits.LATC0 = 1;
  2627  001044  808B               	bsf	3979,0,c	;volatile
  2628                           
  2629                           ;keypadCon.c: 34: LATCbits.LATC1 = 0;
  2630  001046  928B               	bcf	3979,1,c	;volatile
  2631                           
  2632                           ;keypadCon.c: 35: LATEbits.LATE2 = 1;
  2633  001048  848D               	bsf	3981,2,c	;volatile
  2634                           
  2635                           ;keypadCon.c: 36: LATCbits.LATC3 = 1;
  2636  00104A  868B               	bsf	3979,3,c	;volatile
  2637                           
  2638                           ;keypadCon.c: 37: _delay((unsigned long)((25)*(8000000/4000.0)));
  2639  00104C  0E41               	movlw	65
  2640  00104E  6E01               	movwf	??_getKey& (0+255),c
  2641  001050  0EEE               	movlw	238
  2642  001052                     u717:
  2643  001052  2EE8               	decfsz	wreg,f,c
  2644  001054  D7FE               	bra	u717
  2645  001056  2E01               	decfsz	??_getKey& (0+255),f,c
  2646  001058  D7FC               	bra	u717
  2647  00105A  D000               	nop2	
  2648                           
  2649                           ;keypadCon.c: 38: if(PORTCbits.RC4 == 0) return '4';
  2650  00105C  B882               	btfsc	3970,4,c	;volatile
  2651  00105E  D002               	goto	l248
  2652  001060  0E34               	movlw	52
  2653  001062  0012               	return	
  2654  001064                     l248:
  2655                           
  2656                           ;keypadCon.c: 39: if(PORTCbits.RC5 == 0) return '5';
  2657  001064  BA82               	btfsc	3970,5,c	;volatile
  2658  001066  D002               	goto	l249
  2659  001068  0E35               	movlw	53
  2660  00106A  0012               	return	
  2661  00106C                     l249:
  2662                           
  2663                           ;keypadCon.c: 40: if(PORTCbits.RC6 == 0) return '6';
  2664  00106C  BC82               	btfsc	3970,6,c	;volatile
  2665  00106E  D002               	goto	l250
  2666  001070  0E36               	movlw	54
  2667  001072  0012               	return	
  2668  001074                     l250:
  2669                           
  2670                           ;keypadCon.c: 41: if(PORTCbits.RC7 == 0) return 'B';
  2671  001074  BE82               	btfsc	3970,7,c	;volatile
  2672  001076  D002               	goto	l251
  2673  001078  0E42               	movlw	66
  2674  00107A  0012               	return	
  2675  00107C                     l251:
  2676                           
  2677                           ;keypadCon.c: 43: LATCbits.LATC0 = 1;
  2678  00107C  808B               	bsf	3979,0,c	;volatile
  2679                           
  2680                           ;keypadCon.c: 44: LATCbits.LATC1 = 1;
  2681  00107E  828B               	bsf	3979,1,c	;volatile
  2682                           
  2683                           ;keypadCon.c: 45: LATEbits.LATE2 = 0;
  2684  001080  948D               	bcf	3981,2,c	;volatile
  2685                           
  2686                           ;keypadCon.c: 46: LATCbits.LATC3 = 1;
  2687  001082  868B               	bsf	3979,3,c	;volatile
  2688                           
  2689                           ;keypadCon.c: 47: _delay((unsigned long)((25)*(8000000/4000.0)));
  2690  001084  0E41               	movlw	65
  2691  001086  6E01               	movwf	??_getKey& (0+255),c
  2692  001088  0EEE               	movlw	238
  2693  00108A                     u727:
  2694  00108A  2EE8               	decfsz	wreg,f,c
  2695  00108C  D7FE               	bra	u727
  2696  00108E  2E01               	decfsz	??_getKey& (0+255),f,c
  2697  001090  D7FC               	bra	u727
  2698  001092  D000               	nop2	
  2699                           
  2700                           ;keypadCon.c: 48: if(PORTCbits.RC4 == 0) return '7';
  2701  001094  B882               	btfsc	3970,4,c	;volatile
  2702  001096  D002               	goto	l252
  2703  001098  0E37               	movlw	55
  2704  00109A  0012               	return	
  2705  00109C                     l252:
  2706                           
  2707                           ;keypadCon.c: 49: if(PORTCbits.RC5 == 0) return '8';
  2708  00109C  BA82               	btfsc	3970,5,c	;volatile
  2709  00109E  D002               	goto	l253
  2710  0010A0  0E38               	movlw	56
  2711  0010A2  0012               	return	
  2712  0010A4                     l253:
  2713                           
  2714                           ;keypadCon.c: 50: if(PORTCbits.RC6 == 0) return '9';
  2715  0010A4  BC82               	btfsc	3970,6,c	;volatile
  2716  0010A6  D002               	goto	l254
  2717  0010A8  0E39               	movlw	57
  2718  0010AA  0012               	return	
  2719  0010AC                     l254:
  2720                           
  2721                           ;keypadCon.c: 51: if(PORTCbits.RC7 == 0) return 'C';
  2722  0010AC  BE82               	btfsc	3970,7,c	;volatile
  2723  0010AE  D002               	goto	l255
  2724  0010B0  0E43               	movlw	67
  2725  0010B2  0012               	return	
  2726  0010B4                     l255:
  2727                           
  2728                           ;keypadCon.c: 53: LATCbits.LATC0 = 1;
  2729  0010B4  808B               	bsf	3979,0,c	;volatile
  2730                           
  2731                           ;keypadCon.c: 54: LATCbits.LATC1 = 1;
  2732  0010B6  828B               	bsf	3979,1,c	;volatile
  2733                           
  2734                           ;keypadCon.c: 55: LATEbits.LATE2 = 1;
  2735  0010B8  848D               	bsf	3981,2,c	;volatile
  2736                           
  2737                           ;keypadCon.c: 56: LATCbits.LATC3 = 0;
  2738  0010BA  968B               	bcf	3979,3,c	;volatile
  2739                           
  2740                           ;keypadCon.c: 57: _delay((unsigned long)((25)*(8000000/4000.0)));
  2741  0010BC  0E41               	movlw	65
  2742  0010BE  6E01               	movwf	??_getKey& (0+255),c
  2743  0010C0  0EEE               	movlw	238
  2744  0010C2                     u737:
  2745  0010C2  2EE8               	decfsz	wreg,f,c
  2746  0010C4  D7FE               	bra	u737
  2747  0010C6  2E01               	decfsz	??_getKey& (0+255),f,c
  2748  0010C8  D7FC               	bra	u737
  2749  0010CA  D000               	nop2	
  2750                           
  2751                           ;keypadCon.c: 58: if(PORTCbits.RC4 == 0) return '*';
  2752  0010CC  B882               	btfsc	3970,4,c	;volatile
  2753  0010CE  D002               	goto	l256
  2754  0010D0  0E2A               	movlw	42
  2755  0010D2  0012               	return	
  2756  0010D4                     l256:
  2757                           
  2758                           ;keypadCon.c: 59: if(PORTCbits.RC5 == 0) return '0';
  2759  0010D4  BA82               	btfsc	3970,5,c	;volatile
  2760  0010D6  D002               	goto	l257
  2761  0010D8  0E30               	movlw	48
  2762  0010DA  0012               	return	
  2763  0010DC                     l257:
  2764                           
  2765                           ;keypadCon.c: 60: if(PORTCbits.RC6 == 0) return '#';
  2766  0010DC  BC82               	btfsc	3970,6,c	;volatile
  2767  0010DE  D002               	goto	l258
  2768  0010E0  0E23               	movlw	35
  2769  0010E2  0012               	return	
  2770  0010E4                     l258:
  2771                           
  2772                           ;keypadCon.c: 61: if(PORTCbits.RC7 == 0) return 'D';
  2773  0010E4  BE82               	btfsc	3970,7,c	;volatile
  2774  0010E6  D002               	goto	l1099
  2775  0010E8  0E44               	movlw	68
  2776  0010EA  0012               	return	
  2777  0010EC                     l1099:
  2778                           
  2779                           ;keypadCon.c: 63: return 0xFF;
  2780  0010EC  0EFF               	movlw	255
  2781  0010EE  0012               	return	
  2782  0010F0                     __end_of_getKey:
  2783                           	opt stack 0
  2784                           tblptru	equ	0xFF8
  2785                           tblptrh	equ	0xFF7
  2786                           tblptrl	equ	0xFF6
  2787                           tablat	equ	0xFF5
  2788                           intcon	equ	0xFF2
  2789                           intcon2	equ	0xFF1
  2790                           wreg	equ	0xFE8
  2791                           status	equ	0xFD8
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           intcon	equ	0xFF2
  2797                           intcon2	equ	0xFF1
  2798                           wreg	equ	0xFE8
  2799                           status	equ	0xFD8
  2800                           
  2801                           	psect	rparam
  2802  0000                     tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           intcon	equ	0xFF2
  2807                           intcon2	equ	0xFF1
  2808                           wreg	equ	0xFE8
  2809                           status	equ	0xFD8


Data Sizes:
    Strings     239
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__read_display_LCD	PTR unsigned char  size(2) Largest target is 3327
		 -> RAM(DATA[3327]), 

    display_string_LCD@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[10]), STR_17(CODE[11]), STR_16(CODE[14]), STR_15(CODE[16]), 
		 -> STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[14]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_profile
    _welcome->_display_string_LCD
    _setup_LCD->_command_LCD
    _profile->_writePassword
    _writePassword->_Write_b_eep
    _menu->_readPassword
    _second_line_LCD->_command_LCD
    _first_line_LCD->_command_LCD
    _display_string_LCD->_display_LCD
    _clear_LCD->_command_LCD
    _checkPassword->_readPassword
    _readPassword->_Read_b_eep
    _alarm->_obtainedKey
    _obtainedKey->_getKey

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6289
                                              8 COMRAM     2     2      0
                              _alarm
                      _checkPassword
                          _clear_LCD
                        _display_LCD
                 _display_string_LCD
                               _menu
                            _profile
                            _pwmInit
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
                          _setup_LCD
                            _welcome
 ---------------------------------------------------------------------------------
 (1) _welcome                                              0     0      0    1212
                 _display_string_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _setup_LCD                                            2     2      0      15
                                              1 COMRAM     2     2      0
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _profile                                              2     2      0    1893
                                              6 COMRAM     2     2      0
                          _clear_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                          _ready_LCD
                    _second_line_LCD
                      _writePassword
 ---------------------------------------------------------------------------------
 (2) _writePassword                                        2     1      1     582
                                              4 COMRAM     2     1      1
                           _Busy_eep
                        _Write_b_eep
                        _obtainedKey (ARG)
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     218
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    1455
                                              4 COMRAM     2     2      0
                          _clear_LCD
                              _close
                        _display_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                               _open
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
 ---------------------------------------------------------------------------------
 (1) _second_line_LCD                                      0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _first_line_LCD                                       0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _display_string_LCD                                   2     0      2    1212
                                              1 COMRAM     2     0      2
                        _display_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _ready_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_LCD                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            0     0      0      15
                        _command_LCD
 ---------------------------------------------------------------------------------
 (2) _command_LCD                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0     274
                                              4 COMRAM     2     2      0
                        _obtainedKey
                       _readPassword
 ---------------------------------------------------------------------------------
 (1) _readPassword                                         2     2      0     153
                                              2 COMRAM     2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2     108
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _alarm                                                0     0      0      30
                        _obtainedKey
 ---------------------------------------------------------------------------------
 (2) _obtainedKey                                          1     1      0      30
                                              1 COMRAM     1     1      0
                             _getKey
                             _ground
 ---------------------------------------------------------------------------------
 (3) _ground                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getKey                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarm
     _obtainedKey
       _getKey
       _ground
   _checkPassword
     _obtainedKey
       _getKey
       _ground
     _readPassword
       _Read_b_eep
   _clear_LCD
     _command_LCD
   _display_LCD
   _display_string_LCD
     _display_LCD
     _ready_LCD
   _menu
     _clear_LCD
       _command_LCD
     _close
     _display_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _open
     _readPassword
       _Read_b_eep
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
   _profile
     _clear_LCD
       _command_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
     _writePassword
       _Busy_eep
       _Write_b_eep
       _obtainedKey (ARG)
         _getKey
         _ground
   _pwmInit
   _readPassword
     _Read_b_eep
   _ready_LCD
   _second_line_LCD
     _command_LCD
     _ready_LCD
   _setup_LCD
     _command_LCD
     _ready_LCD
   _welcome
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _ready_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       B       1       11.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May  7 14:46:49 2017

               ?_display_LCD 0001                           l82 0EAE        __end_of_checkPassword 125A  
                        l111 12B0                          l250 1074                          l322 1210  
                        l251 107C                          l243 102C                          l252 109C  
                        l253 10A4                          l245 1034                          l254 10AC  
                        l246 103C                          l255 10B4                          l247 1044  
                        l256 10D4                          l248 1064                          l257 10DC  
                        l249 106C                          l281 135A                          l258 10E4  
                        l291 13A6                          _PR2 000FCB                          u445 121C  
                        u446 121E                          u707 101A                          u717 1052  
                        u637 0ED0                          u727 108A                          u647 11A6  
                        u737 10C2                          u657 11C2                          u667 0FF8  
                        u677 12B4                          u687 12D4                          u697 12EC  
       __size_of_Write_b_eep 003E                          wreg 000FE8                 __CFG_LVP$OFF 000000  
     display_string_LCD@data 0002                 __CFG_WDT$OFF 000000                         l1131 1290  
                       l1135 129C                         l1403 125E                         l1407 1272  
                       l1503 0F74                         l1099 10EC                         l1443 1164  
                       l1517 0FB6                         l1437 1148                         l1455 1226  
                       l1473 1250                         l1465 123C                         l1481 0F10  
                       l1547 0E44                         l1557 0E7A                         STR_1 0D71  
                       STR_2 0D62                         STR_3 0DAA                         STR_4 0D9C  
                       STR_5 0D52                         STR_6 0D42                         STR_7 0D32  
                       STR_8 0DC5                         STR_9 0D8E                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         _flag 000B                         _main 0DF2  
                       _menu 0F10                         _open 13AC            ??_second_line_LCD 0002  
                       start 0000                __CFG_MCLRE$ON 000000                 command_LCD@x 0001  
               ___param_bank 000000                        ?_main 0001                        ?_menu 0001  
                      _EEADR 000FA9                        STR_10 0DC5                        STR_11 0DE6  
                      ?_open 0001                        STR_12 0DB8                        STR_13 0D22  
                      STR_14 0D01                        STR_15 0D12                        STR_16 0D80  
                      STR_17 0DD1                        STR_18 0DDC                        _CMCON 000FB4  
                      _T2CON 000FCA      __size_of_first_line_LCD 000C                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
             Read_b_eep@badd 0001                        _alarm 135A                        _close 13B2  
     Write_b_eep@GIE_BIT_VAL 0004                 ?_obtainedKey 0001                        tablat 000FF5  
            __end_of_pwmInit 1348              __end_of_welcome 1336              __end_of_profile 119A  
                      status 000FD8              __initialization 136C                 __end_of_main 0F10  
       writePassword@address 0005                 __end_of_menu 100C                 __end_of_open 13B2  
                 _Read_b_eep 12F6             __end_of_Busy_eep 13AC                       ??_main 0009  
                     ??_menu 0005                       ??_open 0001                __activetblptr 000001  
                     ?_alarm 0001                ?_readPassword 0001                       ?_close 0001  
                     _ADCON1 000FC1                       _EEADRH 000FAA                       _EEDATA 000FA8  
                     _CCPR1L 000FBE                       _EECON2 000FA7                       _OSCCON 000FD3  
       __size_of_command_LCD 0018                       _getKey 100C            readPassword@value 0004  
                     _ground 1394         __size_of_display_LCD 0018                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
             ??_readPassword 0003                    ??_pwmInit 0001                    ??_welcome 0004  
                  ??_profile 0007                   __accesstop 0060      __end_of__initialization 136E  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001   __end_of_display_string_LCD 128A  
     __size_of_writePassword 0016               __pcstackCOMRAM 0001                __end_of_alarm 136C  
              __end_of_close 13B8                  ?_Read_b_eep 0001           __size_of_clear_LCD 0008  
             _first_line_LCD 1388              _second_line_LCD 137C                      ??_alarm 0003  
                    ??_close 0001         __size_of_obtainedKey 0020                    ?_Busy_eep 0001  
         __size_of_ready_LCD 001C                      ?_getKey 0001                      _CCP1CON 000FBD  
                    ?_ground 0001       __end_of_first_line_LCD 1394                ??_Write_b_eep 0004  
         __size_of_setup_LCD 004A                _writePassword 130E          __size_of_Read_b_eep 0018  
          __end_of_clear_LCD 13A6                   ??_Busy_eep 0001       __size_of_checkPassword 0038  
                    __Hparam 0000                      __Lparam 0000         __end_of_readPassword 135A  
            __size_of_getKey 00E4                 __psmallconst 0D00                      __pcinit 136C  
            ?_first_line_LCD 0001                      __ramtop 0D00              __size_of_ground 000A  
                    __ptext0 0DF2                      __ptext1 1324                      __ptext2 119A  
                    __ptext3 1336                      __ptext4 10F0                      __ptext5 130E  
                    __ptext6 11E4                      __ptext7 13A6                      __ptext8 0F10  
                    __ptext9 137C      __end_of_second_line_LCD 1388               ?_writePassword 0005  
          __end_of_ready_LCD 12C6    obtainedKey@key_presionada 0002          __end_of_Write_b_eep 1222  
                    _pwmInit 1336                      _welcome 1324                      _profile 10F0  
       end_of_initialization 136E            __end_of_setup_LCD 11E4               checkPassword@i 0006  
              _checkPassword 1222                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _PORTEbits 000F84  
              ??_command_LCD 0001                ??_display_LCD 0001                 ??_Read_b_eep 0003  
             ?_checkPassword 0001               __end_of_getKey 10F0              ??_writePassword 0006  
                _Write_b_eep 11E4               __end_of_ground 139E             ?_second_line_LCD 0001  
         _display_string_LCD 125A          start_initialization 136C          ?_display_string_LCD 0002  
         __end_of_Read_b_eep 130E             __CFG_OSC$IRCIO67 000000        __size_of_readPassword 0012  
          __size_of_Busy_eep 0006         ??_display_string_LCD 0004                     ??_getKey 0001  
                   ??_ground 0001          __end_of_command_LCD 12F6          __end_of_display_LCD 12DE  
                __pbssCOMRAM 000B                 _readPassword 1348                ??_obtainedKey 0002  
                  _clear_LCD 139E             ??_first_line_LCD 0002              ??_checkPassword 0005  
                __smallconst 0D00                     ?_pwmInit 0001                     ?_welcome 0001  
                   ?_profile 0001               __size_of_alarm 0012               __size_of_close 0006  
                  _ready_LCD 12AA                     _LATCbits 000F8B                     _LATEbits 000F8D  
        __end_of_obtainedKey 12AA                   ?_clear_LCD 0001                  _command_LCD 12DE  
                  _setup_LCD 119A                  _display_LCD 12C6              Write_b_eep@badd 0001  
            Write_b_eep@bdat 0003            checkPassword@pass 0005                  _INTCON2bits 000FF1  
                 ?_ready_LCD 0001                     _Busy_eep 13A6           writePassword@value 0006  
                 _EECON1bits 000FA6                     __Hrparam 0000              display_LCD@data 0001  
                   __Lrparam 0000                 __Lsmallconst 0D00                   ?_setup_LCD 0001  
               ?_Write_b_eep 0001          readPassword@address 0003                     __ptext10 13AC  
                   __ptext11 1388                     __ptext20 12F6                     __ptext12 125A  
                   __ptext21 135A                     __ptext13 12AA                     __ptext22 128A  
                   __ptext14 12C6                     __ptext23 1394                     __ptext15 13B2  
                   __ptext24 100C                     __ptext16 139E                     __ptext17 12DE  
                   __ptext18 1222                     __ptext19 1348             __size_of_pwmInit 0012  
           __size_of_welcome 0012             __size_of_profile 00AA                  _obtainedKey 128A  
              __size_of_main 011E                __size_of_menu 00FC                __size_of_open 0006  
                ??_clear_LCD 0002                   _CVRCONbits 000FB5        __end_of_writePassword 1324  
                 _INTCONbits 000FF2     __size_of_second_line_LCD 000C                  ??_ready_LCD 0001  
__size_of_display_string_LCD 0030                  ??_setup_LCD 0002                     profile@i 0007  
               ?_command_LCD 0001  
