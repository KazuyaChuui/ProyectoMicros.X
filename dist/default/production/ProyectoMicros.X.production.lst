

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May  7 17:43:23 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.41
    41                           ; Generated 25/01/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4585 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _PORTBbits	set	3969
    75  0000                     _PORTCbits	set	3970
    76  0000                     _LATEbits	set	3981
    77  0000                     _LATCbits	set	3979
    78  0000                     _CCP1CON	set	4029
    79  0000                     _T2CON	set	4042
    80  0000                     _CCPR1L	set	4030
    81  0000                     _PR2	set	4043
    82  0000                     _EECON2	set	4007
    83  0000                     _EEDATA	set	4008
    84  0000                     _EECON1bits	set	4006
    85  0000                     _EEADRH	set	4010
    86  0000                     _EEADR	set	4009
    87  0000                     _PORTDbits	set	3971
    88  0000                     _PORTEbits	set	3972
    89  0000                     _PORTAbits	set	3968
    90  0000                     _TRISE	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISA	set	3986
    95  0000                     _LATE	set	3981
    96  0000                     _LATD	set	3980
    97  0000                     _LATC	set	3979
    98  0000                     _LATB	set	3978
    99  0000                     _LATA	set	3977
   100  0000                     _PORTE	set	3972
   101  0000                     _PORTD	set	3971
   102  0000                     _PORTC	set	3970
   103  0000                     _PORTB	set	3969
   104  0000                     _PORTA	set	3968
   105  0000                     _INTCON3bits	set	4080
   106  0000                     _INTCONbits	set	4082
   107  0000                     _RCONbits	set	4048
   108  0000                     _INTCON2bits	set	4081
   109  0000                     _ADCON1	set	4033
   110  0000                     _CVRCONbits	set	4021
   111  0000                     _CMCON	set	4020
   112  0000                     _OSCCON	set	4051
   113                           
   114                           	psect	smallconst
   115  000D00                     __psmallconst:
   116                           	opt stack 0
   117  000D00  00                 	db	0
   118  000D01                     STR_14:
   119  000D01  55                 	db	85	;'U'
   120  000D02  20                 	db	32
   121  000D03  50                 	db	80	;'P'
   122  000D04  72                 	db	114	;'r'
   123  000D05  65                 	db	101	;'e'
   124  000D06  66                 	db	102	;'f'
   125  000D07  65                 	db	101	;'e'
   126  000D08  72                 	db	114	;'r'
   127  000D09  20                 	db	32
   128  000D0A  41                 	db	65	;'A'
   129  000D0B  20                 	db	32
   130  000D0C  42                 	db	66	;'B'
   131  000D0D  20                 	db	32
   132  000D0E  43                 	db	67	;'C'
   133  000D0F  20                 	db	32
   134  000D10  44                 	db	68	;'D'
   135  000D11  00                 	db	0
   136  000D12                     STR_15:
   137  000D12  49                 	db	73	;'I'
   138  000D13  6E                 	db	110	;'n'
   139  000D14  74                 	db	116	;'t'
   140  000D15  72                 	db	114	;'r'
   141  000D16  6F                 	db	111	;'o'
   142  000D17  64                 	db	100	;'d'
   143  000D18  75                 	db	117	;'u'
   144  000D19  63                 	db	99	;'c'
   145  000D1A  65                 	db	101	;'e'
   146  000D1B  20                 	db	32
   147  000D1C  50                 	db	80	;'P'
   148  000D1D  73                 	db	115	;'s'
   149  000D1E  73                 	db	115	;'s'
   150  000D1F  77                 	db	119	;'w'
   151  000D20  64                 	db	100	;'d'
   152  000D21  00                 	db	0
   153  000D22                     STR_13:
   154  000D22  57                 	db	87	;'W'
   155  000D23  68                 	db	104	;'h'
   156  000D24  69                 	db	105	;'i'
   157  000D25  63                 	db	99	;'c'
   158  000D26  68                 	db	104	;'h'
   159  000D27  20                 	db	32
   160  000D28  6C                 	db	108	;'l'
   161  000D29  65                 	db	101	;'e'
   162  000D2A  74                 	db	116	;'t'
   163  000D2B  74                 	db	116	;'t'
   164  000D2C  65                 	db	101	;'e'
   165  000D2D  72                 	db	114	;'r'
   166  000D2E  20                 	db	32
   167  000D2F  64                 	db	100	;'d'
   168  000D30  6F                 	db	111	;'o'
   169  000D31  00                 	db	0
   170  000D32                     STR_7:
   171  000D32  2D                 	db	45
   172  000D33  44                 	db	68	;'D'
   173  000D34  6F                 	db	111	;'o'
   174  000D35  6F                 	db	111	;'o'
   175  000D36  72                 	db	114	;'r'
   176  000D37  20                 	db	32
   177  000D38  55                 	db	85	;'U'
   178  000D39  6E                 	db	110	;'n'
   179  000D3A  6C                 	db	108	;'l'
   180  000D3B  6F                 	db	111	;'o'
   181  000D3C  63                 	db	99	;'c'
   182  000D3D  6B                 	db	107	;'k'
   183  000D3E  65                 	db	101	;'e'
   184  000D3F  64                 	db	100	;'d'
   185  000D40  2D                 	db	45
   186  000D41  00                 	db	0
   187  000D42                     STR_6:
   188  000D42  31                 	db	49	;'1'
   189  000D43  2E                 	db	46
   190  000D44  55                 	db	85	;'U'
   191  000D45  6E                 	db	110	;'n'
   192  000D46  6C                 	db	108	;'l'
   193  000D47  6F                 	db	111	;'o'
   194  000D48  63                 	db	99	;'c'
   195  000D49  6B                 	db	107	;'k'
   196  000D4A  20                 	db	32
   197  000D4B  32                 	db	50	;'2'
   198  000D4C  2E                 	db	46
   199  000D4D  4C                 	db	76	;'L'
   200  000D4E  6F                 	db	111	;'o'
   201  000D4F  63                 	db	99	;'c'
   202  000D50  6B                 	db	107	;'k'
   203  000D51  00                 	db	0
   204  000D52                     STR_5:
   205  000D52  31                 	db	49	;'1'
   206  000D53  2E                 	db	46
   207  000D54  44                 	db	68	;'D'
   208  000D55  6F                 	db	111	;'o'
   209  000D56  6F                 	db	111	;'o'
   210  000D57  72                 	db	114	;'r'
   211  000D58  20                 	db	32
   212  000D59  32                 	db	50	;'2'
   213  000D5A  2E                 	db	46
   214  000D5B  4C                 	db	76	;'L'
   215  000D5C  6F                 	db	111	;'o'
   216  000D5D  67                 	db	103	;'g'
   217  000D5E  4F                 	db	79	;'O'
   218  000D5F  75                 	db	117	;'u'
   219  000D60  74                 	db	116	;'t'
   220  000D61  00                 	db	0
   221  000D62                     STR_2:
   222  000D62  57                 	db	87	;'W'
   223  000D63  72                 	db	114	;'r'
   224  000D64  6F                 	db	111	;'o'
   225  000D65  6E                 	db	110	;'n'
   226  000D66  67                 	db	103	;'g'
   227  000D67  20                 	db	32
   228  000D68  50                 	db	80	;'P'
   229  000D69  61                 	db	97	;'a'
   230  000D6A  73                 	db	115	;'s'
   231  000D6B  73                 	db	115	;'s'
   232  000D6C  77                 	db	119	;'w'
   233  000D6D  6F                 	db	111	;'o'
   234  000D6E  72                 	db	114	;'r'
   235  000D6F  64                 	db	100	;'d'
   236  000D70  00                 	db	0
   237  000D71                     STR_1:
   238  000D71  45                 	db	69	;'E'
   239  000D72  6E                 	db	110	;'n'
   240  000D73  74                 	db	116	;'t'
   241  000D74  65                 	db	101	;'e'
   242  000D75  72                 	db	114	;'r'
   243  000D76  20                 	db	32
   244  000D77  50                 	db	80	;'P'
   245  000D78  61                 	db	97	;'a'
   246  000D79  73                 	db	115	;'s'
   247  000D7A  73                 	db	115	;'s'
   248  000D7B  77                 	db	119	;'w'
   249  000D7C  6F                 	db	111	;'o'
   250  000D7D  72                 	db	114	;'r'
   251  000D7E  64                 	db	100	;'d'
   252  000D7F  00                 	db	0
   253  000D80                     STR_16:
   254  000D80  4F                 	db	79	;'O'
   255  000D81  6E                 	db	110	;'n'
   256  000D82  6C                 	db	108	;'l'
   257  000D83  79                 	db	121	;'y'
   258  000D84  20                 	db	32
   259  000D85  74                 	db	116	;'t'
   260  000D86  77                 	db	119	;'w'
   261  000D87  6F                 	db	111	;'o'
   262  000D88  20                 	db	32
   263  000D89  6B                 	db	107	;'k'
   264  000D8A  65                 	db	101	;'e'
   265  000D8B  79                 	db	121	;'y'
   266  000D8C  73                 	db	115	;'s'
   267  000D8D  00                 	db	0
   268  000D8E                     STR_9:
   269  000D8E  2D                 	db	45
   270  000D8F  44                 	db	68	;'D'
   271  000D90  6F                 	db	111	;'o'
   272  000D91  6F                 	db	111	;'o'
   273  000D92  72                 	db	114	;'r'
   274  000D93  20                 	db	32
   275  000D94  4C                 	db	76	;'L'
   276  000D95  6F                 	db	111	;'o'
   277  000D96  63                 	db	99	;'c'
   278  000D97  6B                 	db	107	;'k'
   279  000D98  65                 	db	101	;'e'
   280  000D99  64                 	db	100	;'d'
   281  000D9A  2D                 	db	45
   282  000D9B  00                 	db	0
   283  000D9C                     STR_4:
   284  000D9C  57                 	db	87	;'W'
   285  000D9D  65                 	db	101	;'e'
   286  000D9E  6C                 	db	108	;'l'
   287  000D9F  63                 	db	99	;'c'
   288  000DA0  6F                 	db	111	;'o'
   289  000DA1  6D                 	db	109	;'m'
   290  000DA2  65                 	db	101	;'e'
   291  000DA3  20                 	db	32
   292  000DA4  55                 	db	85	;'U'
   293  000DA5  73                 	db	115	;'s'
   294  000DA6  65                 	db	101	;'e'
   295  000DA7  72                 	db	114	;'r'
   296  000DA8  20                 	db	32
   297  000DA9  00                 	db	0
   298  000DAA                     STR_3:
   299  000DAA  41                 	db	65	;'A'
   300  000DAB  6C                 	db	108	;'l'
   301  000DAC  61                 	db	97	;'a'
   302  000DAD  72                 	db	114	;'r'
   303  000DAE  6D                 	db	109	;'m'
   304  000DAF  20                 	db	32
   305  000DB0  44                 	db	68	;'D'
   306  000DB1  65                 	db	101	;'e'
   307  000DB2  61                 	db	97	;'a'
   308  000DB3  63                 	db	99	;'c'
   309  000DB4  74                 	db	116	;'t'
   310  000DB5  69                 	db	105	;'i'
   311  000DB6  76                 	db	118	;'v'
   312  000DB7  00                 	db	0
   313  000DB8                     STR_12:
   314  000DB8  41                 	db	65	;'A'
   315  000DB9  6C                 	db	108	;'l'
   316  000DBA  61                 	db	97	;'a'
   317  000DBB  72                 	db	114	;'r'
   318  000DBC  6D                 	db	109	;'m'
   319  000DBD  20                 	db	32
   320  000DBE  41                 	db	65	;'A'
   321  000DBF  63                 	db	99	;'c'
   322  000DC0  74                 	db	116	;'t'
   323  000DC1  69                 	db	105	;'i'
   324  000DC2  76                 	db	118	;'v'
   325  000DC3  65                 	db	101	;'e'
   326  000DC4  00                 	db	0
   327  000DC5                     STR_8:
   328  000DC5  41                 	db	65	;'A'
   329  000DC6  20                 	db	32
   330  000DC7  74                 	db	116	;'t'
   331  000DC8  6F                 	db	111	;'o'
   332  000DC9  20                 	db	32
   333  000DCA  47                 	db	71	;'G'
   334  000DCB  6F                 	db	111	;'o'
   335  000DCC  42                 	db	66	;'B'
   336  000DCD  61                 	db	97	;'a'
   337  000DCE  63                 	db	99	;'c'
   338  000DCF  6B                 	db	107	;'k'
   339  000DD0  00                 	db	0
   340  000DD1                     STR_11:
   341  000DD1  42                 	db	66	;'B'
   342  000DD2  79                 	db	121	;'y'
   343  000DD3  65                 	db	101	;'e'
   344  000DD4  20                 	db	32
   345  000DD5  75                 	db	117	;'u'
   346  000DD6  73                 	db	115	;'s'
   347  000DD7  65                 	db	101	;'e'
   348  000DD8  72                 	db	114	;'r'
   349  000DD9  20                 	db	32
   350  000DDA  00                 	db	0
   351  0000                     
   352                           ; #config settings
   353  000DDB  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           	psect	cinit
   356  0013CE                     __pcinit:
   357                           	opt stack 0
   358  0013CE                     start_initialization:
   359                           	opt stack 0
   360  0013CE                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to COMRAM (1 bytes)
   364  0013CE  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   365  0013D0                     end_of_initialization:
   366                           	opt stack 0
   367  0013D0                     __end_of__initialization:
   368                           	opt stack 0
   369  0013D0  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370  0013D2  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371  0013D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   372  0013D6  6EF8               	movwf	tblptru,c
   373  0013D8  0E0D               	movlw	high __Lsmallconst
   374  0013DA  6EF7               	movwf	tblptrh,c
   375  0013DC  0100               	movlb	0
   376  0013DE  EFEE  F006         	goto	_main	;jump to C main() function
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           
   380                           	psect	bssCOMRAM
   381  00002D                     __pbssCOMRAM:
   382                           	opt stack 0
   383  00002D                     _flag:
   384                           	opt stack 0
   385  00002D                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           
   389                           	psect	cstackCOMRAM
   390  000001                     __pcstackCOMRAM:
   391                           	opt stack 0
   392  000001                     ??_backup:
   393  000001                     
   394                           ; 1 bytes @ 0x0
   395  000001                     	ds	16
   396  000011                     ??_luz:
   397                           
   398                           ; 1 bytes @ 0x10
   399  000011                     	ds	19
   400  000024                     ??_getKey:
   401  000024                     command_LCD@x:
   402                           	opt stack 0
   403  000024                     display_LCD@data:
   404                           	opt stack 0
   405  000024                     eeprom_r@address:
   406                           	opt stack 0
   407  000024                     eeprom_w@address:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x23
   411  000024                     	ds	1
   412  000025                     ??_setup_LCD:
   413  000025                     obtainedKey@key_presionada:
   414                           	opt stack 0
   415  000025                     display_string_LCD@data:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000025                     	ds	1
   420  000026                     eeprom_w@value:
   421                           	opt stack 0
   422  000026                     readPassword@address:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x25
   426  000026                     	ds	1
   427  000027                     readPassword@value:
   428                           	opt stack 0
   429  000027                     writePassword@address:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x26
   433  000027                     	ds	1
   434  000028                     ??_menu:
   435  000028                     writePassword@value:
   436                           	opt stack 0
   437  000028                     checkPassword@pass:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x27
   441  000028                     	ds	1
   442  000029                     checkPassword@i:
   443                           	opt stack 0
   444  000029                     profile@i:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x28
   448  000029                     	ds	2
   449  00002B                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x2A
   452  00002B                     	ds	2
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 31 in file "mainCode.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  key             1    0        unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels required when called:    5
   481 ;; This function calls:
   482 ;;		_alarm
   483 ;;		_checkPassword
   484 ;;		_clear_LCD
   485 ;;		_display_LCD
   486 ;;		_display_string_LCD
   487 ;;		_menu
   488 ;;		_profile
   489 ;;		_pwmInit
   490 ;;		_readPassword
   491 ;;		_ready_LCD
   492 ;;		_second_line_LCD
   493 ;;		_setup_LCD
   494 ;;		_welcome
   495 ;; This function is called by:
   496 ;;		Startup code after reset
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text0
   501  000DDC                     __ptext0:
   502                           	opt stack 0
   503  000DDC                     _main:
   504                           	opt stack 26
   505                           
   506                           ;mainCode.c: 32: OSCCON = 0x70;
   507                           
   508                           ;incstack = 0
   509  000DDC  0E70               	movlw	112
   510  000DDE  6ED3               	movwf	4051,c	;volatile
   511                           
   512                           ;mainCode.c: 33: CMCON = 0xFF;
   513  000DE0  68B4               	setf	4020,c	;volatile
   514                           
   515                           ;mainCode.c: 34: CVRCONbits.CVREN = 0;
   516  000DE2  9EB5               	bcf	4021,7,c	;volatile
   517                           
   518                           ;mainCode.c: 35: ADCON1 = 0x0F;
   519  000DE4  0E0F               	movlw	15
   520  000DE6  6EC1               	movwf	4033,c	;volatile
   521                           
   522                           ;mainCode.c: 36: INTCON2bits.RBPU = 0;
   523  000DE8  9EF1               	bcf	intcon2,7,c	;volatile
   524                           
   525                           ;mainCode.c: 37: RCONbits.IPEN = 1;
   526  000DEA  8ED0               	bsf	4048,7,c	;volatile
   527                           
   528                           ;mainCode.c: 38: INTCONbits.GIEH = 1;
   529  000DEC  8EF2               	bsf	intcon,7,c	;volatile
   530                           
   531                           ;mainCode.c: 39: INTCONbits.GIEL = 1;
   532  000DEE  8CF2               	bsf	intcon,6,c	;volatile
   533                           
   534                           ;mainCode.c: 43: INTCON2bits.INTEDG0 = 1;
   535  000DF0  8CF1               	bsf	intcon2,6,c	;volatile
   536                           
   537                           ;mainCode.c: 44: INTCONbits.INT0IE = 1;
   538  000DF2  88F2               	bsf	intcon,4,c	;volatile
   539                           
   540                           ;mainCode.c: 47: INTCON3bits.INT1IP = 0;
   541  000DF4  9CF0               	bcf	intcon3,6,c	;volatile
   542                           
   543                           ;mainCode.c: 48: INTCON2bits.INTEDG1 = 1;
   544  000DF6  8AF1               	bsf	intcon2,5,c	;volatile
   545                           
   546                           ;mainCode.c: 49: INTCON3bits.INT1IE=1;
   547  000DF8  86F0               	bsf	intcon3,3,c	;volatile
   548                           
   549                           ;mainCode.c: 51: unsigned char key;
   550                           ;mainCode.c: 52: PORTA = 0x00;
   551  000DFA  0E00               	movlw	0
   552  000DFC  6E80               	movwf	3968,c	;volatile
   553                           
   554                           ;mainCode.c: 53: PORTB = 0x00;
   555  000DFE  0E00               	movlw	0
   556  000E00  6E81               	movwf	3969,c	;volatile
   557                           
   558                           ;mainCode.c: 54: PORTC = 0x00;
   559  000E02  0E00               	movlw	0
   560  000E04  6E82               	movwf	3970,c	;volatile
   561                           
   562                           ;mainCode.c: 55: PORTD = 0x00;
   563  000E06  0E00               	movlw	0
   564  000E08  6E83               	movwf	3971,c	;volatile
   565                           
   566                           ;mainCode.c: 56: PORTE = 0x00;
   567  000E0A  0E00               	movlw	0
   568  000E0C  6E84               	movwf	3972,c	;volatile
   569                           
   570                           ;mainCode.c: 57: LATA = 0x00;
   571  000E0E  0E00               	movlw	0
   572  000E10  6E89               	movwf	3977,c	;volatile
   573                           
   574                           ;mainCode.c: 58: LATB = 0x00;
   575  000E12  0E00               	movlw	0
   576  000E14  6E8A               	movwf	3978,c	;volatile
   577                           
   578                           ;mainCode.c: 59: LATC = 0x00;
   579  000E16  0E00               	movlw	0
   580  000E18  6E8B               	movwf	3979,c	;volatile
   581                           
   582                           ;mainCode.c: 60: LATD = 0x00;
   583  000E1A  0E00               	movlw	0
   584  000E1C  6E8C               	movwf	3980,c	;volatile
   585                           
   586                           ;mainCode.c: 61: LATE = 0x00;
   587  000E1E  0E00               	movlw	0
   588  000E20  6E8D               	movwf	3981,c	;volatile
   589                           
   590                           ;mainCode.c: 62: TRISA = 0x00;
   591  000E22  0E00               	movlw	0
   592  000E24  6E92               	movwf	3986,c	;volatile
   593                           
   594                           ;mainCode.c: 63: TRISB = 0x07;
   595  000E26  0E07               	movlw	7
   596  000E28  6E93               	movwf	3987,c	;volatile
   597                           
   598                           ;mainCode.c: 64: TRISC = 0xF0;
   599  000E2A  0EF0               	movlw	240
   600  000E2C  6E94               	movwf	3988,c	;volatile
   601                           
   602                           ;mainCode.c: 65: TRISD = 0x00;
   603  000E2E  0E00               	movlw	0
   604  000E30  6E95               	movwf	3989,c	;volatile
   605                           
   606                           ;mainCode.c: 66: TRISE = 0x00;
   607  000E32  0E00               	movlw	0
   608  000E34  6E96               	movwf	3990,c	;volatile
   609                           
   610                           ;mainCode.c: 68: setup_LCD();
   611  000E36  EC39  F009         	call	_setup_LCD	;wreg free
   612                           
   613                           ;mainCode.c: 69: pwmInit();
   614  000E3A  ECFA  F009         	call	_pwmInit	;wreg free
   615  000E3E                     l1535:
   616                           
   617                           ;mainCode.c: 72: if(readPassword(0x20) != 'A' &&
   618                           ;mainCode.c: 73: readPassword(0x20) != 'B' &&
   619                           ;mainCode.c: 74: readPassword(0x20) != 'C' &&
   620                           ;mainCode.c: 75: readPassword(0x20) != 'D')
   621  000E3E  0E20               	movlw	32
   622  000E40  EC0C  F00A         	call	_readPassword
   623  000E44  0A41               	xorlw	65
   624  000E46  B4D8               	btfsc	status,2,c
   625  000E48  D015               	goto	l1545
   626  000E4A  0E20               	movlw	32
   627  000E4C  EC0C  F00A         	call	_readPassword
   628  000E50  0A42               	xorlw	66
   629  000E52  B4D8               	btfsc	status,2,c
   630  000E54  D00F               	goto	l1545
   631  000E56  0E20               	movlw	32
   632  000E58  EC0C  F00A         	call	_readPassword
   633  000E5C  0A43               	xorlw	67
   634  000E5E  B4D8               	btfsc	status,2,c
   635  000E60  D009               	goto	l1545
   636  000E62  0E20               	movlw	32
   637  000E64  EC0C  F00A         	call	_readPassword
   638  000E68  0A44               	xorlw	68
   639  000E6A  B4D8               	btfsc	status,2,c
   640  000E6C  D003               	goto	l1545
   641                           
   642                           ;mainCode.c: 76: {
   643                           ;mainCode.c: 77: profile();
   644  000E6E  ECFA  F008         	call	_profile	;wreg free
   645                           
   646                           ;mainCode.c: 78: }else{
   647  000E72  D7E5               	goto	l1535
   648  000E74                     l1545:
   649                           
   650                           ;mainCode.c: 79: ready_LCD();
   651  000E74  ECB6  F009         	call	_ready_LCD	;wreg free
   652                           
   653                           ;mainCode.c: 80: display_string_LCD("Enter Password");
   654  000E78  0E71               	movlw	low STR_1
   655  000E7A  6E25               	movwf	display_string_LCD@data,c
   656  000E7C  0E0D               	movlw	high STR_1
   657  000E7E  6E26               	movwf	display_string_LCD@data+1,c
   658  000E80  EC7A  F009         	call	_display_string_LCD	;wreg free
   659                           
   660                           ;mainCode.c: 81: alarm();
   661  000E84  EC15  F00A         	call	_alarm	;wreg free
   662                           
   663                           ;mainCode.c: 82: if(checkPassword() != 1){
   664  000E88  EC5E  F009         	call	_checkPassword	;wreg free
   665  000E8C  06E8               	decf	wreg,f,c
   666  000E8E  B4D8               	btfsc	status,2,c
   667  000E90  D00B               	goto	l88
   668                           
   669                           ;mainCode.c: 83: clear_LCD();
   670  000E92  EC2F  F00A         	call	_clear_LCD	;wreg free
   671                           
   672                           ;mainCode.c: 84: ready_LCD();
   673  000E96  ECB6  F009         	call	_ready_LCD	;wreg free
   674                           
   675                           ;mainCode.c: 85: display_string_LCD("Wrong Password");
   676  000E9A  0E62               	movlw	low STR_2
   677  000E9C  6E25               	movwf	display_string_LCD@data,c
   678  000E9E  0E0D               	movlw	high STR_2
   679  000EA0  6E26               	movwf	display_string_LCD@data+1,c
   680  000EA2  EC7A  F009         	call	_display_string_LCD	;wreg free
   681                           
   682                           ;mainCode.c: 86: }else{
   683  000EA6  D7CB               	goto	l1535
   684  000EA8                     l88:
   685                           
   686                           ;mainCode.c: 88: PORTAbits.RA0 = 0;
   687  000EA8  9080               	bcf	3968,0,c	;volatile
   688                           
   689                           ;mainCode.c: 89: PORTEbits.RE1 = 0;
   690  000EAA  9284               	bcf	3972,1,c	;volatile
   691                           
   692                           ;mainCode.c: 90: clear_LCD();
   693  000EAC  EC2F  F00A         	call	_clear_LCD	;wreg free
   694                           
   695                           ;mainCode.c: 91: ready_LCD();
   696  000EB0  ECB6  F009         	call	_ready_LCD	;wreg free
   697                           
   698                           ;mainCode.c: 92: display_string_LCD("Alarm Deactiv");
   699  000EB4  0EAA               	movlw	low STR_3
   700  000EB6  6E25               	movwf	display_string_LCD@data,c
   701  000EB8  0E0D               	movlw	high STR_3
   702  000EBA  6E26               	movwf	display_string_LCD@data+1,c
   703  000EBC  EC7A  F009         	call	_display_string_LCD	;wreg free
   704                           
   705                           ;mainCode.c: 93: _delay((unsigned long)((1500)*(8000000/4000.0)));
   706  000EC0  0E10               	movlw	16
   707  000EC2  6E2C               	movwf	(??_main+1)& (0+255),c
   708  000EC4  0E39               	movlw	57
   709  000EC6  6E2B               	movwf	??_main& (0+255),c
   710  000EC8  0E0E               	movlw	14
   711  000ECA                     u607:
   712  000ECA  2EE8               	decfsz	wreg,f,c
   713  000ECC  D7FE               	bra	u607
   714  000ECE  2E2B               	decfsz	??_main& (0+255),f,c
   715  000ED0  D7FC               	bra	u607
   716  000ED2  2E2C               	decfsz	(??_main+1)& (0+255),f,c
   717  000ED4  D7FA               	bra	u607
   718                           
   719                           ;mainCode.c: 94: clear_LCD();
   720  000ED6  EC2F  F00A         	call	_clear_LCD	;wreg free
   721                           
   722                           ;mainCode.c: 95: ready_LCD();
   723  000EDA  ECB6  F009         	call	_ready_LCD	;wreg free
   724                           
   725                           ;mainCode.c: 96: display_string_LCD("Welcome User ");
   726  000EDE  0E9C               	movlw	low STR_4
   727  000EE0  6E25               	movwf	display_string_LCD@data,c
   728  000EE2  0E0D               	movlw	high STR_4
   729  000EE4  6E26               	movwf	display_string_LCD@data+1,c
   730  000EE6  EC7A  F009         	call	_display_string_LCD	;wreg free
   731                           
   732                           ;mainCode.c: 97: display_LCD(readPassword(0x20));
   733  000EEA  0E20               	movlw	32
   734  000EEC  EC0C  F00A         	call	_readPassword
   735  000EF0  ECC4  F009         	call	_display_LCD
   736                           
   737                           ;mainCode.c: 98: second_line_LCD();
   738  000EF4  EC1E  F00A         	call	_second_line_LCD	;wreg free
   739                           
   740                           ;mainCode.c: 99: welcome();
   741  000EF8  ECF1  F009         	call	_welcome	;wreg free
   742                           
   743                           ;mainCode.c: 100: menu();
   744  000EFC  EC0A  F008         	call	_menu	;wreg free
   745                           
   746                           ;mainCode.c: 101: if(flag == 1){
   747  000F00  042D               	decf	_flag,w,c
   748  000F02  B4D8               	btfsc	status,2,c
   749  000F04  EF62  F000         	goto	start
   750  000F08  D7CF               	goto	l88
   751  000F0A                     __end_of_main:
   752                           	opt stack 0
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           intcon	equ	0xFF2
   756                           intcon2	equ	0xFF1
   757                           intcon3	equ	0xFF0
   758                           wreg	equ	0xFE8
   759                           status	equ	0xFD8
   760                           
   761 ;; *************** function _welcome *****************
   762 ;; Defined at:
   763 ;;		line 16 in file "menu.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    4
   784 ;; This function calls:
   785 ;;		_display_string_LCD
   786 ;;		_ready_LCD
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text1
   793  0013E2                     __ptext1:
   794                           	opt stack 0
   795  0013E2                     _welcome:
   796                           	opt stack 26
   797                           
   798                           ;menu.c: 17: ready_LCD();
   799                           
   800                           ;incstack = 0
   801  0013E2  ECB6  F009         	call	_ready_LCD	;wreg free
   802                           
   803                           ;menu.c: 18: display_string_LCD("1.Door 2.LogOut");
   804  0013E6  0E52               	movlw	low STR_5
   805  0013E8  6E25               	movwf	display_string_LCD@data,c
   806  0013EA  0E0D               	movlw	high STR_5
   807  0013EC  6E26               	movwf	display_string_LCD@data+1,c
   808  0013EE  EC7A  F009         	call	_display_string_LCD	;wreg free
   809  0013F2  0012               	return		;funcret
   810  0013F4                     __end_of_welcome:
   811                           	opt stack 0
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           intcon	equ	0xFF2
   815                           intcon2	equ	0xFF1
   816                           intcon3	equ	0xFF0
   817                           wreg	equ	0xFE8
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _setup_LCD *****************
   821 ;; Defined at:
   822 ;;		line 28 in file "lcdCon.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    3
   843 ;; This function calls:
   844 ;;		_command_LCD
   845 ;;		_ready_LCD
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text2
   852  001272                     __ptext2:
   853                           	opt stack 0
   854  001272                     _setup_LCD:
   855                           	opt stack 27
   856                           
   857                           ;lcdCon.c: 29: PORTAbits.RA3 = 0;
   858                           
   859                           ;incstack = 0
   860  001272  9680               	bcf	3968,3,c	;volatile
   861                           
   862                           ;lcdCon.c: 30: _delay((unsigned long)((250)*(8000000/4000.0)));
   863  001274  0E03               	movlw	3
   864  001276  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   865  001278  0E8A               	movlw	138
   866  00127A  6E25               	movwf	??_setup_LCD& (0+255),c
   867  00127C  0E56               	movlw	86
   868  00127E                     u617:
   869  00127E  2EE8               	decfsz	wreg,f,c
   870  001280  D7FE               	bra	u617
   871  001282  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   872  001284  D7FC               	bra	u617
   873  001286  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   874  001288  D7FA               	bra	u617
   875                           
   876                           ;lcdCon.c: 31: command_LCD(0x38);
   877  00128A  0E38               	movlw	56
   878  00128C  ECD0  F009         	call	_command_LCD
   879                           
   880                           ;lcdCon.c: 32: _delay((unsigned long)((250)*(8000000/4000.0)));
   881  001290  0E03               	movlw	3
   882  001292  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   883  001294  0E8A               	movlw	138
   884  001296  6E25               	movwf	??_setup_LCD& (0+255),c
   885  001298  0E56               	movlw	86
   886  00129A                     u627:
   887  00129A  2EE8               	decfsz	wreg,f,c
   888  00129C  D7FE               	bra	u627
   889  00129E  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   890  0012A0  D7FC               	bra	u627
   891  0012A2  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   892  0012A4  D7FA               	bra	u627
   893                           
   894                           ;lcdCon.c: 33: command_LCD(0x0F);
   895  0012A6  0E0F               	movlw	15
   896  0012A8  ECD0  F009         	call	_command_LCD
   897                           
   898                           ;lcdCon.c: 34: ready_LCD();
   899  0012AC  ECB6  F009         	call	_ready_LCD	;wreg free
   900                           
   901                           ;lcdCon.c: 35: command_LCD(0x01);
   902  0012B0  0E01               	movlw	1
   903  0012B2  ECD0  F009         	call	_command_LCD
   904                           
   905                           ;lcdCon.c: 36: ready_LCD();
   906  0012B6  ECB6  F009         	call	_ready_LCD	;wreg free
   907  0012BA  0012               	return		;funcret
   908  0012BC                     __end_of_setup_LCD:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           intcon	equ	0xFF2
   913                           intcon2	equ	0xFF1
   914                           intcon3	equ	0xFF0
   915                           wreg	equ	0xFE8
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _pwmInit *****************
   919 ;; Defined at:
   920 ;;		line 12 in file "status.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    2
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text3
   949  0013F4                     __ptext3:
   950                           	opt stack 0
   951  0013F4                     _pwmInit:
   952                           	opt stack 28
   953                           
   954                           ;status.c: 16: PR2 = 0x9B;
   955                           
   956                           ;incstack = 0
   957  0013F4  0E9B               	movlw	155
   958  0013F6  6ECB               	movwf	4043,c	;volatile
   959                           
   960                           ;status.c: 17: CCPR1L = 0x2F;
   961  0013F8  0E2F               	movlw	47
   962  0013FA  6EBE               	movwf	4030,c	;volatile
   963                           
   964                           ;status.c: 18: T2CON = 0x07;
   965  0013FC  0E07               	movlw	7
   966  0013FE  6ECA               	movwf	4042,c	;volatile
   967                           
   968                           ;status.c: 19: CCP1CON = 0x3C;
   969  001400  0E3C               	movlw	60
   970  001402  6EBD               	movwf	4029,c	;volatile
   971  001404  0012               	return		;funcret
   972  001406                     __end_of_pwmInit:
   973                           	opt stack 0
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           intcon	equ	0xFF2
   977                           intcon2	equ	0xFF1
   978                           intcon3	equ	0xFF0
   979                           wreg	equ	0xFE8
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _profile *****************
   983 ;; Defined at:
   984 ;;		line 48 in file "profile.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  i               2   40[COMRAM] unsigned int 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1002 ;;Total ram usage:        2 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    4
  1005 ;; This function calls:
  1006 ;;		_clear_LCD
  1007 ;;		_display_string_LCD
  1008 ;;		_first_line_LCD
  1009 ;;		_obtainedKey
  1010 ;;		_ready_LCD
  1011 ;;		_second_line_LCD
  1012 ;;		_writePassword
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text4
  1019  0011F4                     __ptext4:
  1020                           	opt stack 0
  1021  0011F4                     _profile:
  1022                           	opt stack 26
  1023                           
  1024                           ;profile.c: 49: unsigned int i = 0;
  1025                           
  1026                           ;incstack = 0
  1027  0011F4  0E00               	movlw	0
  1028  0011F6  6E2A               	movwf	profile@i+1,c
  1029  0011F8  0E00               	movlw	0
  1030  0011FA  6E29               	movwf	profile@i,c
  1031                           
  1032                           ;profile.c: 50: ready_LCD();
  1033  0011FC  ECB6  F009         	call	_ready_LCD	;wreg free
  1034                           
  1035                           ;profile.c: 51: display_string_LCD("Which letter do");
  1036  001200  0E22               	movlw	low STR_13
  1037  001202  6E25               	movwf	display_string_LCD@data,c
  1038  001204  0E0D               	movlw	high STR_13
  1039  001206  6E26               	movwf	display_string_LCD@data+1,c
  1040  001208  EC7A  F009         	call	_display_string_LCD	;wreg free
  1041                           
  1042                           ;profile.c: 52: second_line_LCD();
  1043  00120C  EC1E  F00A         	call	_second_line_LCD	;wreg free
  1044                           
  1045                           ;profile.c: 53: display_string_LCD("U Prefer A B C D");
  1046  001210  0E01               	movlw	low STR_14
  1047  001212  6E25               	movwf	display_string_LCD@data,c
  1048  001214  0E0D               	movlw	high STR_14
  1049  001216  6E26               	movwf	display_string_LCD@data+1,c
  1050  001218  EC7A  F009         	call	_display_string_LCD	;wreg free
  1051                           
  1052                           ;profile.c: 54: writePassword(obtainedKey(),0x20);
  1053  00121C  0E20               	movlw	32
  1054  00121E  6E27               	movwf	writePassword@address,c
  1055  001220  ECA6  F009         	call	_obtainedKey	;wreg free
  1056  001224  EC03  F00A         	call	_writePassword
  1057                           
  1058                           ;profile.c: 55: clear_LCD();
  1059  001228  EC2F  F00A         	call	_clear_LCD	;wreg free
  1060                           
  1061                           ;profile.c: 56: first_line_LCD();
  1062  00122C  EC24  F00A         	call	_first_line_LCD	;wreg free
  1063                           
  1064                           ;profile.c: 57: display_string_LCD("Introduce Psswd");
  1065  001230  0E12               	movlw	low STR_15
  1066  001232  6E25               	movwf	display_string_LCD@data,c
  1067  001234  0E0D               	movlw	high STR_15
  1068  001236  6E26               	movwf	display_string_LCD@data+1,c
  1069  001238  EC7A  F009         	call	_display_string_LCD	;wreg free
  1070                           
  1071                           ;profile.c: 58: second_line_LCD();
  1072  00123C  EC1E  F00A         	call	_second_line_LCD	;wreg free
  1073                           
  1074                           ;profile.c: 59: display_string_LCD("Only two keys");
  1075  001240  0E80               	movlw	low STR_16
  1076  001242  6E25               	movwf	display_string_LCD@data,c
  1077  001244  0E0D               	movlw	high STR_16
  1078  001246  6E26               	movwf	display_string_LCD@data+1,c
  1079  001248  EC7A  F009         	call	_display_string_LCD	;wreg free
  1080  00124C                     l1417:
  1081                           
  1082                           ;profile.c: 61: writePassword(obtainedKey(),0x00+1);
  1083  00124C  0E01               	movlw	1
  1084  00124E  6E27               	movwf	writePassword@address,c
  1085  001250  ECA6  F009         	call	_obtainedKey	;wreg free
  1086  001254  EC03  F00A         	call	_writePassword
  1087                           
  1088                           ;profile.c: 62: i++;
  1089  001258  4A29               	infsnz	profile@i,f,c
  1090  00125A  2A2A               	incf	profile@i+1,f,c
  1091                           
  1092                           ;profile.c: 63: }while(i<2);
  1093  00125C  502A               	movf	profile@i+1,w,c
  1094  00125E  E104               	bnz	l1423
  1095  001260  0E02               	movlw	2
  1096  001262  5C29               	subwf	profile@i,w,c
  1097  001264  A0D8               	btfss	status,0,c
  1098  001266  D7F2               	goto	l1417
  1099  001268                     l1423:
  1100                           
  1101                           ;profile.c: 64: clear_LCD();
  1102  001268  EC2F  F00A         	call	_clear_LCD	;wreg free
  1103                           
  1104                           ;profile.c: 65: first_line_LCD();
  1105  00126C  EC24  F00A         	call	_first_line_LCD	;wreg free
  1106  001270  0012               	return		;funcret
  1107  001272                     __end_of_profile:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           intcon	equ	0xFF2
  1112                           intcon2	equ	0xFF1
  1113                           intcon3	equ	0xFF0
  1114                           wreg	equ	0xFE8
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _writePassword *****************
  1118 ;; Defined at:
  1119 ;;		line 45 in file "profile.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  value           1    wreg     unsigned char 
  1122 ;;  address         1   38[COMRAM] unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  value           1   39[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1134 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    3
  1141 ;; This function calls:
  1142 ;;		_eeprom_w
  1143 ;; This function is called by:
  1144 ;;		_profile
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text5
  1149  001406                     __ptext5:
  1150                           	opt stack 0
  1151  001406                     _writePassword:
  1152                           	opt stack 26
  1153                           
  1154                           ;incstack = 0
  1155                           ;writePassword@value stored from wreg
  1156  001406  6E28               	movwf	writePassword@value,c
  1157                           
  1158                           ;profile.c: 46: eeprom_w(address, value);
  1159  001408  C027  F024         	movff	writePassword@address,eeprom_w@address
  1160  00140C  6A25               	clrf	eeprom_w@address+1,c
  1161  00140E  C028  F026         	movff	writePassword@value,eeprom_w@value
  1162  001412  EC92  F009         	call	_eeprom_w	;wreg free
  1163  001416  0012               	return		;funcret
  1164  001418                     __end_of_writePassword:
  1165                           	opt stack 0
  1166                           tblptru	equ	0xFF8
  1167                           tblptrh	equ	0xFF7
  1168                           intcon	equ	0xFF2
  1169                           intcon2	equ	0xFF1
  1170                           intcon3	equ	0xFF0
  1171                           wreg	equ	0xFE8
  1172                           status	equ	0xFD8
  1173                           
  1174 ;; *************** function _eeprom_w *****************
  1175 ;; Defined at:
  1176 ;;		line 24 in file "profile.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  address         2   35[COMRAM] unsigned int 
  1179 ;;  value           1   37[COMRAM] unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;Total ram usage:        3 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_writePassword
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text6
  1206  001324                     __ptext6:
  1207                           	opt stack 0
  1208  001324                     _eeprom_w:
  1209                           	opt stack 26
  1210                           
  1211                           ;profile.c: 25: EEADR = address;
  1212                           
  1213                           ;incstack = 0
  1214  001324  C024  FFA9         	movff	eeprom_w@address,4009	;volatile
  1215                           
  1216                           ;profile.c: 26: EEADRH = address >> 8;
  1217  001328  5025               	movf	eeprom_w@address+1,w,c
  1218  00132A  6EAA               	movwf	4010,c	;volatile
  1219                           
  1220                           ;profile.c: 27: EEDATA = value;
  1221  00132C  C026  FFA8         	movff	eeprom_w@value,4008	;volatile
  1222                           
  1223                           ;profile.c: 28: EECON1bits.EEPGD =0;
  1224  001330  9EA6               	bcf	4006,7,c	;volatile
  1225                           
  1226                           ;profile.c: 29: EECON1bits.CFGS = 0;
  1227  001332  9CA6               	bcf	4006,6,c	;volatile
  1228                           
  1229                           ;profile.c: 30: EECON1bits.WREN = 1;
  1230  001334  84A6               	bsf	4006,2,c	;volatile
  1231                           
  1232                           ;profile.c: 31: INTCONbits.GIE = 0 ;
  1233  001336  9EF2               	bcf	intcon,7,c	;volatile
  1234                           
  1235                           ;profile.c: 32: EECON2 = 0x55;
  1236  001338  0E55               	movlw	85
  1237  00133A  6EA7               	movwf	4007,c	;volatile
  1238                           
  1239                           ;profile.c: 33: EECON2 = 0xAA;
  1240  00133C  0EAA               	movlw	170
  1241  00133E  6EA7               	movwf	4007,c	;volatile
  1242                           
  1243                           ;profile.c: 34: EECON1bits.WR = 1;
  1244  001340  82A6               	bsf	4006,1,c	;volatile
  1245  001342                     l216:
  1246  001342  B2A6               	btfsc	4006,1,c	;volatile
  1247  001344  D7FE               	goto	l216
  1248                           
  1249                           ;profile.c: 36: INTCONbits.GIE = 1;
  1250  001346  8EF2               	bsf	intcon,7,c	;volatile
  1251                           
  1252                           ;profile.c: 37: EECON1bits.WREN = 0;
  1253  001348  94A6               	bcf	4006,2,c	;volatile
  1254  00134A  0012               	return		;funcret
  1255  00134C                     __end_of_eeprom_w:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           intcon	equ	0xFF2
  1260                           intcon2	equ	0xFF1
  1261                           intcon3	equ	0xFF0
  1262                           wreg	equ	0xFE8
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _menu *****************
  1266 ;; Defined at:
  1267 ;;		line 21 in file "menu.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		_clear_LCD
  1290 ;;		_close
  1291 ;;		_display_LCD
  1292 ;;		_display_string_LCD
  1293 ;;		_first_line_LCD
  1294 ;;		_obtainedKey
  1295 ;;		_open
  1296 ;;		_readPassword
  1297 ;;		_ready_LCD
  1298 ;;		_second_line_LCD
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text7
  1305  001014                     __ptext7:
  1306                           	opt stack 0
  1307  001014                     _menu:
  1308                           	opt stack 26
  1309  001014                     
  1310                           ;menu.c: 23: flag = 0;
  1311  001014  0E00               	movlw	0
  1312  001016  6E2D               	movwf	_flag,c
  1313                           
  1314                           ;menu.c: 24: if(obtainedKey() == '1'){
  1315  001018  ECA6  F009         	call	_obtainedKey	;wreg free
  1316  00101C  0A31               	xorlw	49
  1317  00101E  A4D8               	btfss	status,2,c
  1318  001020  D04C               	goto	l1489
  1319                           
  1320                           ;menu.c: 25: clear_LCD();
  1321  001022  EC2F  F00A         	call	_clear_LCD	;wreg free
  1322                           
  1323                           ;menu.c: 26: first_line_LCD();
  1324  001026  EC24  F00A         	call	_first_line_LCD	;wreg free
  1325                           
  1326                           ;menu.c: 27: display_string_LCD("1.Unlock 2.Lock");
  1327  00102A  0E42               	movlw	low STR_6
  1328  00102C  6E25               	movwf	display_string_LCD@data,c
  1329  00102E  0E0D               	movlw	high STR_6
  1330  001030  6E26               	movwf	display_string_LCD@data+1,c
  1331  001032  EC7A  F009         	call	_display_string_LCD	;wreg free
  1332                           
  1333                           ;menu.c: 28: if(obtainedKey() == '1'){
  1334  001036  ECA6  F009         	call	_obtainedKey	;wreg free
  1335  00103A  0A31               	xorlw	49
  1336  00103C  A4D8               	btfss	status,2,c
  1337  00103E  D01C               	goto	l1475
  1338                           
  1339                           ;menu.c: 29: open();
  1340  001040  EC33  F00A         	call	_open	;wreg free
  1341                           
  1342                           ;menu.c: 30: clear_LCD();
  1343  001044  EC2F  F00A         	call	_clear_LCD	;wreg free
  1344                           
  1345                           ;menu.c: 31: first_line_LCD();
  1346  001048  EC24  F00A         	call	_first_line_LCD	;wreg free
  1347                           
  1348                           ;menu.c: 32: display_string_LCD("-Door Unlocked-");
  1349  00104C  0E32               	movlw	low STR_7
  1350  00104E  6E25               	movwf	display_string_LCD@data,c
  1351  001050  0E0D               	movlw	high STR_7
  1352  001052  6E26               	movwf	display_string_LCD@data+1,c
  1353  001054  EC7A  F009         	call	_display_string_LCD	;wreg free
  1354                           
  1355                           ;menu.c: 33: second_line_LCD();
  1356  001058  EC1E  F00A         	call	_second_line_LCD	;wreg free
  1357                           
  1358                           ;menu.c: 34: display_string_LCD("A to GoBack");
  1359  00105C  0EC5               	movlw	low STR_8
  1360  00105E  6E25               	movwf	display_string_LCD@data,c
  1361  001060  0E0D               	movlw	high STR_8
  1362  001062  6E26               	movwf	display_string_LCD@data+1,c
  1363  001064  EC7A  F009         	call	_display_string_LCD	;wreg free
  1364                           
  1365                           ;menu.c: 35: if(obtainedKey() == 'A'){
  1366  001068  ECA6  F009         	call	_obtainedKey	;wreg free
  1367  00106C  0A41               	xorlw	65
  1368  00106E  A4D8               	btfss	status,2,c
  1369  001070  D7D1               	goto	l1453
  1370                           
  1371                           ;menu.c: 36: clear_LCD();
  1372  001072  EC2F  F00A         	call	_clear_LCD	;wreg free
  1373                           
  1374                           ;menu.c: 37: return;
  1375  001076  0012               	return	
  1376  001078                     l1475:
  1377  001078  ECA6  F009         	call	_obtainedKey	;wreg free
  1378  00107C  0A32               	xorlw	50
  1379  00107E  A4D8               	btfss	status,2,c
  1380  001080  D7C9               	goto	l1453
  1381                           
  1382                           ;menu.c: 40: close();
  1383  001082  EC36  F00A         	call	_close	;wreg free
  1384                           
  1385                           ;menu.c: 41: clear_LCD();
  1386  001086  EC2F  F00A         	call	_clear_LCD	;wreg free
  1387                           
  1388                           ;menu.c: 42: first_line_LCD();
  1389  00108A  EC24  F00A         	call	_first_line_LCD	;wreg free
  1390                           
  1391                           ;menu.c: 43: display_string_LCD("-Door Locked-");
  1392  00108E  0E8E               	movlw	low STR_9
  1393  001090  6E25               	movwf	display_string_LCD@data,c
  1394  001092  0E0D               	movlw	high STR_9
  1395  001094  6E26               	movwf	display_string_LCD@data+1,c
  1396  001096  EC7A  F009         	call	_display_string_LCD	;wreg free
  1397                           
  1398                           ;menu.c: 44: second_line_LCD();
  1399  00109A  EC1E  F00A         	call	_second_line_LCD	;wreg free
  1400                           
  1401                           ;menu.c: 45: display_string_LCD("A to GoBack");
  1402  00109E  0EC5               	movlw	low STR_8
  1403  0010A0  6E25               	movwf	display_string_LCD@data,c
  1404  0010A2  0E0D               	movlw	high STR_8
  1405  0010A4  6E26               	movwf	display_string_LCD@data+1,c
  1406  0010A6  EC7A  F009         	call	_display_string_LCD	;wreg free
  1407                           
  1408                           ;menu.c: 46: if(obtainedKey() == 'A'){
  1409  0010AA  ECA6  F009         	call	_obtainedKey	;wreg free
  1410  0010AE  0A41               	xorlw	65
  1411  0010B0  A4D8               	btfss	status,2,c
  1412  0010B2  D7B0               	goto	l1453
  1413                           
  1414                           ;menu.c: 47: clear_LCD();
  1415  0010B4  EC2F  F00A         	call	_clear_LCD	;wreg free
  1416                           
  1417                           ;menu.c: 48: return;
  1418  0010B8  0012               	return	
  1419  0010BA                     l1489:
  1420  0010BA  ECA6  F009         	call	_obtainedKey	;wreg free
  1421  0010BE  0A32               	xorlw	50
  1422  0010C0  A4D8               	btfss	status,2,c
  1423  0010C2  D7A8               	goto	l1453
  1424                           
  1425                           ;menu.c: 52: clear_LCD();
  1426  0010C4  EC2F  F00A         	call	_clear_LCD	;wreg free
  1427                           
  1428                           ;menu.c: 53: ready_LCD();
  1429  0010C8  ECB6  F009         	call	_ready_LCD	;wreg free
  1430                           
  1431                           ;menu.c: 54: display_string_LCD("Bye user ");
  1432  0010CC  0ED1               	movlw	low STR_11
  1433  0010CE  6E25               	movwf	display_string_LCD@data,c
  1434  0010D0  0E0D               	movlw	high STR_11
  1435  0010D2  6E26               	movwf	display_string_LCD@data+1,c
  1436  0010D4  EC7A  F009         	call	_display_string_LCD	;wreg free
  1437                           
  1438                           ;menu.c: 55: display_LCD(readPassword(0x20));
  1439  0010D8  0E20               	movlw	32
  1440  0010DA  EC0C  F00A         	call	_readPassword
  1441  0010DE  ECC4  F009         	call	_display_LCD
  1442                           
  1443                           ;menu.c: 56: second_line_LCD();
  1444  0010E2  EC1E  F00A         	call	_second_line_LCD	;wreg free
  1445                           
  1446                           ;menu.c: 57: display_string_LCD("Alarm Active");
  1447  0010E6  0EB8               	movlw	low STR_12
  1448  0010E8  6E25               	movwf	display_string_LCD@data,c
  1449  0010EA  0E0D               	movlw	high STR_12
  1450  0010EC  6E26               	movwf	display_string_LCD@data+1,c
  1451  0010EE  EC7A  F009         	call	_display_string_LCD	;wreg free
  1452                           
  1453                           ;menu.c: 58: _delay((unsigned long)((2500)*(8000000/4000.0)));
  1454  0010F2  0E1A               	movlw	26
  1455  0010F4  6E29               	movwf	(??_menu+1)& (0+255),c
  1456  0010F6  0E5E               	movlw	94
  1457  0010F8  6E28               	movwf	??_menu& (0+255),c
  1458  0010FA  0E6E               	movlw	110
  1459  0010FC                     u637:
  1460  0010FC  2EE8               	decfsz	wreg,f,c
  1461  0010FE  D7FE               	bra	u637
  1462  001100  2E28               	decfsz	??_menu& (0+255),f,c
  1463  001102  D7FC               	bra	u637
  1464  001104  2E29               	decfsz	(??_menu+1)& (0+255),f,c
  1465  001106  D7FA               	bra	u637
  1466  001108  D000               	nop2	
  1467                           
  1468                           ;menu.c: 59: flag = 1;
  1469  00110A  0E01               	movlw	1
  1470  00110C  6E2D               	movwf	_flag,c
  1471                           
  1472                           ;menu.c: 60: return;
  1473  00110E  0012               	return	
  1474  001110                     __end_of_menu:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           intcon	equ	0xFF2
  1479                           intcon2	equ	0xFF1
  1480                           intcon3	equ	0xFF0
  1481                           wreg	equ	0xFE8
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _second_line_LCD *****************
  1485 ;; Defined at:
  1486 ;;		line 80 in file "lcdCon.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    3
  1507 ;; This function calls:
  1508 ;;		_command_LCD
  1509 ;;		_ready_LCD
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_menu
  1513 ;;		_profile
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text8
  1518  00143C                     __ptext8:
  1519                           	opt stack 0
  1520  00143C                     _second_line_LCD:
  1521                           	opt stack 27
  1522                           
  1523                           ;lcdCon.c: 81: command_LCD(0xC0);
  1524                           
  1525                           ;incstack = 0
  1526  00143C  0EC0               	movlw	192
  1527  00143E  ECD0  F009         	call	_command_LCD
  1528                           
  1529                           ;lcdCon.c: 82: ready_LCD();
  1530  001442  ECB6  F009         	call	_ready_LCD	;wreg free
  1531  001446  0012               	return		;funcret
  1532  001448                     __end_of_second_line_LCD:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           intcon	equ	0xFF2
  1537                           intcon2	equ	0xFF1
  1538                           intcon3	equ	0xFF0
  1539                           wreg	equ	0xFE8
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _open *****************
  1543 ;; Defined at:
  1544 ;;		line 22 in file "status.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_menu
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text9
  1573  001466                     __ptext9:
  1574                           	opt stack 0
  1575  001466                     _open:
  1576                           	opt stack 27
  1577                           
  1578                           ;status.c: 23: CCPR1L = 0x5F;
  1579                           
  1580                           ;incstack = 0
  1581  001466  0E5F               	movlw	95
  1582  001468  6EBE               	movwf	4030,c	;volatile
  1583  00146A  0012               	return		;funcret
  1584  00146C                     __end_of_open:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           intcon	equ	0xFF2
  1589                           intcon2	equ	0xFF1
  1590                           intcon3	equ	0xFF0
  1591                           wreg	equ	0xFE8
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _first_line_LCD *****************
  1595 ;; Defined at:
  1596 ;;		line 76 in file "lcdCon.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    3
  1617 ;; This function calls:
  1618 ;;		_command_LCD
  1619 ;;		_ready_LCD
  1620 ;; This function is called by:
  1621 ;;		_menu
  1622 ;;		_profile
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text10
  1627  001448                     __ptext10:
  1628                           	opt stack 0
  1629  001448                     _first_line_LCD:
  1630                           	opt stack 26
  1631                           
  1632                           ;lcdCon.c: 77: command_LCD(0x20);
  1633                           
  1634                           ;incstack = 0
  1635  001448  0E20               	movlw	32
  1636  00144A  ECD0  F009         	call	_command_LCD
  1637                           
  1638                           ;lcdCon.c: 78: ready_LCD();
  1639  00144E  ECB6  F009         	call	_ready_LCD	;wreg free
  1640  001452  0012               	return		;funcret
  1641  001454                     __end_of_first_line_LCD:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           intcon	equ	0xFF2
  1646                           intcon2	equ	0xFF1
  1647                           intcon3	equ	0xFF0
  1648                           wreg	equ	0xFE8
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _display_string_LCD *****************
  1652 ;; Defined at:
  1653 ;;		line 69 in file "lcdCon.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  data            2   36[COMRAM] PTR unsigned char 
  1656 ;;		 -> STR_16(14), STR_15(16), STR_14(17), STR_13(16), 
  1657 ;;		 -> STR_12(13), STR_11(10), STR_10(12), STR_9(14), 
  1658 ;;		 -> STR_8(12), STR_7(16), STR_6(16), STR_5(16), 
  1659 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		_display_LCD
  1680 ;;		_ready_LCD
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;;		_welcome
  1684 ;;		_menu
  1685 ;;		_profile
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text11
  1690  0012F4                     __ptext11:
  1691                           	opt stack 0
  1692  0012F4                     _display_string_LCD:
  1693                           	opt stack 26
  1694                           
  1695                           ;lcdCon.c: 70: PORTAbits.RA1 = 1;
  1696                           
  1697                           ;incstack = 0
  1698  0012F4  8280               	bsf	3968,1,c	;volatile
  1699                           
  1700                           ;lcdCon.c: 71: while(*data){
  1701  0012F6  D00A               	goto	l1389
  1702  0012F8                     l1385:
  1703                           
  1704                           ;lcdCon.c: 72: display_LCD(*data++);
  1705  0012F8  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1706  0012FC  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1707  001300                     	if	0	;tblptru may be non-zero
  1708  001300                     	endif
  1709  001300                     	if	0	;tblptru may be non-zero
  1710  001300                     	endif
  1711  001300  0008               	tblrd		*
  1712  001302  50F5               	movf	tablat,w,c
  1713  001304  ECC4  F009         	call	_display_LCD
  1714  001308  4A25               	infsnz	display_string_LCD@data,f,c
  1715  00130A  2A26               	incf	display_string_LCD@data+1,f,c
  1716  00130C                     l1389:
  1717  00130C  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1718  001310  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1719  001314                     	if	0	;tblptru may be non-zero
  1720  001314                     	endif
  1721  001314                     	if	0	;tblptru may be non-zero
  1722  001314                     	endif
  1723  001314  0008               	tblrd		*
  1724  001316  50F5               	movf	tablat,w,c
  1725  001318  0900               	iorlw	0
  1726  00131A  A4D8               	btfss	status,2,c
  1727  00131C  D7ED               	goto	l1385
  1728                           
  1729                           ;lcdCon.c: 73: }
  1730                           ;lcdCon.c: 74: ready_LCD();
  1731  00131E  ECB6  F009         	call	_ready_LCD	;wreg free
  1732  001322  0012               	return		;funcret
  1733  001324                     __end_of_display_string_LCD:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           intcon	equ	0xFF2
  1740                           intcon2	equ	0xFF1
  1741                           intcon3	equ	0xFF0
  1742                           wreg	equ	0xFE8
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _ready_LCD *****************
  1746 ;; Defined at:
  1747 ;;		line 48 in file "lcdCon.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    2
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;;		_setup_LCD
  1773 ;;		_display_string_LCD
  1774 ;;		_first_line_LCD
  1775 ;;		_second_line_LCD
  1776 ;;		_welcome
  1777 ;;		_menu
  1778 ;;		_profile
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text12
  1783  00136C                     __ptext12:
  1784                           	opt stack 0
  1785  00136C                     _ready_LCD:
  1786                           	opt stack 27
  1787                           
  1788                           ;lcdCon.c: 49: TRISD = 0xFF;
  1789                           
  1790                           ;incstack = 0
  1791  00136C  6895               	setf	3989,c	;volatile
  1792                           
  1793                           ;lcdCon.c: 50: PORTAbits.RA1 = 0;
  1794  00136E  9280               	bcf	3968,1,c	;volatile
  1795                           
  1796                           ;lcdCon.c: 51: PORTAbits.RA2 = 1;
  1797  001370  8480               	bsf	3968,2,c	;volatile
  1798  001372                     l123:
  1799                           
  1800                           ;lcdCon.c: 53: PORTAbits.RA3 = 1;
  1801  001372  8680               	bsf	3968,3,c	;volatile
  1802                           
  1803                           ;lcdCon.c: 54: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1804  001374  0EB4               	movlw	180
  1805  001376                     u647:
  1806  001376  D000               	nop2	
  1807  001378  2EE8               	decfsz	wreg,f,c
  1808  00137A  D7FD               	bra	u647
  1809                           
  1810                           ;lcdCon.c: 55: PORTAbits.RA3 = 0;
  1811  00137C  9680               	bcf	3968,3,c	;volatile
  1812                           
  1813                           ;lcdCon.c: 56: }while(PORTDbits.RD7 == 1);
  1814  00137E  BE83               	btfsc	3971,7,c	;volatile
  1815  001380  D7F8               	goto	l123
  1816                           
  1817                           ;lcdCon.c: 57: TRISD = 0x00;
  1818  001382  0E00               	movlw	0
  1819  001384  6E95               	movwf	3989,c	;volatile
  1820  001386  0012               	return		;funcret
  1821  001388                     __end_of_ready_LCD:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           intcon	equ	0xFF2
  1828                           intcon2	equ	0xFF1
  1829                           intcon3	equ	0xFF0
  1830                           wreg	equ	0xFE8
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function _display_LCD *****************
  1834 ;; Defined at:
  1835 ;;		line 60 in file "lcdCon.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  data            1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  data            1   35[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;;		_display_string_LCD
  1861 ;;		_menu
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text13
  1866  001388                     __ptext13:
  1867                           	opt stack 0
  1868  001388                     _display_LCD:
  1869                           	opt stack 26
  1870                           
  1871                           ;incstack = 0
  1872                           ;display_LCD@data stored from wreg
  1873  001388  6E24               	movwf	display_LCD@data,c
  1874                           
  1875                           ;lcdCon.c: 61: PORTD = data;
  1876  00138A  C024  FF83         	movff	display_LCD@data,3971	;volatile
  1877                           
  1878                           ;lcdCon.c: 62: PORTAbits.RA1 = 1;
  1879  00138E  8280               	bsf	3968,1,c	;volatile
  1880                           
  1881                           ;lcdCon.c: 63: PORTAbits.RA2 = 0;
  1882  001390  9480               	bcf	3968,2,c	;volatile
  1883                           
  1884                           ;lcdCon.c: 64: PORTAbits.RA3 = 1;
  1885  001392  8680               	bsf	3968,3,c	;volatile
  1886                           
  1887                           ;lcdCon.c: 65: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1888  001394  0EB4               	movlw	180
  1889  001396                     u657:
  1890  001396  D000               	nop2	
  1891  001398  2EE8               	decfsz	wreg,f,c
  1892  00139A  D7FD               	bra	u657
  1893                           
  1894                           ;lcdCon.c: 66: PORTAbits.RA3 = 0;
  1895  00139C  9680               	bcf	3968,3,c	;volatile
  1896  00139E  0012               	return		;funcret
  1897  0013A0                     __end_of_display_LCD:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           intcon	equ	0xFF2
  1904                           intcon2	equ	0xFF1
  1905                           intcon3	equ	0xFF0
  1906                           wreg	equ	0xFE8
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _close *****************
  1910 ;; Defined at:
  1911 ;;		line 25 in file "status.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    2
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_menu
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text14
  1940  00146C                     __ptext14:
  1941                           	opt stack 0
  1942  00146C                     _close:
  1943                           	opt stack 27
  1944                           
  1945                           ;status.c: 26: CCPR1L = 0x1F;
  1946                           
  1947                           ;incstack = 0
  1948  00146C  0E1F               	movlw	31
  1949  00146E  6EBE               	movwf	4030,c	;volatile
  1950  001470  0012               	return		;funcret
  1951  001472                     __end_of_close:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           intcon	equ	0xFF2
  1958                           intcon2	equ	0xFF1
  1959                           intcon3	equ	0xFF0
  1960                           wreg	equ	0xFE8
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _clear_LCD *****************
  1964 ;; Defined at:
  1965 ;;		line 84 in file "lcdCon.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		_command_LCD
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_menu
  1991 ;;		_profile
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text15
  1996  00145E                     __ptext15:
  1997                           	opt stack 0
  1998  00145E                     _clear_LCD:
  1999                           	opt stack 26
  2000                           
  2001                           ;lcdCon.c: 85: command_LCD(0x01);
  2002                           
  2003                           ;incstack = 0
  2004  00145E  0E01               	movlw	1
  2005  001460  ECD0  F009         	call	_command_LCD
  2006  001464  0012               	return		;funcret
  2007  001466                     __end_of_clear_LCD:
  2008                           	opt stack 0
  2009                           tblptru	equ	0xFF8
  2010                           tblptrh	equ	0xFF7
  2011                           tblptrl	equ	0xFF6
  2012                           tablat	equ	0xFF5
  2013                           intcon	equ	0xFF2
  2014                           intcon2	equ	0xFF1
  2015                           intcon3	equ	0xFF0
  2016                           wreg	equ	0xFE8
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _command_LCD *****************
  2020 ;; Defined at:
  2021 ;;		line 39 in file "lcdCon.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  x               1    wreg     unsigned char 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  x               1   35[COMRAM] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;Total ram usage:        1 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_setup_LCD
  2046 ;;		_first_line_LCD
  2047 ;;		_second_line_LCD
  2048 ;;		_clear_LCD
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text16
  2053  0013A0                     __ptext16:
  2054                           	opt stack 0
  2055  0013A0                     _command_LCD:
  2056                           	opt stack 27
  2057                           
  2058                           ;incstack = 0
  2059                           ;command_LCD@x stored from wreg
  2060  0013A0  6E24               	movwf	command_LCD@x,c
  2061                           
  2062                           ;lcdCon.c: 40: PORTD = x;
  2063  0013A2  C024  FF83         	movff	command_LCD@x,3971	;volatile
  2064                           
  2065                           ;lcdCon.c: 41: PORTAbits.RA1 = 0;
  2066  0013A6  9280               	bcf	3968,1,c	;volatile
  2067                           
  2068                           ;lcdCon.c: 42: PORTAbits.RA2 = 0;
  2069  0013A8  9480               	bcf	3968,2,c	;volatile
  2070                           
  2071                           ;lcdCon.c: 43: PORTAbits.RA3 = 1;
  2072  0013AA  8680               	bsf	3968,3,c	;volatile
  2073                           
  2074                           ;lcdCon.c: 44: _delay((unsigned long)((.45)*(8000000/4000.0)));
  2075  0013AC  0EB4               	movlw	180
  2076  0013AE                     u667:
  2077  0013AE  D000               	nop2	
  2078  0013B0  2EE8               	decfsz	wreg,f,c
  2079  0013B2  D7FD               	bra	u667
  2080                           
  2081                           ;lcdCon.c: 45: PORTAbits.RA3 = 0;
  2082  0013B4  9680               	bcf	3968,3,c	;volatile
  2083  0013B6  0012               	return		;funcret
  2084  0013B8                     __end_of_command_LCD:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           intcon	equ	0xFF2
  2091                           intcon2	equ	0xFF1
  2092                           intcon3	equ	0xFF0
  2093                           wreg	equ	0xFE8
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _checkPassword *****************
  2097 ;; Defined at:
  2098 ;;		line 67 in file "profile.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  pass            1   39[COMRAM] unsigned char 
  2103 ;;  i               1   40[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      unsigned char 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		_obtainedKey
  2122 ;;		_readPassword
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text17
  2129  0012BC                     __ptext17:
  2130                           	opt stack 0
  2131  0012BC                     _checkPassword:
  2132                           	opt stack 26
  2133                           
  2134                           ;profile.c: 68: unsigned char i = 0;
  2135                           
  2136                           ;incstack = 0
  2137  0012BC  0E00               	movlw	0
  2138  0012BE  6E29               	movwf	checkPassword@i,c
  2139  0012C0                     l1427:
  2140                           
  2141                           ;profile.c: 71: unsigned char pass = readPassword(0x00+1);
  2142  0012C0  0E01               	movlw	1
  2143  0012C2  EC0C  F00A         	call	_readPassword
  2144  0012C6  6E28               	movwf	checkPassword@pass,c
  2145                           
  2146                           ;profile.c: 72: if(obtainedKey() == pass){
  2147  0012C8  ECA6  F009         	call	_obtainedKey	;wreg free
  2148  0012CC  1828               	xorwf	checkPassword@pass,w,c
  2149  0012CE  A4D8               	btfss	status,2,c
  2150  0012D0  D002               	goto	l1437
  2151                           
  2152                           ;profile.c: 73: return 1;
  2153  0012D2  0E01               	movlw	1
  2154  0012D4  0012               	return	
  2155  0012D6                     l1437:
  2156  0012D6  0E02               	movlw	2
  2157  0012D8  6029               	cpfslt	checkPassword@i,c
  2158  0012DA  D007               	goto	l1445
  2159  0012DC  ECA6  F009         	call	_obtainedKey	;wreg free
  2160  0012E0  1828               	xorwf	checkPassword@pass,w,c
  2161  0012E2  B4D8               	btfsc	status,2,c
  2162  0012E4  D002               	goto	l1445
  2163                           
  2164                           ;profile.c: 75: return 0;
  2165  0012E6  0E00               	movlw	0
  2166  0012E8  0012               	return	
  2167  0012EA                     l1445:
  2168                           
  2169                           ;profile.c: 76: }
  2170                           ;profile.c: 77: i++;
  2171  0012EA  2A29               	incf	checkPassword@i,f,c
  2172                           
  2173                           ;profile.c: 78: }while(i<2);
  2174  0012EC  0E01               	movlw	1
  2175  0012EE  6429               	cpfsgt	checkPassword@i,c
  2176  0012F0  D7E7               	goto	l1427
  2177  0012F2  0012               	return	
  2178  0012F4                     __end_of_checkPassword:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           intcon	equ	0xFF2
  2185                           intcon2	equ	0xFF1
  2186                           intcon3	equ	0xFF0
  2187                           wreg	equ	0xFE8
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _readPassword *****************
  2191 ;; Defined at:
  2192 ;;		line 40 in file "profile.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  address         1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  address         1   37[COMRAM] unsigned char 
  2197 ;;  value           1   38[COMRAM] volatile unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      unsigned char 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;Total ram usage:        2 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    3
  2214 ;; This function calls:
  2215 ;;		_eeprom_r
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;;		_menu
  2219 ;;		_checkPassword
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text18
  2224  001418                     __ptext18:
  2225                           	opt stack 0
  2226  001418                     _readPassword:
  2227                           	opt stack 27
  2228                           
  2229                           ;incstack = 0
  2230                           ;readPassword@address stored from wreg
  2231  001418  6E26               	movwf	readPassword@address,c
  2232                           
  2233                           ;profile.c: 41: volatile unsigned char value;
  2234                           ;profile.c: 42: value = eeprom_r(address);
  2235  00141A  C026  F024         	movff	readPassword@address,eeprom_r@address
  2236  00141E  6A25               	clrf	eeprom_r@address+1,c
  2237  001420  ECDC  F009         	call	_eeprom_r	;wreg free
  2238  001424  6E27               	movwf	readPassword@value,c	;volatile
  2239                           
  2240                           ;profile.c: 43: return value;
  2241  001426  5027               	movf	readPassword@value,w,c	;volatile
  2242  001428  0012               	return	
  2243  00142A                     __end_of_readPassword:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           intcon	equ	0xFF2
  2250                           intcon2	equ	0xFF1
  2251                           intcon3	equ	0xFF0
  2252                           wreg	equ	0xFE8
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _eeprom_r *****************
  2256 ;; Defined at:
  2257 ;;		line 14 in file "profile.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  address         2   35[COMRAM] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      unsigned char 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;Total ram usage:        2 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_readPassword
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text19
  2286  0013B8                     __ptext19:
  2287                           	opt stack 0
  2288  0013B8                     _eeprom_r:
  2289                           	opt stack 27
  2290                           
  2291                           ;profile.c: 15: EEADR = address;
  2292                           
  2293                           ;incstack = 0
  2294  0013B8  C024  FFA9         	movff	eeprom_r@address,4009	;volatile
  2295                           
  2296                           ;profile.c: 16: EEADRH = address >> 8;
  2297  0013BC  5025               	movf	eeprom_r@address+1,w,c
  2298  0013BE  6EAA               	movwf	4010,c	;volatile
  2299                           
  2300                           ;profile.c: 17: EECON1bits.CFGS = 0;
  2301  0013C0  9CA6               	bcf	4006,6,c	;volatile
  2302                           
  2303                           ;profile.c: 18: EECON1bits.EEPGD = 0;
  2304  0013C2  9EA6               	bcf	4006,7,c	;volatile
  2305                           
  2306                           ;profile.c: 19: EECON1bits.RD = 1;
  2307  0013C4  80A6               	bsf	4006,0,c	;volatile
  2308                           
  2309                           ;profile.c: 20: __nop();
  2310  0013C6  F000               	nop	
  2311                           
  2312                           ;profile.c: 21: __nop();
  2313  0013C8  F000               	nop	
  2314                           
  2315                           ;profile.c: 22: return EEDATA;
  2316  0013CA  50A8               	movf	4008,w,c	;volatile
  2317  0013CC  0012               	return	
  2318  0013CE                     __end_of_eeprom_r:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           intcon	equ	0xFF2
  2325                           intcon2	equ	0xFF1
  2326                           intcon3	equ	0xFF0
  2327                           wreg	equ	0xFE8
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _alarm *****************
  2331 ;; Defined at:
  2332 ;;		line 12 in file "alarm.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    4
  2353 ;; This function calls:
  2354 ;;		_obtainedKey
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text20
  2361  00142A                     __ptext20:
  2362                           	opt stack 0
  2363  00142A                     _alarm:
  2364                           	opt stack 26
  2365  00142A                     l304:
  2366                           
  2367                           ;alarm.c: 14: PORTEbits.RE1 = 1;
  2368  00142A  8284               	bsf	3972,1,c	;volatile
  2369                           
  2370                           ;alarm.c: 16: if(PORTBbits.RB2 != 0){
  2371  00142C  B481               	btfsc	3969,2,c	;volatile
  2372                           
  2373                           ;alarm.c: 17: PORTAbits.RA0 = 1;
  2374  00142E  8080               	bsf	3968,0,c	;volatile
  2375                           
  2376                           ;alarm.c: 18: }
  2377                           ;alarm.c: 19: if(obtainedKey()){
  2378  001430  ECA6  F009         	call	_obtainedKey	;wreg free
  2379  001434  0900               	iorlw	0
  2380  001436  A4D8               	btfss	status,2,c
  2381  001438  0012               	return	
  2382  00143A  D7F7               	goto	l304
  2383  00143C                     __end_of_alarm:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           intcon	equ	0xFF2
  2390                           intcon2	equ	0xFF1
  2391                           intcon3	equ	0xFF0
  2392                           wreg	equ	0xFE8
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _obtainedKey *****************
  2396 ;; Defined at:
  2397 ;;		line 73 in file "keypadCon.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  key_presiona    1   36[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    3
  2418 ;; This function calls:
  2419 ;;		_getKey
  2420 ;;		_ground
  2421 ;; This function is called by:
  2422 ;;		_menu
  2423 ;;		_profile
  2424 ;;		_checkPassword
  2425 ;;		_alarm
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text21
  2430  00134C                     __ptext21:
  2431                           	opt stack 0
  2432  00134C                     _obtainedKey:
  2433                           	opt stack 26
  2434                           
  2435                           ;keypadCon.c: 74: ground();
  2436                           
  2437                           ;incstack = 0
  2438  00134C  EC2A  F00A         	call	_ground	;wreg free
  2439                           
  2440                           ;keypadCon.c: 75: unsigned char key_presionada = 0xFF;
  2441  001350  6825               	setf	obtainedKey@key_presionada,c
  2442  001352                     l1103:
  2443                           
  2444                           ;keypadCon.c: 77: key_presionada = getKey();
  2445  001352  EC88  F008         	call	_getKey	;wreg free
  2446  001356  6E25               	movwf	obtainedKey@key_presionada,c
  2447                           
  2448                           ;keypadCon.c: 78: }
  2449                           ;keypadCon.c: 79: while(key_presionada == 0xFF);
  2450  001358  2825               	incf	obtainedKey@key_presionada,w,c
  2451  00135A  B4D8               	btfsc	status,2,c
  2452  00135C  D7FA               	goto	l1103
  2453  00135E                     l1107:
  2454  00135E  EC88  F008         	call	_getKey	;wreg free
  2455  001362  0AFF               	xorlw	255
  2456  001364  A4D8               	btfss	status,2,c
  2457  001366  D7FB               	goto	l1107
  2458                           
  2459                           ;keypadCon.c: 82: return key_presionada;
  2460  001368  5025               	movf	obtainedKey@key_presionada,w,c
  2461  00136A  0012               	return	
  2462  00136C                     __end_of_obtainedKey:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           intcon	equ	0xFF2
  2469                           intcon2	equ	0xFF1
  2470                           intcon3	equ	0xFF0
  2471                           wreg	equ	0xFE8
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _ground *****************
  2475 ;; Defined at:
  2476 ;;		line 66 in file "keypadCon.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		None
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    2
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_obtainedKey
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text22
  2505  001454                     __ptext22:
  2506                           	opt stack 0
  2507  001454                     _ground:
  2508                           	opt stack 26
  2509                           
  2510                           ;keypadCon.c: 67: LATCbits.LATC0 = 0;
  2511                           
  2512                           ;incstack = 0
  2513  001454  908B               	bcf	3979,0,c	;volatile
  2514                           
  2515                           ;keypadCon.c: 68: LATCbits.LATC1 = 0;
  2516  001456  928B               	bcf	3979,1,c	;volatile
  2517                           
  2518                           ;keypadCon.c: 69: LATEbits.LATE2 = 0;
  2519  001458  948D               	bcf	3981,2,c	;volatile
  2520                           
  2521                           ;keypadCon.c: 70: LATCbits.LATC3 = 0;
  2522  00145A  968B               	bcf	3979,3,c	;volatile
  2523  00145C  0012               	return		;funcret
  2524  00145E                     __end_of_ground:
  2525                           	opt stack 0
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           intcon	equ	0xFF2
  2531                           intcon2	equ	0xFF1
  2532                           intcon3	equ	0xFF0
  2533                           wreg	equ	0xFE8
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _getKey *****************
  2537 ;; Defined at:
  2538 ;;		line 21 in file "keypadCon.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    2
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_obtainedKey
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text23
  2567  001110                     __ptext23:
  2568                           	opt stack 0
  2569  001110                     _getKey:
  2570                           	opt stack 26
  2571                           
  2572                           ;keypadCon.c: 23: LATCbits.LATC0 = 0;
  2573                           
  2574                           ;incstack = 0
  2575  001110  908B               	bcf	3979,0,c	;volatile
  2576                           
  2577                           ;keypadCon.c: 24: LATCbits.LATC1 = 1;
  2578  001112  828B               	bsf	3979,1,c	;volatile
  2579                           
  2580                           ;keypadCon.c: 25: LATEbits.LATE2 = 1;
  2581  001114  848D               	bsf	3981,2,c	;volatile
  2582                           
  2583                           ;keypadCon.c: 26: LATCbits.LATC3 = 1;
  2584  001116  868B               	bsf	3979,3,c	;volatile
  2585                           
  2586                           ;keypadCon.c: 27: _delay((unsigned long)((25)*(8000000/4000.0)));
  2587  001118  0E41               	movlw	65
  2588  00111A  6E24               	movwf	??_getKey& (0+255),c
  2589  00111C  0EEE               	movlw	238
  2590  00111E                     u677:
  2591  00111E  2EE8               	decfsz	wreg,f,c
  2592  001120  D7FE               	bra	u677
  2593  001122  2E24               	decfsz	??_getKey& (0+255),f,c
  2594  001124  D7FC               	bra	u677
  2595  001126  D000               	nop2	
  2596                           
  2597                           ;keypadCon.c: 28: if(PORTCbits.RC4 == 0) return '1';
  2598  001128  B882               	btfsc	3970,4,c	;volatile
  2599  00112A  D002               	goto	l266
  2600  00112C  0E31               	movlw	49
  2601  00112E  0012               	return	
  2602  001130                     l266:
  2603                           
  2604                           ;keypadCon.c: 29: if(PORTCbits.RC5 == 0) return '2';
  2605  001130  BA82               	btfsc	3970,5,c	;volatile
  2606  001132  D002               	goto	l268
  2607  001134  0E32               	movlw	50
  2608  001136  0012               	return	
  2609  001138                     l268:
  2610                           
  2611                           ;keypadCon.c: 30: if(PORTCbits.RC6 == 0) return '3';
  2612  001138  BC82               	btfsc	3970,6,c	;volatile
  2613  00113A  D002               	goto	l269
  2614  00113C  0E33               	movlw	51
  2615  00113E  0012               	return	
  2616  001140                     l269:
  2617                           
  2618                           ;keypadCon.c: 31: if(PORTCbits.RC7 == 0) return 'A';
  2619  001140  BE82               	btfsc	3970,7,c	;volatile
  2620  001142  D002               	goto	l270
  2621  001144  0E41               	movlw	65
  2622  001146  0012               	return	
  2623  001148                     l270:
  2624                           
  2625                           ;keypadCon.c: 33: LATCbits.LATC0 = 1;
  2626  001148  808B               	bsf	3979,0,c	;volatile
  2627                           
  2628                           ;keypadCon.c: 34: LATCbits.LATC1 = 0;
  2629  00114A  928B               	bcf	3979,1,c	;volatile
  2630                           
  2631                           ;keypadCon.c: 35: LATEbits.LATE2 = 1;
  2632  00114C  848D               	bsf	3981,2,c	;volatile
  2633                           
  2634                           ;keypadCon.c: 36: LATCbits.LATC3 = 1;
  2635  00114E  868B               	bsf	3979,3,c	;volatile
  2636                           
  2637                           ;keypadCon.c: 37: _delay((unsigned long)((25)*(8000000/4000.0)));
  2638  001150  0E41               	movlw	65
  2639  001152  6E24               	movwf	??_getKey& (0+255),c
  2640  001154  0EEE               	movlw	238
  2641  001156                     u687:
  2642  001156  2EE8               	decfsz	wreg,f,c
  2643  001158  D7FE               	bra	u687
  2644  00115A  2E24               	decfsz	??_getKey& (0+255),f,c
  2645  00115C  D7FC               	bra	u687
  2646  00115E  D000               	nop2	
  2647                           
  2648                           ;keypadCon.c: 38: if(PORTCbits.RC4 == 0) return '4';
  2649  001160  B882               	btfsc	3970,4,c	;volatile
  2650  001162  D002               	goto	l271
  2651  001164  0E34               	movlw	52
  2652  001166  0012               	return	
  2653  001168                     l271:
  2654                           
  2655                           ;keypadCon.c: 39: if(PORTCbits.RC5 == 0) return '5';
  2656  001168  BA82               	btfsc	3970,5,c	;volatile
  2657  00116A  D002               	goto	l272
  2658  00116C  0E35               	movlw	53
  2659  00116E  0012               	return	
  2660  001170                     l272:
  2661                           
  2662                           ;keypadCon.c: 40: if(PORTCbits.RC6 == 0) return '6';
  2663  001170  BC82               	btfsc	3970,6,c	;volatile
  2664  001172  D002               	goto	l273
  2665  001174  0E36               	movlw	54
  2666  001176  0012               	return	
  2667  001178                     l273:
  2668                           
  2669                           ;keypadCon.c: 41: if(PORTCbits.RC7 == 0) return 'B';
  2670  001178  BE82               	btfsc	3970,7,c	;volatile
  2671  00117A  D002               	goto	l274
  2672  00117C  0E42               	movlw	66
  2673  00117E  0012               	return	
  2674  001180                     l274:
  2675                           
  2676                           ;keypadCon.c: 43: LATCbits.LATC0 = 1;
  2677  001180  808B               	bsf	3979,0,c	;volatile
  2678                           
  2679                           ;keypadCon.c: 44: LATCbits.LATC1 = 1;
  2680  001182  828B               	bsf	3979,1,c	;volatile
  2681                           
  2682                           ;keypadCon.c: 45: LATEbits.LATE2 = 0;
  2683  001184  948D               	bcf	3981,2,c	;volatile
  2684                           
  2685                           ;keypadCon.c: 46: LATCbits.LATC3 = 1;
  2686  001186  868B               	bsf	3979,3,c	;volatile
  2687                           
  2688                           ;keypadCon.c: 47: _delay((unsigned long)((25)*(8000000/4000.0)));
  2689  001188  0E41               	movlw	65
  2690  00118A  6E24               	movwf	??_getKey& (0+255),c
  2691  00118C  0EEE               	movlw	238
  2692  00118E                     u697:
  2693  00118E  2EE8               	decfsz	wreg,f,c
  2694  001190  D7FE               	bra	u697
  2695  001192  2E24               	decfsz	??_getKey& (0+255),f,c
  2696  001194  D7FC               	bra	u697
  2697  001196  D000               	nop2	
  2698                           
  2699                           ;keypadCon.c: 48: if(PORTCbits.RC4 == 0) return '7';
  2700  001198  B882               	btfsc	3970,4,c	;volatile
  2701  00119A  D002               	goto	l275
  2702  00119C  0E37               	movlw	55
  2703  00119E  0012               	return	
  2704  0011A0                     l275:
  2705                           
  2706                           ;keypadCon.c: 49: if(PORTCbits.RC5 == 0) return '8';
  2707  0011A0  BA82               	btfsc	3970,5,c	;volatile
  2708  0011A2  D002               	goto	l276
  2709  0011A4  0E38               	movlw	56
  2710  0011A6  0012               	return	
  2711  0011A8                     l276:
  2712                           
  2713                           ;keypadCon.c: 50: if(PORTCbits.RC6 == 0) return '9';
  2714  0011A8  BC82               	btfsc	3970,6,c	;volatile
  2715  0011AA  D002               	goto	l277
  2716  0011AC  0E39               	movlw	57
  2717  0011AE  0012               	return	
  2718  0011B0                     l277:
  2719                           
  2720                           ;keypadCon.c: 51: if(PORTCbits.RC7 == 0) return 'C';
  2721  0011B0  BE82               	btfsc	3970,7,c	;volatile
  2722  0011B2  D002               	goto	l278
  2723  0011B4  0E43               	movlw	67
  2724  0011B6  0012               	return	
  2725  0011B8                     l278:
  2726                           
  2727                           ;keypadCon.c: 53: LATCbits.LATC0 = 1;
  2728  0011B8  808B               	bsf	3979,0,c	;volatile
  2729                           
  2730                           ;keypadCon.c: 54: LATCbits.LATC1 = 1;
  2731  0011BA  828B               	bsf	3979,1,c	;volatile
  2732                           
  2733                           ;keypadCon.c: 55: LATEbits.LATE2 = 1;
  2734  0011BC  848D               	bsf	3981,2,c	;volatile
  2735                           
  2736                           ;keypadCon.c: 56: LATCbits.LATC3 = 0;
  2737  0011BE  968B               	bcf	3979,3,c	;volatile
  2738                           
  2739                           ;keypadCon.c: 57: _delay((unsigned long)((25)*(8000000/4000.0)));
  2740  0011C0  0E41               	movlw	65
  2741  0011C2  6E24               	movwf	??_getKey& (0+255),c
  2742  0011C4  0EEE               	movlw	238
  2743  0011C6                     u707:
  2744  0011C6  2EE8               	decfsz	wreg,f,c
  2745  0011C8  D7FE               	bra	u707
  2746  0011CA  2E24               	decfsz	??_getKey& (0+255),f,c
  2747  0011CC  D7FC               	bra	u707
  2748  0011CE  D000               	nop2	
  2749                           
  2750                           ;keypadCon.c: 58: if(PORTCbits.RC4 == 0) return '*';
  2751  0011D0  B882               	btfsc	3970,4,c	;volatile
  2752  0011D2  D002               	goto	l279
  2753  0011D4  0E2A               	movlw	42
  2754  0011D6  0012               	return	
  2755  0011D8                     l279:
  2756                           
  2757                           ;keypadCon.c: 59: if(PORTCbits.RC5 == 0) return '0';
  2758  0011D8  BA82               	btfsc	3970,5,c	;volatile
  2759  0011DA  D002               	goto	l280
  2760  0011DC  0E30               	movlw	48
  2761  0011DE  0012               	return	
  2762  0011E0                     l280:
  2763                           
  2764                           ;keypadCon.c: 60: if(PORTCbits.RC6 == 0) return '#';
  2765  0011E0  BC82               	btfsc	3970,6,c	;volatile
  2766  0011E2  D002               	goto	l281
  2767  0011E4  0E23               	movlw	35
  2768  0011E6  0012               	return	
  2769  0011E8                     l281:
  2770                           
  2771                           ;keypadCon.c: 61: if(PORTCbits.RC7 == 0) return 'D';
  2772  0011E8  BE82               	btfsc	3970,7,c	;volatile
  2773  0011EA  D002               	goto	l1071
  2774  0011EC  0E44               	movlw	68
  2775  0011EE  0012               	return	
  2776  0011F0                     l1071:
  2777                           
  2778                           ;keypadCon.c: 63: return 0xFF;
  2779  0011F0  0EFF               	movlw	255
  2780  0011F2  0012               	return	
  2781  0011F4                     __end_of_getKey:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           intcon	equ	0xFF2
  2788                           intcon2	equ	0xFF1
  2789                           intcon3	equ	0xFF0
  2790                           wreg	equ	0xFE8
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _luz *****************
  2794 ;; Defined at:
  2795 ;;		line 111 in file "mainCode.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:       19 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		Interrupt level 1
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	intcodelo
  2824  000018                     __pintcodelo:
  2825                           	opt stack 0
  2826  000018                     _luz:
  2827                           	opt stack 26
  2828                           
  2829                           ;incstack = 0
  2830  000018  802E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2831  00001A  CFD8 F013          	movff	status,??_luz+2
  2832  00001E  CFE8 F014          	movff	wreg,??_luz+3
  2833  000022  CFE0 F015          	movff	bsr,??_luz+4
  2834  000026  CFFA F016          	movff	pclath,??_luz+5
  2835  00002A  CFFB F017          	movff	pclatu,??_luz+6
  2836  00002E  CFE9 F018          	movff	fsr0l,??_luz+7
  2837  000032  CFEA F019          	movff	fsr0h,??_luz+8
  2838  000036  CFE1 F01A          	movff	fsr1l,??_luz+9
  2839  00003A  CFE2 F01B          	movff	fsr1h,??_luz+10
  2840  00003E  CFD9 F01C          	movff	fsr2l,??_luz+11
  2841  000042  CFDA F01D          	movff	fsr2h,??_luz+12
  2842  000046  CFF3 F01E          	movff	prodl,??_luz+13
  2843  00004A  CFF4 F01F          	movff	prodh,??_luz+14
  2844  00004E  CFF6 F020          	movff	tblptrl,??_luz+15
  2845  000052  CFF7 F021          	movff	tblptrh,??_luz+16
  2846  000056  CFF8 F022          	movff	tblptru,??_luz+17
  2847  00005A  CFF5 F023          	movff	tablat,??_luz+18
  2848                           
  2849                           ;mainCode.c: 112: INTCON3bits.INT1IF = 0;
  2850  00005E  90F0               	bcf	intcon3,0,c	;volatile
  2851                           
  2852                           ;mainCode.c: 114: PORTAbits.RA5=1;
  2853  000060  8A80               	bsf	3968,5,c	;volatile
  2854                           
  2855                           ;mainCode.c: 115: _delay((unsigned long)((3000)*(8000000/4000.0)));
  2856  000062  0E1F               	movlw	31
  2857  000064  6E12               	movwf	(??_luz+1)& (0+255),c
  2858  000066  0E71               	movlw	113
  2859  000068  6E11               	movwf	??_luz& (0+255),c
  2860  00006A  0E1E               	movlw	30
  2861  00006C                     i1u71_27:
  2862  00006C  2EE8               	decfsz	wreg,f,c
  2863  00006E  D7FE               	bra	i1u71_27
  2864  000070  2E11               	decfsz	??_luz& (0+255),f,c
  2865  000072  D7FC               	bra	i1u71_27
  2866  000074  2E12               	decfsz	(??_luz+1)& (0+255),f,c
  2867  000076  D7FA               	bra	i1u71_27
  2868  000078  D000               	nop2	
  2869                           
  2870                           ;mainCode.c: 116: PORTAbits.RA5=0;
  2871  00007A  9A80               	bcf	3968,5,c	;volatile
  2872                           
  2873                           ;mainCode.c: 118: return;
  2874  00007C  C023  FFF5         	movff	??_luz+18,tablat
  2875  000080  C022  FFF8         	movff	??_luz+17,tblptru
  2876  000084  C021  FFF7         	movff	??_luz+16,tblptrh
  2877  000088  C020  FFF6         	movff	??_luz+15,tblptrl
  2878  00008C  C01F  FFF4         	movff	??_luz+14,prodh
  2879  000090  C01E  FFF3         	movff	??_luz+13,prodl
  2880  000094  C01D  FFDA         	movff	??_luz+12,fsr2h
  2881  000098  C01C  FFD9         	movff	??_luz+11,fsr2l
  2882  00009C  C01B  FFE2         	movff	??_luz+10,fsr1h
  2883  0000A0  C01A  FFE1         	movff	??_luz+9,fsr1l
  2884  0000A4  C019  FFEA         	movff	??_luz+8,fsr0h
  2885  0000A8  C018  FFE9         	movff	??_luz+7,fsr0l
  2886  0000AC  C017  FFFB         	movff	??_luz+6,pclatu
  2887  0000B0  C016  FFFA         	movff	??_luz+5,pclath
  2888  0000B4  C015  FFE0         	movff	??_luz+4,bsr
  2889  0000B8  C014  FFE8         	movff	??_luz+3,wreg
  2890  0000BC  C013  FFD8         	movff	??_luz+2,status
  2891  0000C0  902E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2892  0000C2  0010               	retfie	
  2893  0000C4                     __end_of_luz:
  2894                           	opt stack 0
  2895                           pclatu	equ	0xFFB
  2896                           pclath	equ	0xFFA
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           intcon3	equ	0xFF0
  2906                           fsr0h	equ	0xFEA
  2907                           fsr0l	equ	0xFE9
  2908                           wreg	equ	0xFE8
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           bsr	equ	0xFE0
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _backup *****************
  2917 ;; Defined at:
  2918 ;;		line 120 in file "mainCode.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;Total ram usage:       16 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		Interrupt level 2
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	intcode
  2946  000008                     __pintcode:
  2947                           	opt stack 0
  2948  000008                     _backup:
  2949                           	opt stack 26
  2950                           
  2951                           ;incstack = 0
  2952  000008  822E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2953  00000A  ED85  F007         	call	int_func,f	;refresh shadow registers
  2954                           pclatu	equ	0xFFB
  2955                           pclath	equ	0xFFA
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon	equ	0xFF2
  2963                           intcon2	equ	0xFF1
  2964                           intcon3	equ	0xFF0
  2965                           fsr0h	equ	0xFEA
  2966                           fsr0l	equ	0xFE9
  2967                           wreg	equ	0xFE8
  2968                           fsr1h	equ	0xFE2
  2969                           fsr1l	equ	0xFE1
  2970                           bsr	equ	0xFE0
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975                           	psect	intcode_body
  2976  000F0A                     __pintcode_body:
  2977                           	opt stack 26
  2978  000F0A                     int_func:
  2979                           	opt stack 26
  2980  000F0A  0006               	pop		; remove dummy address from shadow register refresh
  2981  000F0C  CFFA F003          	movff	pclath,??_backup+2
  2982  000F10  CFFB F004          	movff	pclatu,??_backup+3
  2983  000F14  CFE9 F005          	movff	fsr0l,??_backup+4
  2984  000F18  CFEA F006          	movff	fsr0h,??_backup+5
  2985  000F1C  CFE1 F007          	movff	fsr1l,??_backup+6
  2986  000F20  CFE2 F008          	movff	fsr1h,??_backup+7
  2987  000F24  CFD9 F009          	movff	fsr2l,??_backup+8
  2988  000F28  CFDA F00A          	movff	fsr2h,??_backup+9
  2989  000F2C  CFF3 F00B          	movff	prodl,??_backup+10
  2990  000F30  CFF4 F00C          	movff	prodh,??_backup+11
  2991  000F34  CFF6 F00D          	movff	tblptrl,??_backup+12
  2992  000F38  CFF7 F00E          	movff	tblptrh,??_backup+13
  2993  000F3C  CFF8 F00F          	movff	tblptru,??_backup+14
  2994  000F40  CFF5 F010          	movff	tablat,??_backup+15
  2995                           
  2996                           ;mainCode.c: 121: INTCONbits.INT0IF = 0;
  2997  000F44  92F2               	bcf	intcon,1,c	;volatile
  2998                           
  2999                           ;mainCode.c: 122: PORTAbits.RA5=0;
  3000  000F46  9A80               	bcf	3968,5,c	;volatile
  3001                           
  3002                           ;mainCode.c: 124: PORTEbits.RE0=1;
  3003  000F48  8084               	bsf	3972,0,c	;volatile
  3004                           
  3005                           ;mainCode.c: 125: _delay((unsigned long)((500)*(8000000/4000.0)));
  3006  000F4A  0E06               	movlw	6
  3007  000F4C  6E02               	movwf	(??_backup+1)& (0+255),c
  3008  000F4E  0E13               	movlw	19
  3009  000F50  6E01               	movwf	??_backup& (0+255),c
  3010  000F52  0EAE               	movlw	174
  3011  000F54                     i2u72_47:
  3012  000F54  2EE8               	decfsz	wreg,f,c
  3013  000F56  D7FE               	bra	i2u72_47
  3014  000F58  2E01               	decfsz	??_backup& (0+255),f,c
  3015  000F5A  D7FC               	bra	i2u72_47
  3016  000F5C  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3017  000F5E  D7FA               	bra	i2u72_47
  3018                           
  3019                           ;mainCode.c: 126: PORTEbits.RE0=0;
  3020  000F60  9084               	bcf	3972,0,c	;volatile
  3021                           
  3022                           ;mainCode.c: 127: _delay((unsigned long)((500)*(8000000/4000.0)));
  3023  000F62  0E06               	movlw	6
  3024  000F64  6E02               	movwf	(??_backup+1)& (0+255),c
  3025  000F66  0E13               	movlw	19
  3026  000F68  6E01               	movwf	??_backup& (0+255),c
  3027  000F6A  0EAE               	movlw	174
  3028  000F6C                     i2u73_47:
  3029  000F6C  2EE8               	decfsz	wreg,f,c
  3030  000F6E  D7FE               	bra	i2u73_47
  3031  000F70  2E01               	decfsz	??_backup& (0+255),f,c
  3032  000F72  D7FC               	bra	i2u73_47
  3033  000F74  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3034  000F76  D7FA               	bra	i2u73_47
  3035                           
  3036                           ;mainCode.c: 128: PORTEbits.RE0=1;
  3037  000F78  8084               	bsf	3972,0,c	;volatile
  3038                           
  3039                           ;mainCode.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
  3040  000F7A  0E06               	movlw	6
  3041  000F7C  6E02               	movwf	(??_backup+1)& (0+255),c
  3042  000F7E  0E13               	movlw	19
  3043  000F80  6E01               	movwf	??_backup& (0+255),c
  3044  000F82  0EAE               	movlw	174
  3045  000F84                     i2u74_47:
  3046  000F84  2EE8               	decfsz	wreg,f,c
  3047  000F86  D7FE               	bra	i2u74_47
  3048  000F88  2E01               	decfsz	??_backup& (0+255),f,c
  3049  000F8A  D7FC               	bra	i2u74_47
  3050  000F8C  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3051  000F8E  D7FA               	bra	i2u74_47
  3052                           
  3053                           ;mainCode.c: 130: PORTEbits.RE0=0;
  3054  000F90  9084               	bcf	3972,0,c	;volatile
  3055                           
  3056                           ;mainCode.c: 131: _delay((unsigned long)((500)*(8000000/4000.0)));
  3057  000F92  0E06               	movlw	6
  3058  000F94  6E02               	movwf	(??_backup+1)& (0+255),c
  3059  000F96  0E13               	movlw	19
  3060  000F98  6E01               	movwf	??_backup& (0+255),c
  3061  000F9A  0EAE               	movlw	174
  3062  000F9C                     i2u75_47:
  3063  000F9C  2EE8               	decfsz	wreg,f,c
  3064  000F9E  D7FE               	bra	i2u75_47
  3065  000FA0  2E01               	decfsz	??_backup& (0+255),f,c
  3066  000FA2  D7FC               	bra	i2u75_47
  3067  000FA4  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3068  000FA6  D7FA               	bra	i2u75_47
  3069                           
  3070                           ;mainCode.c: 132: PORTEbits.RE0=1;
  3071  000FA8  8084               	bsf	3972,0,c	;volatile
  3072                           
  3073                           ;mainCode.c: 133: _delay((unsigned long)((500)*(8000000/4000.0)));
  3074  000FAA  0E06               	movlw	6
  3075  000FAC  6E02               	movwf	(??_backup+1)& (0+255),c
  3076  000FAE  0E13               	movlw	19
  3077  000FB0  6E01               	movwf	??_backup& (0+255),c
  3078  000FB2  0EAE               	movlw	174
  3079  000FB4                     i2u76_47:
  3080  000FB4  2EE8               	decfsz	wreg,f,c
  3081  000FB6  D7FE               	bra	i2u76_47
  3082  000FB8  2E01               	decfsz	??_backup& (0+255),f,c
  3083  000FBA  D7FC               	bra	i2u76_47
  3084  000FBC  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3085  000FBE  D7FA               	bra	i2u76_47
  3086                           
  3087                           ;mainCode.c: 134: PORTEbits.RE0=0;
  3088  000FC0  9084               	bcf	3972,0,c	;volatile
  3089                           
  3090                           ;mainCode.c: 135: _delay((unsigned long)((500)*(8000000/4000.0)));
  3091  000FC2  0E06               	movlw	6
  3092  000FC4  6E02               	movwf	(??_backup+1)& (0+255),c
  3093  000FC6  0E13               	movlw	19
  3094  000FC8  6E01               	movwf	??_backup& (0+255),c
  3095  000FCA  0EAE               	movlw	174
  3096  000FCC                     i2u77_47:
  3097  000FCC  2EE8               	decfsz	wreg,f,c
  3098  000FCE  D7FE               	bra	i2u77_47
  3099  000FD0  2E01               	decfsz	??_backup& (0+255),f,c
  3100  000FD2  D7FC               	bra	i2u77_47
  3101  000FD4  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3102  000FD6  D7FA               	bra	i2u77_47
  3103                           
  3104                           ;mainCode.c: 136: return;
  3105  000FD8  C010  FFF5         	movff	??_backup+15,tablat
  3106  000FDC  C00F  FFF8         	movff	??_backup+14,tblptru
  3107  000FE0  C00E  FFF7         	movff	??_backup+13,tblptrh
  3108  000FE4  C00D  FFF6         	movff	??_backup+12,tblptrl
  3109  000FE8  C00C  FFF4         	movff	??_backup+11,prodh
  3110  000FEC  C00B  FFF3         	movff	??_backup+10,prodl
  3111  000FF0  C00A  FFDA         	movff	??_backup+9,fsr2h
  3112  000FF4  C009  FFD9         	movff	??_backup+8,fsr2l
  3113  000FF8  C008  FFE2         	movff	??_backup+7,fsr1h
  3114  000FFC  C007  FFE1         	movff	??_backup+6,fsr1l
  3115  001000  C006  FFEA         	movff	??_backup+5,fsr0h
  3116  001004  C005  FFE9         	movff	??_backup+4,fsr0l
  3117  001008  C004  FFFB         	movff	??_backup+3,pclatu
  3118  00100C  C003  FFFA         	movff	??_backup+2,pclath
  3119  001010  922E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3120  001012  0011               	retfie		f
  3121  001014                     __end_of_backup:
  3122                           	opt stack 0
  3123                           pclatu	equ	0xFFB
  3124                           pclath	equ	0xFFA
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           intcon	equ	0xFF2
  3132                           intcon2	equ	0xFF1
  3133                           intcon3	equ	0xFF0
  3134                           fsr0h	equ	0xFEA
  3135                           fsr0l	equ	0xFE9
  3136                           wreg	equ	0xFE8
  3137                           fsr1h	equ	0xFE2
  3138                           fsr1l	equ	0xFE1
  3139                           bsr	equ	0xFE0
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           pclatu	equ	0xFFB
  3144                           pclath	equ	0xFFA
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           intcon2	equ	0xFF1
  3153                           intcon3	equ	0xFF0
  3154                           fsr0h	equ	0xFEA
  3155                           fsr0l	equ	0xFE9
  3156                           wreg	equ	0xFE8
  3157                           fsr1h	equ	0xFE2
  3158                           fsr1l	equ	0xFE1
  3159                           bsr	equ	0xFE0
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164                           	psect	rparam
  3165  0000                     pclatu	equ	0xFFB
  3166                           pclath	equ	0xFFA
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           intcon2	equ	0xFF1
  3175                           intcon3	equ	0xFF0
  3176                           fsr0h	equ	0xFEA
  3177                           fsr0l	equ	0xFE9
  3178                           wreg	equ	0xFE8
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           bsr	equ	0xFE0
  3182                           fsr2h	equ	0xFDA
  3183                           fsr2l	equ	0xFD9
  3184                           status	equ	0xFD8
  3185                           
  3186                           	psect	temp
  3187  00002E                     btemp:
  3188                           	opt stack 0
  3189  00002E                     	ds	1
  3190  0000                     int$flags	set	btemp
  3191                           pclatu	equ	0xFFB
  3192                           pclath	equ	0xFFA
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           intcon2	equ	0xFF1
  3201                           intcon3	equ	0xFF0
  3202                           fsr0h	equ	0xFEA
  3203                           fsr0l	equ	0xFE9
  3204                           wreg	equ	0xFE8
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           bsr	equ	0xFE0
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8


Data Sizes:
    Strings     218
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    display_string_LCD@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[14]), STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[16]), 
		 -> STR_12(CODE[13]), STR_11(CODE[10]), STR_10(CODE[12]), STR_9(CODE[14]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_profile
    _welcome->_display_string_LCD
    _setup_LCD->_command_LCD
    _profile->_writePassword
    _writePassword->_eeprom_w
    _menu->_readPassword
    _second_line_LCD->_command_LCD
    _first_line_LCD->_command_LCD
    _display_string_LCD->_display_LCD
    _clear_LCD->_command_LCD
    _checkPassword->_readPassword
    _readPassword->_eeprom_r
    _alarm->_obtainedKey
    _obtainedKey->_getKey

Critical Paths under _luz in COMRAM

    None.

Critical Paths under _backup in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _luz in BANK0

    None.

Critical Paths under _backup in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _luz in BANK1

    None.

Critical Paths under _backup in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _luz in BANK2

    None.

Critical Paths under _backup in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _luz in BANK3

    None.

Critical Paths under _backup in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _luz in BANK4

    None.

Critical Paths under _backup in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _luz in BANK5

    None.

Critical Paths under _backup in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _luz in BANK6

    None.

Critical Paths under _backup in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _luz in BANK7

    None.

Critical Paths under _backup in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _luz in BANK8

    None.

Critical Paths under _backup in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _luz in BANK9

    None.

Critical Paths under _backup in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _luz in BANK10

    None.

Critical Paths under _backup in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _luz in BANK11

    None.

Critical Paths under _backup in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _luz in BANK12

    None.

Critical Paths under _backup in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5561
                                             42 COMRAM     2     2      0
                              _alarm
                      _checkPassword
                          _clear_LCD
                        _display_LCD
                 _display_string_LCD
                               _menu
                            _profile
                            _pwmInit
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
                          _setup_LCD
                            _welcome
 ---------------------------------------------------------------------------------
 (1) _welcome                                              0     0      0    1084
                 _display_string_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _setup_LCD                                            2     2      0      15
                                             36 COMRAM     2     2      0
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _profile                                              2     2      0    1549
                                             40 COMRAM     2     2      0
                          _clear_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                          _ready_LCD
                    _second_line_LCD
                      _writePassword
 ---------------------------------------------------------------------------------
 (2) _writePassword                                        2     1      1     366
                                             38 COMRAM     2     1      1
                           _eeprom_w
                        _obtainedKey (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_w                                             3     0      3     194
                                             35 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    1327
                                             39 COMRAM     2     2      0
                          _clear_LCD
                              _close
                        _display_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                               _open
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
 ---------------------------------------------------------------------------------
 (1) _second_line_LCD                                      0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _first_line_LCD                                       0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _display_string_LCD                                   2     0      2    1084
                                             36 COMRAM     2     0      2
                        _display_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _ready_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            0     0      0      15
                        _command_LCD
 ---------------------------------------------------------------------------------
 (2) _command_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0     274
                                             39 COMRAM     2     2      0
                        _obtainedKey
                       _readPassword
 ---------------------------------------------------------------------------------
 (1) _readPassword                                         2     2      0     153
                                             37 COMRAM     2     2      0
                           _eeprom_r
 ---------------------------------------------------------------------------------
 (2) _eeprom_r                                             2     0      2     108
                                             35 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _alarm                                                0     0      0      30
                        _obtainedKey
 ---------------------------------------------------------------------------------
 (2) _obtainedKey                                          1     1      0      30
                                             36 COMRAM     1     1      0
                             _getKey
                             _ground
 ---------------------------------------------------------------------------------
 (3) _ground                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getKey                                               1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _luz                                                 19    19      0       0
                                             16 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _backup                                              16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarm
     _obtainedKey
       _getKey
       _ground
   _checkPassword
     _obtainedKey
       _getKey
       _ground
     _readPassword
       _eeprom_r
   _clear_LCD
     _command_LCD
   _display_LCD
   _display_string_LCD
     _display_LCD
     _ready_LCD
   _menu
     _clear_LCD
       _command_LCD
     _close
     _display_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _open
     _readPassword
       _eeprom_r
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
   _profile
     _clear_LCD
       _command_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
     _writePassword
       _eeprom_w
       _obtainedKey (ARG)
         _getKey
         _ground
   _pwmInit
   _readPassword
     _eeprom_r
   _ready_LCD
   _second_line_LCD
     _command_LCD
     _ready_LCD
   _setup_LCD
     _command_LCD
     _ready_LCD
   _welcome
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _ready_LCD

 _luz (ROOT)

 _backup (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      2D       1       47.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      20        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May  7 17:43:23 2017

               ?_display_LCD 0001                           l88 0EA8        __end_of_checkPassword 12F4  
                         bsr 000FE0                          l123 1372                          l304 142A  
                        l216 1342                          l270 1148                          l271 1168  
                        l280 11E0                          l272 1170                          l281 11E8  
                        l273 1178                          l274 1180                          l266 1130  
                        l275 11A0                          l276 11A8                          l268 1138  
                        l277 11B0                          l269 1140                          l278 11B8  
                        l279 11D8                          _PR2 000FCB                          u607 0ECA  
                        u617 127E                          u707 11C6                          u627 129A  
                        u637 10FC                          u647 1376                          u657 1396  
                        u667 13AE                          u677 111E                          u687 1156  
                        u697 118E                          _luz 0018                          wreg 000FE8  
               __CFG_LVP$OFF 000000       display_string_LCD@data 0025                 __CFG_WDT$OFF 000000  
                       l1103 1352                         l1107 135E                         l1071 11F0  
                       l1423 1268                         l1417 124C                         l1427 12C0  
                       l1445 12EA                         l1437 12D6                         l1453 1014  
                       l1535 0E3E                         l1385 12F8                         l1545 0E74  
                       l1475 1078                         l1389 130C                         l1489 10BA  
                       ?_luz 0001                         STR_1 0D71                         STR_2 0D62  
                       STR_3 0DAA                         STR_4 0D9C                         STR_5 0D52  
                       STR_6 0D42                         STR_7 0D32                         STR_8 0DC5  
                       STR_9 0D8E                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                       _flag 002D                         _main 0DDC                         _menu 1014  
                       _open 1466                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr2h 000FDA                         fsr0l 000FE9                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 002E                eeprom_w@value 0026  
                       prodh 000FF4                         prodl 000FF3            ??_second_line_LCD 0025  
                       start 00C4                __CFG_MCLRE$ON 000000                 command_LCD@x 0024  
               ___param_bank 000000                        ??_luz 0011                        ?_main 0001  
                      ?_menu 0001                        _EEADR 000FA9                        STR_10 0DC5  
                      STR_11 0DD1                        ?_open 0001                        STR_12 0DB8  
                      STR_13 0D22                        STR_14 0D01                        STR_15 0D12  
                      STR_16 0D80                        _CMCON 000FB4                        _T2CON 000FCA  
    __size_of_first_line_LCD 000C                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _alarm 142A  
                      _close 146C                 ?_obtainedKey 0001                        pclath 000FFA  
                      tablat 000FF5              __end_of_pwmInit 1406              __end_of_welcome 13F4  
            __end_of_profile 1272                        status 000FD8              __initialization 13CE  
               __end_of_main 0F0A         writePassword@address 0027                 __end_of_menu 1110  
               __end_of_open 146C                       ??_main 002B                       ??_menu 0028  
                     ??_open 0024                __activetblptr 000001                       ?_alarm 0001  
              ?_readPassword 0001                       ?_close 0001                       _ADCON1 000FC1  
                     _EEADRH 000FAA                       _EEDATA 000FA8                       _CCPR1L 000FBE  
                     _EECON2 000FA7                       _OSCCON 000FD3              eeprom_r@address 0024  
           __end_of_eeprom_r 13CE             __end_of_eeprom_w 134C                       _backup 0008  
            eeprom_w@address 0024         __size_of_command_LCD 0018                       _getKey 1110  
          readPassword@value 0027                       _ground 1454         __size_of_display_LCD 0018  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8               ??_readPassword 0026                    ??_pwmInit 0024  
                  ??_welcome 0027                    ??_profile 0029                   __accesstop 0060  
    __end_of__initialization 13D0              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
 __end_of_display_string_LCD 1324       __size_of_writePassword 0012               __pcstackCOMRAM 0001  
              __end_of_alarm 143C                __end_of_close 1472           __size_of_clear_LCD 0008  
             _first_line_LCD 1448              _second_line_LCD 143C                      ??_alarm 0026  
                    ??_close 0024         __size_of_obtainedKey 0020           __size_of_ready_LCD 001C  
                    ?_backup 0001                      ?_getKey 0001                      _CCP1CON 000FBD  
                    ?_ground 0001       __end_of_first_line_LCD 1454           __size_of_setup_LCD 004A  
              _writePassword 1406                      i1u71_27 006C                      i2u72_47 0F54  
                    i2u73_47 0F6C                      i2u74_47 0F84                      i2u75_47 0F9C  
                    i2u76_47 0FB4                      i2u77_47 0FCC                    ?_eeprom_r 0024  
                  ?_eeprom_w 0024            __end_of_clear_LCD 1466       __size_of_checkPassword 0038  
                    __Hparam 0000                      __Lparam 0000         __end_of_readPassword 142A  
            __size_of_backup 100C              __size_of_getKey 00E4                 __psmallconst 0D00  
                    __pcinit 13CE              ?_first_line_LCD 0001                      __ramtop 0D00  
            __size_of_ground 000A                      __ptext0 0DDC                      __ptext1 13E2  
                    __ptext2 1272                      __ptext3 13F4                      __ptext4 11F4  
                    __ptext5 1406                      __ptext6 1324                      __ptext7 1014  
                    __ptext8 143C                      __ptext9 1466      __end_of_second_line_LCD 1448  
             ?_writePassword 0027                 __size_of_luz 00AC            __end_of_ready_LCD 1388  
  obtainedKey@key_presionada 0025                      _pwmInit 13F4                      _welcome 13E2  
                    _profile 11F4                   ??_eeprom_r 0026                   ??_eeprom_w 0027  
             __pintcode_body 0F0A         end_of_initialization 13D0                      int_func 0F0A  
          __end_of_setup_LCD 12BC               checkPassword@i 0029                _checkPassword 12BC  
                  _PORTAbits 000F80                    _PORTBbits 000F81                    _PORTCbits 000F82  
                  _PORTDbits 000F83                    _PORTEbits 000F84                ??_command_LCD 0024  
              ??_display_LCD 0024               __end_of_backup 1014               ?_checkPassword 0001  
             __end_of_getKey 11F4              ??_writePassword 0028               __end_of_ground 145E  
           ?_second_line_LCD 0001           _display_string_LCD 12F4          start_initialization 13CE  
                __end_of_luz 00C4          ?_display_string_LCD 0025             __CFG_OSC$IRCIO67 000000  
      __size_of_readPassword 0012         ??_display_string_LCD 0027                     ??_backup 0001  
                   ??_getKey 0024                     ??_ground 0024          __end_of_command_LCD 13B8  
        __end_of_display_LCD 13A0                  __pbssCOMRAM 002D                 _readPassword 1418  
              ??_obtainedKey 0025            __size_of_eeprom_r 0016            __size_of_eeprom_w 0028  
                  _clear_LCD 145E             ??_first_line_LCD 0025                    __pintcode 0008  
            ??_checkPassword 0028                  __pintcodelo 0018                  __smallconst 0D00  
                   ?_pwmInit 0001                     ?_welcome 0001                     ?_profile 0001  
             __size_of_alarm 0012               __size_of_close 0006                    _ready_LCD 136C  
                   _LATCbits 000F8B                     _LATEbits 000F8D          __end_of_obtainedKey 136C  
                 ?_clear_LCD 0001                  _command_LCD 13A0                     _RCONbits 000FD0  
                  _setup_LCD 1272                  _display_LCD 1388            checkPassword@pass 0028  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0                   ?_ready_LCD 0001  
         writePassword@value 0028                   _EECON1bits 000FA6                     __Hrparam 0000  
            display_LCD@data 0024                     __Lrparam 0000                 __Lsmallconst 0D00  
                 ?_setup_LCD 0001          readPassword@address 0026                     __ptext10 1448  
                   __ptext11 12F4                     __ptext20 142A                     __ptext12 136C  
                   __ptext21 134C                     __ptext13 1388                     __ptext22 1454  
                   __ptext14 146C                     __ptext23 1110                     __ptext15 145E  
                   __ptext16 13A0                     __ptext17 12BC                     __ptext18 1418  
                   __ptext19 13B8             __size_of_pwmInit 0012                     _eeprom_r 13B8  
                   _eeprom_w 1324             __size_of_welcome 0012             __size_of_profile 007E  
                _obtainedKey 134C                __size_of_main 012E                __size_of_menu 00FC  
              __size_of_open 0006                  ??_clear_LCD 0025                   _CVRCONbits 000FB5  
                   int$flags 002E        __end_of_writePassword 1418                   _INTCONbits 000FF2  
   __size_of_second_line_LCD 000C                  ??_ready_LCD 0024                     intlevel1 0000  
                   intlevel2 0000  __size_of_display_string_LCD 0030                  ??_setup_LCD 0025  
                   profile@i 0029                 ?_command_LCD 0001  
