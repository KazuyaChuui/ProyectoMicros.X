

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May  8 20:16:43 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.41
    41                           ; Generated 25/01/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4585 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _PORTBbits	set	3969
    75  0000                     _PORTCbits	set	3970
    76  0000                     _LATEbits	set	3981
    77  0000                     _LATCbits	set	3979
    78  0000                     _CCP1CON	set	4029
    79  0000                     _T2CON	set	4042
    80  0000                     _CCPR1L	set	4030
    81  0000                     _PR2	set	4043
    82  0000                     _EECON2	set	4007
    83  0000                     _EEDATA	set	4008
    84  0000                     _EECON1bits	set	4006
    85  0000                     _EEADRH	set	4010
    86  0000                     _EEADR	set	4009
    87  0000                     _PORTDbits	set	3971
    88  0000                     _PORTEbits	set	3972
    89  0000                     _PORTAbits	set	3968
    90  0000                     _TRISE	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISA	set	3986
    95  0000                     _LATE	set	3981
    96  0000                     _LATD	set	3980
    97  0000                     _LATC	set	3979
    98  0000                     _LATB	set	3978
    99  0000                     _LATA	set	3977
   100  0000                     _PORTE	set	3972
   101  0000                     _PORTD	set	3971
   102  0000                     _PORTC	set	3970
   103  0000                     _PORTB	set	3969
   104  0000                     _PORTA	set	3968
   105  0000                     _INTCON3bits	set	4080
   106  0000                     _INTCONbits	set	4082
   107  0000                     _RCONbits	set	4048
   108  0000                     _INTCON2bits	set	4081
   109  0000                     _ADCON1	set	4033
   110  0000                     _CVRCONbits	set	4021
   111  0000                     _CMCON	set	4020
   112  0000                     _OSCCON	set	4051
   113                           
   114                           	psect	smallconst
   115  000D00                     __psmallconst:
   116                           	opt stack 0
   117  000D00  00                 	db	0
   118  000D01                     STR_14:
   119  000D01  55                 	db	85	;'U'
   120  000D02  20                 	db	32
   121  000D03  50                 	db	80	;'P'
   122  000D04  72                 	db	114	;'r'
   123  000D05  65                 	db	101	;'e'
   124  000D06  66                 	db	102	;'f'
   125  000D07  65                 	db	101	;'e'
   126  000D08  72                 	db	114	;'r'
   127  000D09  20                 	db	32
   128  000D0A  41                 	db	65	;'A'
   129  000D0B  20                 	db	32
   130  000D0C  42                 	db	66	;'B'
   131  000D0D  20                 	db	32
   132  000D0E  43                 	db	67	;'C'
   133  000D0F  20                 	db	32
   134  000D10  44                 	db	68	;'D'
   135  000D11  00                 	db	0
   136  000D12                     STR_15:
   137  000D12  49                 	db	73	;'I'
   138  000D13  6E                 	db	110	;'n'
   139  000D14  74                 	db	116	;'t'
   140  000D15  72                 	db	114	;'r'
   141  000D16  6F                 	db	111	;'o'
   142  000D17  64                 	db	100	;'d'
   143  000D18  75                 	db	117	;'u'
   144  000D19  63                 	db	99	;'c'
   145  000D1A  65                 	db	101	;'e'
   146  000D1B  20                 	db	32
   147  000D1C  50                 	db	80	;'P'
   148  000D1D  73                 	db	115	;'s'
   149  000D1E  73                 	db	115	;'s'
   150  000D1F  77                 	db	119	;'w'
   151  000D20  64                 	db	100	;'d'
   152  000D21  00                 	db	0
   153  000D22                     STR_13:
   154  000D22  57                 	db	87	;'W'
   155  000D23  68                 	db	104	;'h'
   156  000D24  69                 	db	105	;'i'
   157  000D25  63                 	db	99	;'c'
   158  000D26  68                 	db	104	;'h'
   159  000D27  20                 	db	32
   160  000D28  6C                 	db	108	;'l'
   161  000D29  65                 	db	101	;'e'
   162  000D2A  74                 	db	116	;'t'
   163  000D2B  74                 	db	116	;'t'
   164  000D2C  65                 	db	101	;'e'
   165  000D2D  72                 	db	114	;'r'
   166  000D2E  20                 	db	32
   167  000D2F  64                 	db	100	;'d'
   168  000D30  6F                 	db	111	;'o'
   169  000D31  00                 	db	0
   170  000D32                     STR_7:
   171  000D32  2D                 	db	45
   172  000D33  44                 	db	68	;'D'
   173  000D34  6F                 	db	111	;'o'
   174  000D35  6F                 	db	111	;'o'
   175  000D36  72                 	db	114	;'r'
   176  000D37  20                 	db	32
   177  000D38  55                 	db	85	;'U'
   178  000D39  6E                 	db	110	;'n'
   179  000D3A  6C                 	db	108	;'l'
   180  000D3B  6F                 	db	111	;'o'
   181  000D3C  63                 	db	99	;'c'
   182  000D3D  6B                 	db	107	;'k'
   183  000D3E  65                 	db	101	;'e'
   184  000D3F  64                 	db	100	;'d'
   185  000D40  2D                 	db	45
   186  000D41  00                 	db	0
   187  000D42                     STR_6:
   188  000D42  31                 	db	49	;'1'
   189  000D43  2E                 	db	46
   190  000D44  55                 	db	85	;'U'
   191  000D45  6E                 	db	110	;'n'
   192  000D46  6C                 	db	108	;'l'
   193  000D47  6F                 	db	111	;'o'
   194  000D48  63                 	db	99	;'c'
   195  000D49  6B                 	db	107	;'k'
   196  000D4A  20                 	db	32
   197  000D4B  32                 	db	50	;'2'
   198  000D4C  2E                 	db	46
   199  000D4D  4C                 	db	76	;'L'
   200  000D4E  6F                 	db	111	;'o'
   201  000D4F  63                 	db	99	;'c'
   202  000D50  6B                 	db	107	;'k'
   203  000D51  00                 	db	0
   204  000D52                     STR_5:
   205  000D52  31                 	db	49	;'1'
   206  000D53  2E                 	db	46
   207  000D54  44                 	db	68	;'D'
   208  000D55  6F                 	db	111	;'o'
   209  000D56  6F                 	db	111	;'o'
   210  000D57  72                 	db	114	;'r'
   211  000D58  20                 	db	32
   212  000D59  32                 	db	50	;'2'
   213  000D5A  2E                 	db	46
   214  000D5B  4C                 	db	76	;'L'
   215  000D5C  6F                 	db	111	;'o'
   216  000D5D  67                 	db	103	;'g'
   217  000D5E  4F                 	db	79	;'O'
   218  000D5F  75                 	db	117	;'u'
   219  000D60  74                 	db	116	;'t'
   220  000D61  00                 	db	0
   221  000D62                     STR_2:
   222  000D62  57                 	db	87	;'W'
   223  000D63  72                 	db	114	;'r'
   224  000D64  6F                 	db	111	;'o'
   225  000D65  6E                 	db	110	;'n'
   226  000D66  67                 	db	103	;'g'
   227  000D67  20                 	db	32
   228  000D68  50                 	db	80	;'P'
   229  000D69  61                 	db	97	;'a'
   230  000D6A  73                 	db	115	;'s'
   231  000D6B  73                 	db	115	;'s'
   232  000D6C  77                 	db	119	;'w'
   233  000D6D  6F                 	db	111	;'o'
   234  000D6E  72                 	db	114	;'r'
   235  000D6F  64                 	db	100	;'d'
   236  000D70  00                 	db	0
   237  000D71                     STR_1:
   238  000D71  45                 	db	69	;'E'
   239  000D72  6E                 	db	110	;'n'
   240  000D73  74                 	db	116	;'t'
   241  000D74  65                 	db	101	;'e'
   242  000D75  72                 	db	114	;'r'
   243  000D76  20                 	db	32
   244  000D77  50                 	db	80	;'P'
   245  000D78  61                 	db	97	;'a'
   246  000D79  73                 	db	115	;'s'
   247  000D7A  73                 	db	115	;'s'
   248  000D7B  77                 	db	119	;'w'
   249  000D7C  6F                 	db	111	;'o'
   250  000D7D  72                 	db	114	;'r'
   251  000D7E  64                 	db	100	;'d'
   252  000D7F  00                 	db	0
   253  000D80                     STR_16:
   254  000D80  4F                 	db	79	;'O'
   255  000D81  6E                 	db	110	;'n'
   256  000D82  6C                 	db	108	;'l'
   257  000D83  79                 	db	121	;'y'
   258  000D84  20                 	db	32
   259  000D85  74                 	db	116	;'t'
   260  000D86  77                 	db	119	;'w'
   261  000D87  6F                 	db	111	;'o'
   262  000D88  20                 	db	32
   263  000D89  6B                 	db	107	;'k'
   264  000D8A  65                 	db	101	;'e'
   265  000D8B  79                 	db	121	;'y'
   266  000D8C  73                 	db	115	;'s'
   267  000D8D  00                 	db	0
   268  000D8E                     STR_9:
   269  000D8E  2D                 	db	45
   270  000D8F  44                 	db	68	;'D'
   271  000D90  6F                 	db	111	;'o'
   272  000D91  6F                 	db	111	;'o'
   273  000D92  72                 	db	114	;'r'
   274  000D93  20                 	db	32
   275  000D94  4C                 	db	76	;'L'
   276  000D95  6F                 	db	111	;'o'
   277  000D96  63                 	db	99	;'c'
   278  000D97  6B                 	db	107	;'k'
   279  000D98  65                 	db	101	;'e'
   280  000D99  64                 	db	100	;'d'
   281  000D9A  2D                 	db	45
   282  000D9B  00                 	db	0
   283  000D9C                     STR_4:
   284  000D9C  57                 	db	87	;'W'
   285  000D9D  65                 	db	101	;'e'
   286  000D9E  6C                 	db	108	;'l'
   287  000D9F  63                 	db	99	;'c'
   288  000DA0  6F                 	db	111	;'o'
   289  000DA1  6D                 	db	109	;'m'
   290  000DA2  65                 	db	101	;'e'
   291  000DA3  20                 	db	32
   292  000DA4  55                 	db	85	;'U'
   293  000DA5  73                 	db	115	;'s'
   294  000DA6  65                 	db	101	;'e'
   295  000DA7  72                 	db	114	;'r'
   296  000DA8  20                 	db	32
   297  000DA9  00                 	db	0
   298  000DAA                     STR_3:
   299  000DAA  41                 	db	65	;'A'
   300  000DAB  6C                 	db	108	;'l'
   301  000DAC  61                 	db	97	;'a'
   302  000DAD  72                 	db	114	;'r'
   303  000DAE  6D                 	db	109	;'m'
   304  000DAF  20                 	db	32
   305  000DB0  44                 	db	68	;'D'
   306  000DB1  65                 	db	101	;'e'
   307  000DB2  61                 	db	97	;'a'
   308  000DB3  63                 	db	99	;'c'
   309  000DB4  74                 	db	116	;'t'
   310  000DB5  69                 	db	105	;'i'
   311  000DB6  76                 	db	118	;'v'
   312  000DB7  00                 	db	0
   313  000DB8                     STR_12:
   314  000DB8  41                 	db	65	;'A'
   315  000DB9  6C                 	db	108	;'l'
   316  000DBA  61                 	db	97	;'a'
   317  000DBB  72                 	db	114	;'r'
   318  000DBC  6D                 	db	109	;'m'
   319  000DBD  20                 	db	32
   320  000DBE  41                 	db	65	;'A'
   321  000DBF  63                 	db	99	;'c'
   322  000DC0  74                 	db	116	;'t'
   323  000DC1  69                 	db	105	;'i'
   324  000DC2  76                 	db	118	;'v'
   325  000DC3  65                 	db	101	;'e'
   326  000DC4  00                 	db	0
   327  000DC5                     STR_8:
   328  000DC5  41                 	db	65	;'A'
   329  000DC6  20                 	db	32
   330  000DC7  74                 	db	116	;'t'
   331  000DC8  6F                 	db	111	;'o'
   332  000DC9  20                 	db	32
   333  000DCA  47                 	db	71	;'G'
   334  000DCB  6F                 	db	111	;'o'
   335  000DCC  42                 	db	66	;'B'
   336  000DCD  61                 	db	97	;'a'
   337  000DCE  63                 	db	99	;'c'
   338  000DCF  6B                 	db	107	;'k'
   339  000DD0  00                 	db	0
   340  000DD1                     STR_11:
   341  000DD1  42                 	db	66	;'B'
   342  000DD2  79                 	db	121	;'y'
   343  000DD3  65                 	db	101	;'e'
   344  000DD4  20                 	db	32
   345  000DD5  75                 	db	117	;'u'
   346  000DD6  73                 	db	115	;'s'
   347  000DD7  65                 	db	101	;'e'
   348  000DD8  72                 	db	114	;'r'
   349  000DD9  20                 	db	32
   350  000DDA  00                 	db	0
   351  0000                     
   352                           ; #config settings
   353  000DDB  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           	psect	cinit
   356  0013D0                     __pcinit:
   357                           	opt stack 0
   358  0013D0                     start_initialization:
   359                           	opt stack 0
   360  0013D0                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to COMRAM (1 bytes)
   364  0013D0  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   365  0013D2                     end_of_initialization:
   366                           	opt stack 0
   367  0013D2                     __end_of__initialization:
   368                           	opt stack 0
   369  0013D2  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370  0013D4  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371  0013D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   372  0013D8  6EF8               	movwf	tblptru,c
   373  0013DA  0E0D               	movlw	high __Lsmallconst
   374  0013DC  6EF7               	movwf	tblptrh,c
   375  0013DE  0100               	movlb	0
   376  0013E0  EFEE  F006         	goto	_main	;jump to C main() function
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           
   380                           	psect	bssCOMRAM
   381  00002D                     __pbssCOMRAM:
   382                           	opt stack 0
   383  00002D                     _flag:
   384                           	opt stack 0
   385  00002D                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           
   389                           	psect	cstackCOMRAM
   390  000001                     __pcstackCOMRAM:
   391                           	opt stack 0
   392  000001                     ??_backup:
   393  000001                     
   394                           ; 1 bytes @ 0x0
   395  000001                     	ds	16
   396  000011                     ??_luz:
   397                           
   398                           ; 1 bytes @ 0x10
   399  000011                     	ds	19
   400  000024                     ??_getKey:
   401  000024                     command_LCD@x:
   402                           	opt stack 0
   403  000024                     display_LCD@data:
   404                           	opt stack 0
   405  000024                     eeprom_r@address:
   406                           	opt stack 0
   407  000024                     eeprom_w@address:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x23
   411  000024                     	ds	1
   412  000025                     ??_setup_LCD:
   413  000025                     obtainedKey@key_presionada:
   414                           	opt stack 0
   415  000025                     display_string_LCD@data:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000025                     	ds	1
   420  000026                     eeprom_w@value:
   421                           	opt stack 0
   422  000026                     readPassword@address:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x25
   426  000026                     	ds	1
   427  000027                     readPassword@value:
   428                           	opt stack 0
   429  000027                     writePassword@address:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x26
   433  000027                     	ds	1
   434  000028                     ??_menu:
   435  000028                     writePassword@value:
   436                           	opt stack 0
   437  000028                     checkPassword@pass:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x27
   441  000028                     	ds	1
   442  000029                     checkPassword@i:
   443                           	opt stack 0
   444  000029                     profile@i:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x28
   448  000029                     	ds	2
   449  00002B                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x2A
   452  00002B                     	ds	2
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 31 in file "mainCode.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  key             1    0        unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels required when called:    5
   481 ;; This function calls:
   482 ;;		_alarm
   483 ;;		_checkPassword
   484 ;;		_clear_LCD
   485 ;;		_display_LCD
   486 ;;		_display_string_LCD
   487 ;;		_menu
   488 ;;		_profile
   489 ;;		_pwmInit
   490 ;;		_readPassword
   491 ;;		_ready_LCD
   492 ;;		_second_line_LCD
   493 ;;		_setup_LCD
   494 ;;		_welcome
   495 ;; This function is called by:
   496 ;;		Startup code after reset
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text0
   501  000DDC                     __ptext0:
   502                           	opt stack 0
   503  000DDC                     _main:
   504                           	opt stack 26
   505                           
   506                           ;mainCode.c: 32: OSCCON = 0x70;
   507                           
   508                           ;incstack = 0
   509  000DDC  0E70               	movlw	112
   510  000DDE  6ED3               	movwf	4051,c	;volatile
   511                           
   512                           ;mainCode.c: 33: CMCON = 0xFF;
   513  000DE0  68B4               	setf	4020,c	;volatile
   514                           
   515                           ;mainCode.c: 34: CVRCONbits.CVREN = 0;
   516  000DE2  9EB5               	bcf	4021,7,c	;volatile
   517                           
   518                           ;mainCode.c: 35: ADCON1 = 0x0F;
   519  000DE4  0E0F               	movlw	15
   520  000DE6  6EC1               	movwf	4033,c	;volatile
   521                           
   522                           ;mainCode.c: 36: INTCON2bits.RBPU = 0;
   523  000DE8  9EF1               	bcf	intcon2,7,c	;volatile
   524                           
   525                           ;mainCode.c: 37: RCONbits.IPEN = 1;
   526  000DEA  8ED0               	bsf	4048,7,c	;volatile
   527                           
   528                           ;mainCode.c: 38: INTCONbits.GIEH = 1;
   529  000DEC  8EF2               	bsf	intcon,7,c	;volatile
   530                           
   531                           ;mainCode.c: 39: INTCONbits.GIEL = 1;
   532  000DEE  8CF2               	bsf	intcon,6,c	;volatile
   533                           
   534                           ;mainCode.c: 42: INTCON3bits.INT2IP=1;
   535  000DF0  8EF0               	bsf	intcon3,7,c	;volatile
   536                           
   537                           ;mainCode.c: 43: INTCON2bits.INTEDG2 = 1;
   538  000DF2  88F1               	bsf	intcon2,4,c	;volatile
   539                           
   540                           ;mainCode.c: 44: INTCON3bits.INT2IE = 1;
   541  000DF4  88F0               	bsf	intcon3,4,c	;volatile
   542                           
   543                           ;mainCode.c: 47: INTCON3bits.INT1IP = 0;
   544  000DF6  9CF0               	bcf	intcon3,6,c	;volatile
   545                           
   546                           ;mainCode.c: 48: INTCON2bits.INTEDG1 = 1;
   547  000DF8  8AF1               	bsf	intcon2,5,c	;volatile
   548                           
   549                           ;mainCode.c: 49: INTCON3bits.INT1IE=1;
   550  000DFA  86F0               	bsf	intcon3,3,c	;volatile
   551                           
   552                           ;mainCode.c: 51: unsigned char key;
   553                           ;mainCode.c: 52: PORTA = 0x00;
   554  000DFC  0E00               	movlw	0
   555  000DFE  6E80               	movwf	3968,c	;volatile
   556                           
   557                           ;mainCode.c: 53: PORTB = 0x00;
   558  000E00  0E00               	movlw	0
   559  000E02  6E81               	movwf	3969,c	;volatile
   560                           
   561                           ;mainCode.c: 54: PORTC = 0x00;
   562  000E04  0E00               	movlw	0
   563  000E06  6E82               	movwf	3970,c	;volatile
   564                           
   565                           ;mainCode.c: 55: PORTD = 0x00;
   566  000E08  0E00               	movlw	0
   567  000E0A  6E83               	movwf	3971,c	;volatile
   568                           
   569                           ;mainCode.c: 56: PORTE = 0x00;
   570  000E0C  0E00               	movlw	0
   571  000E0E  6E84               	movwf	3972,c	;volatile
   572                           
   573                           ;mainCode.c: 57: LATA = 0x00;
   574  000E10  0E00               	movlw	0
   575  000E12  6E89               	movwf	3977,c	;volatile
   576                           
   577                           ;mainCode.c: 58: LATB = 0x00;
   578  000E14  0E00               	movlw	0
   579  000E16  6E8A               	movwf	3978,c	;volatile
   580                           
   581                           ;mainCode.c: 59: LATC = 0x00;
   582  000E18  0E00               	movlw	0
   583  000E1A  6E8B               	movwf	3979,c	;volatile
   584                           
   585                           ;mainCode.c: 60: LATD = 0x00;
   586  000E1C  0E00               	movlw	0
   587  000E1E  6E8C               	movwf	3980,c	;volatile
   588                           
   589                           ;mainCode.c: 61: LATE = 0x00;
   590  000E20  0E00               	movlw	0
   591  000E22  6E8D               	movwf	3981,c	;volatile
   592                           
   593                           ;mainCode.c: 62: TRISA = 0x00;
   594  000E24  0E00               	movlw	0
   595  000E26  6E92               	movwf	3986,c	;volatile
   596                           
   597                           ;mainCode.c: 63: TRISB = 0x07;
   598  000E28  0E07               	movlw	7
   599  000E2A  6E93               	movwf	3987,c	;volatile
   600                           
   601                           ;mainCode.c: 64: TRISC = 0xF0;
   602  000E2C  0EF0               	movlw	240
   603  000E2E  6E94               	movwf	3988,c	;volatile
   604                           
   605                           ;mainCode.c: 65: TRISD = 0x00;
   606  000E30  0E00               	movlw	0
   607  000E32  6E95               	movwf	3989,c	;volatile
   608                           
   609                           ;mainCode.c: 66: TRISE = 0x00;
   610  000E34  0E00               	movlw	0
   611  000E36  6E96               	movwf	3990,c	;volatile
   612                           
   613                           ;mainCode.c: 68: setup_LCD();
   614  000E38  EC3A  F009         	call	_setup_LCD	;wreg free
   615                           
   616                           ;mainCode.c: 69: pwmInit();
   617  000E3C  ECFB  F009         	call	_pwmInit	;wreg free
   618  000E40                     l1539:
   619                           
   620                           ;mainCode.c: 72: if(readPassword(0x20) != 'A' &&
   621                           ;mainCode.c: 73: readPassword(0x20) != 'B' &&
   622                           ;mainCode.c: 74: readPassword(0x20) != 'C' &&
   623                           ;mainCode.c: 75: readPassword(0x20) != 'D')
   624  000E40  0E20               	movlw	32
   625  000E42  EC0D  F00A         	call	_readPassword
   626  000E46  0A41               	xorlw	65
   627  000E48  B4D8               	btfsc	status,2,c
   628  000E4A  D015               	goto	l1549
   629  000E4C  0E20               	movlw	32
   630  000E4E  EC0D  F00A         	call	_readPassword
   631  000E52  0A42               	xorlw	66
   632  000E54  B4D8               	btfsc	status,2,c
   633  000E56  D00F               	goto	l1549
   634  000E58  0E20               	movlw	32
   635  000E5A  EC0D  F00A         	call	_readPassword
   636  000E5E  0A43               	xorlw	67
   637  000E60  B4D8               	btfsc	status,2,c
   638  000E62  D009               	goto	l1549
   639  000E64  0E20               	movlw	32
   640  000E66  EC0D  F00A         	call	_readPassword
   641  000E6A  0A44               	xorlw	68
   642  000E6C  B4D8               	btfsc	status,2,c
   643  000E6E  D003               	goto	l1549
   644                           
   645                           ;mainCode.c: 76: {
   646                           ;mainCode.c: 77: profile();
   647  000E70  ECFB  F008         	call	_profile	;wreg free
   648                           
   649                           ;mainCode.c: 78: }else{
   650  000E74  D7E5               	goto	l1539
   651  000E76                     l1549:
   652                           
   653                           ;mainCode.c: 79: ready_LCD();
   654  000E76  ECB7  F009         	call	_ready_LCD	;wreg free
   655                           
   656                           ;mainCode.c: 80: display_string_LCD("Enter Password");
   657  000E7A  0E71               	movlw	low STR_1
   658  000E7C  6E25               	movwf	display_string_LCD@data,c
   659  000E7E  0E0D               	movlw	high STR_1
   660  000E80  6E26               	movwf	display_string_LCD@data+1,c
   661  000E82  EC7B  F009         	call	_display_string_LCD	;wreg free
   662                           
   663                           ;mainCode.c: 81: alarm();
   664  000E86  EC16  F00A         	call	_alarm	;wreg free
   665                           
   666                           ;mainCode.c: 82: if(checkPassword() != 1){
   667  000E8A  EC5F  F009         	call	_checkPassword	;wreg free
   668  000E8E  06E8               	decf	wreg,f,c
   669  000E90  B4D8               	btfsc	status,2,c
   670  000E92  D00B               	goto	l88
   671                           
   672                           ;mainCode.c: 83: clear_LCD();
   673  000E94  EC30  F00A         	call	_clear_LCD	;wreg free
   674                           
   675                           ;mainCode.c: 84: ready_LCD();
   676  000E98  ECB7  F009         	call	_ready_LCD	;wreg free
   677                           
   678                           ;mainCode.c: 85: display_string_LCD("Wrong Password");
   679  000E9C  0E62               	movlw	low STR_2
   680  000E9E  6E25               	movwf	display_string_LCD@data,c
   681  000EA0  0E0D               	movlw	high STR_2
   682  000EA2  6E26               	movwf	display_string_LCD@data+1,c
   683  000EA4  EC7B  F009         	call	_display_string_LCD	;wreg free
   684                           
   685                           ;mainCode.c: 86: }else{
   686  000EA8  D7CB               	goto	l1539
   687  000EAA                     l88:
   688                           
   689                           ;mainCode.c: 88: PORTAbits.RA0 = 0;
   690  000EAA  9080               	bcf	3968,0,c	;volatile
   691                           
   692                           ;mainCode.c: 89: PORTEbits.RE1 = 0;
   693  000EAC  9284               	bcf	3972,1,c	;volatile
   694                           
   695                           ;mainCode.c: 90: clear_LCD();
   696  000EAE  EC30  F00A         	call	_clear_LCD	;wreg free
   697                           
   698                           ;mainCode.c: 91: ready_LCD();
   699  000EB2  ECB7  F009         	call	_ready_LCD	;wreg free
   700                           
   701                           ;mainCode.c: 92: display_string_LCD("Alarm Deactiv");
   702  000EB6  0EAA               	movlw	low STR_3
   703  000EB8  6E25               	movwf	display_string_LCD@data,c
   704  000EBA  0E0D               	movlw	high STR_3
   705  000EBC  6E26               	movwf	display_string_LCD@data+1,c
   706  000EBE  EC7B  F009         	call	_display_string_LCD	;wreg free
   707                           
   708                           ;mainCode.c: 93: _delay((unsigned long)((1500)*(8000000/4000.0)));
   709  000EC2  0E10               	movlw	16
   710  000EC4  6E2C               	movwf	(??_main+1)& (0+255),c
   711  000EC6  0E39               	movlw	57
   712  000EC8  6E2B               	movwf	??_main& (0+255),c
   713  000ECA  0E0E               	movlw	14
   714  000ECC                     u607:
   715  000ECC  2EE8               	decfsz	wreg,f,c
   716  000ECE  D7FE               	bra	u607
   717  000ED0  2E2B               	decfsz	??_main& (0+255),f,c
   718  000ED2  D7FC               	bra	u607
   719  000ED4  2E2C               	decfsz	(??_main+1)& (0+255),f,c
   720  000ED6  D7FA               	bra	u607
   721                           
   722                           ;mainCode.c: 94: clear_LCD();
   723  000ED8  EC30  F00A         	call	_clear_LCD	;wreg free
   724                           
   725                           ;mainCode.c: 95: ready_LCD();
   726  000EDC  ECB7  F009         	call	_ready_LCD	;wreg free
   727                           
   728                           ;mainCode.c: 96: display_string_LCD("Welcome User ");
   729  000EE0  0E9C               	movlw	low STR_4
   730  000EE2  6E25               	movwf	display_string_LCD@data,c
   731  000EE4  0E0D               	movlw	high STR_4
   732  000EE6  6E26               	movwf	display_string_LCD@data+1,c
   733  000EE8  EC7B  F009         	call	_display_string_LCD	;wreg free
   734                           
   735                           ;mainCode.c: 97: display_LCD(readPassword(0x20));
   736  000EEC  0E20               	movlw	32
   737  000EEE  EC0D  F00A         	call	_readPassword
   738  000EF2  ECC5  F009         	call	_display_LCD
   739                           
   740                           ;mainCode.c: 98: second_line_LCD();
   741  000EF6  EC1F  F00A         	call	_second_line_LCD	;wreg free
   742                           
   743                           ;mainCode.c: 99: welcome();
   744  000EFA  ECF2  F009         	call	_welcome	;wreg free
   745                           
   746                           ;mainCode.c: 100: menu();
   747  000EFE  EC0B  F008         	call	_menu	;wreg free
   748                           
   749                           ;mainCode.c: 101: if(flag == 1){
   750  000F02  042D               	decf	_flag,w,c
   751  000F04  B4D8               	btfsc	status,2,c
   752  000F06  EF62  F000         	goto	start
   753  000F0A  D7CF               	goto	l88
   754  000F0C                     __end_of_main:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           intcon	equ	0xFF2
   759                           intcon2	equ	0xFF1
   760                           intcon3	equ	0xFF0
   761                           wreg	equ	0xFE8
   762                           status	equ	0xFD8
   763                           
   764 ;; *************** function _welcome *****************
   765 ;; Defined at:
   766 ;;		line 16 in file "menu.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    4
   787 ;; This function calls:
   788 ;;		_display_string_LCD
   789 ;;		_ready_LCD
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text1
   796  0013E4                     __ptext1:
   797                           	opt stack 0
   798  0013E4                     _welcome:
   799                           	opt stack 26
   800                           
   801                           ;menu.c: 17: ready_LCD();
   802                           
   803                           ;incstack = 0
   804  0013E4  ECB7  F009         	call	_ready_LCD	;wreg free
   805                           
   806                           ;menu.c: 18: display_string_LCD("1.Door 2.LogOut");
   807  0013E8  0E52               	movlw	low STR_5
   808  0013EA  6E25               	movwf	display_string_LCD@data,c
   809  0013EC  0E0D               	movlw	high STR_5
   810  0013EE  6E26               	movwf	display_string_LCD@data+1,c
   811  0013F0  EC7B  F009         	call	_display_string_LCD	;wreg free
   812  0013F4  0012               	return		;funcret
   813  0013F6                     __end_of_welcome:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           intcon	equ	0xFF2
   818                           intcon2	equ	0xFF1
   819                           intcon3	equ	0xFF0
   820                           wreg	equ	0xFE8
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _setup_LCD *****************
   824 ;; Defined at:
   825 ;;		line 28 in file "lcdCon.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;Total ram usage:        2 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    3
   846 ;; This function calls:
   847 ;;		_command_LCD
   848 ;;		_ready_LCD
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text2
   855  001274                     __ptext2:
   856                           	opt stack 0
   857  001274                     _setup_LCD:
   858                           	opt stack 27
   859                           
   860                           ;lcdCon.c: 29: PORTAbits.RA3 = 0;
   861                           
   862                           ;incstack = 0
   863  001274  9680               	bcf	3968,3,c	;volatile
   864                           
   865                           ;lcdCon.c: 30: _delay((unsigned long)((250)*(8000000/4000.0)));
   866  001276  0E03               	movlw	3
   867  001278  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   868  00127A  0E8A               	movlw	138
   869  00127C  6E25               	movwf	??_setup_LCD& (0+255),c
   870  00127E  0E56               	movlw	86
   871  001280                     u617:
   872  001280  2EE8               	decfsz	wreg,f,c
   873  001282  D7FE               	bra	u617
   874  001284  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   875  001286  D7FC               	bra	u617
   876  001288  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   877  00128A  D7FA               	bra	u617
   878                           
   879                           ;lcdCon.c: 31: command_LCD(0x38);
   880  00128C  0E38               	movlw	56
   881  00128E  ECD1  F009         	call	_command_LCD
   882                           
   883                           ;lcdCon.c: 32: _delay((unsigned long)((250)*(8000000/4000.0)));
   884  001292  0E03               	movlw	3
   885  001294  6E26               	movwf	(??_setup_LCD+1)& (0+255),c
   886  001296  0E8A               	movlw	138
   887  001298  6E25               	movwf	??_setup_LCD& (0+255),c
   888  00129A  0E56               	movlw	86
   889  00129C                     u627:
   890  00129C  2EE8               	decfsz	wreg,f,c
   891  00129E  D7FE               	bra	u627
   892  0012A0  2E25               	decfsz	??_setup_LCD& (0+255),f,c
   893  0012A2  D7FC               	bra	u627
   894  0012A4  2E26               	decfsz	(??_setup_LCD+1)& (0+255),f,c
   895  0012A6  D7FA               	bra	u627
   896                           
   897                           ;lcdCon.c: 33: command_LCD(0x0F);
   898  0012A8  0E0F               	movlw	15
   899  0012AA  ECD1  F009         	call	_command_LCD
   900                           
   901                           ;lcdCon.c: 34: ready_LCD();
   902  0012AE  ECB7  F009         	call	_ready_LCD	;wreg free
   903                           
   904                           ;lcdCon.c: 35: command_LCD(0x01);
   905  0012B2  0E01               	movlw	1
   906  0012B4  ECD1  F009         	call	_command_LCD
   907                           
   908                           ;lcdCon.c: 36: ready_LCD();
   909  0012B8  ECB7  F009         	call	_ready_LCD	;wreg free
   910  0012BC  0012               	return		;funcret
   911  0012BE                     __end_of_setup_LCD:
   912                           	opt stack 0
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           intcon	equ	0xFF2
   916                           intcon2	equ	0xFF1
   917                           intcon3	equ	0xFF0
   918                           wreg	equ	0xFE8
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _pwmInit *****************
   922 ;; Defined at:
   923 ;;		line 12 in file "status.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text3
   952  0013F6                     __ptext3:
   953                           	opt stack 0
   954  0013F6                     _pwmInit:
   955                           	opt stack 28
   956                           
   957                           ;status.c: 16: PR2 = 0x9B;
   958                           
   959                           ;incstack = 0
   960  0013F6  0E9B               	movlw	155
   961  0013F8  6ECB               	movwf	4043,c	;volatile
   962                           
   963                           ;status.c: 17: CCPR1L = 0x2F;
   964  0013FA  0E2F               	movlw	47
   965  0013FC  6EBE               	movwf	4030,c	;volatile
   966                           
   967                           ;status.c: 18: T2CON = 0x07;
   968  0013FE  0E07               	movlw	7
   969  001400  6ECA               	movwf	4042,c	;volatile
   970                           
   971                           ;status.c: 19: CCP1CON = 0x3C;
   972  001402  0E3C               	movlw	60
   973  001404  6EBD               	movwf	4029,c	;volatile
   974  001406  0012               	return		;funcret
   975  001408                     __end_of_pwmInit:
   976                           	opt stack 0
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           intcon	equ	0xFF2
   980                           intcon2	equ	0xFF1
   981                           intcon3	equ	0xFF0
   982                           wreg	equ	0xFE8
   983                           status	equ	0xFD8
   984                           
   985 ;; *************** function _profile *****************
   986 ;; Defined at:
   987 ;;		line 48 in file "profile.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  i               2   40[COMRAM] unsigned int 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    4
  1008 ;; This function calls:
  1009 ;;		_clear_LCD
  1010 ;;		_display_string_LCD
  1011 ;;		_first_line_LCD
  1012 ;;		_obtainedKey
  1013 ;;		_ready_LCD
  1014 ;;		_second_line_LCD
  1015 ;;		_writePassword
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text4
  1022  0011F6                     __ptext4:
  1023                           	opt stack 0
  1024  0011F6                     _profile:
  1025                           	opt stack 26
  1026                           
  1027                           ;profile.c: 49: unsigned int i = 0;
  1028                           
  1029                           ;incstack = 0
  1030  0011F6  0E00               	movlw	0
  1031  0011F8  6E2A               	movwf	profile@i+1,c
  1032  0011FA  0E00               	movlw	0
  1033  0011FC  6E29               	movwf	profile@i,c
  1034                           
  1035                           ;profile.c: 50: ready_LCD();
  1036  0011FE  ECB7  F009         	call	_ready_LCD	;wreg free
  1037                           
  1038                           ;profile.c: 51: display_string_LCD("Which letter do");
  1039  001202  0E22               	movlw	low STR_13
  1040  001204  6E25               	movwf	display_string_LCD@data,c
  1041  001206  0E0D               	movlw	high STR_13
  1042  001208  6E26               	movwf	display_string_LCD@data+1,c
  1043  00120A  EC7B  F009         	call	_display_string_LCD	;wreg free
  1044                           
  1045                           ;profile.c: 52: second_line_LCD();
  1046  00120E  EC1F  F00A         	call	_second_line_LCD	;wreg free
  1047                           
  1048                           ;profile.c: 53: display_string_LCD("U Prefer A B C D");
  1049  001212  0E01               	movlw	low STR_14
  1050  001214  6E25               	movwf	display_string_LCD@data,c
  1051  001216  0E0D               	movlw	high STR_14
  1052  001218  6E26               	movwf	display_string_LCD@data+1,c
  1053  00121A  EC7B  F009         	call	_display_string_LCD	;wreg free
  1054                           
  1055                           ;profile.c: 54: writePassword(obtainedKey(),0x20);
  1056  00121E  0E20               	movlw	32
  1057  001220  6E27               	movwf	writePassword@address,c
  1058  001222  ECA7  F009         	call	_obtainedKey	;wreg free
  1059  001226  EC04  F00A         	call	_writePassword
  1060                           
  1061                           ;profile.c: 55: clear_LCD();
  1062  00122A  EC30  F00A         	call	_clear_LCD	;wreg free
  1063                           
  1064                           ;profile.c: 56: first_line_LCD();
  1065  00122E  EC25  F00A         	call	_first_line_LCD	;wreg free
  1066                           
  1067                           ;profile.c: 57: display_string_LCD("Introduce Psswd");
  1068  001232  0E12               	movlw	low STR_15
  1069  001234  6E25               	movwf	display_string_LCD@data,c
  1070  001236  0E0D               	movlw	high STR_15
  1071  001238  6E26               	movwf	display_string_LCD@data+1,c
  1072  00123A  EC7B  F009         	call	_display_string_LCD	;wreg free
  1073                           
  1074                           ;profile.c: 58: second_line_LCD();
  1075  00123E  EC1F  F00A         	call	_second_line_LCD	;wreg free
  1076                           
  1077                           ;profile.c: 59: display_string_LCD("Only two keys");
  1078  001242  0E80               	movlw	low STR_16
  1079  001244  6E25               	movwf	display_string_LCD@data,c
  1080  001246  0E0D               	movlw	high STR_16
  1081  001248  6E26               	movwf	display_string_LCD@data+1,c
  1082  00124A  EC7B  F009         	call	_display_string_LCD	;wreg free
  1083  00124E                     l1419:
  1084                           
  1085                           ;profile.c: 61: writePassword(obtainedKey(),0x00+1);
  1086  00124E  0E01               	movlw	1
  1087  001250  6E27               	movwf	writePassword@address,c
  1088  001252  ECA7  F009         	call	_obtainedKey	;wreg free
  1089  001256  EC04  F00A         	call	_writePassword
  1090                           
  1091                           ;profile.c: 62: i++;
  1092  00125A  4A29               	infsnz	profile@i,f,c
  1093  00125C  2A2A               	incf	profile@i+1,f,c
  1094                           
  1095                           ;profile.c: 63: }while(i<2);
  1096  00125E  502A               	movf	profile@i+1,w,c
  1097  001260  E104               	bnz	l1425
  1098  001262  0E02               	movlw	2
  1099  001264  5C29               	subwf	profile@i,w,c
  1100  001266  A0D8               	btfss	status,0,c
  1101  001268  D7F2               	goto	l1419
  1102  00126A                     l1425:
  1103                           
  1104                           ;profile.c: 64: clear_LCD();
  1105  00126A  EC30  F00A         	call	_clear_LCD	;wreg free
  1106                           
  1107                           ;profile.c: 65: first_line_LCD();
  1108  00126E  EC25  F00A         	call	_first_line_LCD	;wreg free
  1109  001272  0012               	return		;funcret
  1110  001274                     __end_of_profile:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           intcon	equ	0xFF2
  1115                           intcon2	equ	0xFF1
  1116                           intcon3	equ	0xFF0
  1117                           wreg	equ	0xFE8
  1118                           status	equ	0xFD8
  1119                           
  1120 ;; *************** function _writePassword *****************
  1121 ;; Defined at:
  1122 ;;		line 45 in file "profile.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  value           1    wreg     unsigned char 
  1125 ;;  address         1   38[COMRAM] unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  value           1   39[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		_eeprom_w
  1146 ;; This function is called by:
  1147 ;;		_profile
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text5
  1152  001408                     __ptext5:
  1153                           	opt stack 0
  1154  001408                     _writePassword:
  1155                           	opt stack 26
  1156                           
  1157                           ;incstack = 0
  1158                           ;writePassword@value stored from wreg
  1159  001408  6E28               	movwf	writePassword@value,c
  1160                           
  1161                           ;profile.c: 46: eeprom_w(address, value);
  1162  00140A  C027  F024         	movff	writePassword@address,eeprom_w@address
  1163  00140E  6A25               	clrf	eeprom_w@address+1,c
  1164  001410  C028  F026         	movff	writePassword@value,eeprom_w@value
  1165  001414  EC93  F009         	call	_eeprom_w	;wreg free
  1166  001418  0012               	return		;funcret
  1167  00141A                     __end_of_writePassword:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           intcon	equ	0xFF2
  1172                           intcon2	equ	0xFF1
  1173                           intcon3	equ	0xFF0
  1174                           wreg	equ	0xFE8
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _eeprom_w *****************
  1178 ;; Defined at:
  1179 ;;		line 24 in file "profile.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  address         2   35[COMRAM] unsigned int 
  1182 ;;  value           1   37[COMRAM] unsigned char 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1194 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;Total ram usage:        3 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    2
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_writePassword
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text6
  1209  001326                     __ptext6:
  1210                           	opt stack 0
  1211  001326                     _eeprom_w:
  1212                           	opt stack 26
  1213                           
  1214                           ;profile.c: 25: EEADR = address;
  1215                           
  1216                           ;incstack = 0
  1217  001326  C024  FFA9         	movff	eeprom_w@address,4009	;volatile
  1218                           
  1219                           ;profile.c: 26: EEADRH = address >> 8;
  1220  00132A  5025               	movf	eeprom_w@address+1,w,c
  1221  00132C  6EAA               	movwf	4010,c	;volatile
  1222                           
  1223                           ;profile.c: 27: EEDATA = value;
  1224  00132E  C026  FFA8         	movff	eeprom_w@value,4008	;volatile
  1225                           
  1226                           ;profile.c: 28: EECON1bits.EEPGD =0;
  1227  001332  9EA6               	bcf	4006,7,c	;volatile
  1228                           
  1229                           ;profile.c: 29: EECON1bits.CFGS = 0;
  1230  001334  9CA6               	bcf	4006,6,c	;volatile
  1231                           
  1232                           ;profile.c: 30: EECON1bits.WREN = 1;
  1233  001336  84A6               	bsf	4006,2,c	;volatile
  1234                           
  1235                           ;profile.c: 31: INTCONbits.GIE = 0 ;
  1236  001338  9EF2               	bcf	intcon,7,c	;volatile
  1237                           
  1238                           ;profile.c: 32: EECON2 = 0x55;
  1239  00133A  0E55               	movlw	85
  1240  00133C  6EA7               	movwf	4007,c	;volatile
  1241                           
  1242                           ;profile.c: 33: EECON2 = 0xAA;
  1243  00133E  0EAA               	movlw	170
  1244  001340  6EA7               	movwf	4007,c	;volatile
  1245                           
  1246                           ;profile.c: 34: EECON1bits.WR = 1;
  1247  001342  82A6               	bsf	4006,1,c	;volatile
  1248  001344                     l216:
  1249  001344  B2A6               	btfsc	4006,1,c	;volatile
  1250  001346  D7FE               	goto	l216
  1251                           
  1252                           ;profile.c: 36: INTCONbits.GIE = 1;
  1253  001348  8EF2               	bsf	intcon,7,c	;volatile
  1254                           
  1255                           ;profile.c: 37: EECON1bits.WREN = 0;
  1256  00134A  94A6               	bcf	4006,2,c	;volatile
  1257  00134C  0012               	return		;funcret
  1258  00134E                     __end_of_eeprom_w:
  1259                           	opt stack 0
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           intcon	equ	0xFF2
  1263                           intcon2	equ	0xFF1
  1264                           intcon3	equ	0xFF0
  1265                           wreg	equ	0xFE8
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _menu *****************
  1269 ;; Defined at:
  1270 ;;		line 21 in file "menu.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    4
  1291 ;; This function calls:
  1292 ;;		_clear_LCD
  1293 ;;		_close
  1294 ;;		_display_LCD
  1295 ;;		_display_string_LCD
  1296 ;;		_first_line_LCD
  1297 ;;		_obtainedKey
  1298 ;;		_open
  1299 ;;		_readPassword
  1300 ;;		_ready_LCD
  1301 ;;		_second_line_LCD
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text7
  1308  001016                     __ptext7:
  1309                           	opt stack 0
  1310  001016                     _menu:
  1311                           	opt stack 26
  1312  001016                     
  1313                           ;menu.c: 23: flag = 0;
  1314  001016  0E00               	movlw	0
  1315  001018  6E2D               	movwf	_flag,c
  1316                           
  1317                           ;menu.c: 24: if(obtainedKey() == '1'){
  1318  00101A  ECA7  F009         	call	_obtainedKey	;wreg free
  1319  00101E  0A31               	xorlw	49
  1320  001020  A4D8               	btfss	status,2,c
  1321  001022  D04C               	goto	l1491
  1322                           
  1323                           ;menu.c: 25: clear_LCD();
  1324  001024  EC30  F00A         	call	_clear_LCD	;wreg free
  1325                           
  1326                           ;menu.c: 26: first_line_LCD();
  1327  001028  EC25  F00A         	call	_first_line_LCD	;wreg free
  1328                           
  1329                           ;menu.c: 27: display_string_LCD("1.Unlock 2.Lock");
  1330  00102C  0E42               	movlw	low STR_6
  1331  00102E  6E25               	movwf	display_string_LCD@data,c
  1332  001030  0E0D               	movlw	high STR_6
  1333  001032  6E26               	movwf	display_string_LCD@data+1,c
  1334  001034  EC7B  F009         	call	_display_string_LCD	;wreg free
  1335                           
  1336                           ;menu.c: 28: if(obtainedKey() == '1'){
  1337  001038  ECA7  F009         	call	_obtainedKey	;wreg free
  1338  00103C  0A31               	xorlw	49
  1339  00103E  A4D8               	btfss	status,2,c
  1340  001040  D01C               	goto	l1477
  1341                           
  1342                           ;menu.c: 29: open();
  1343  001042  EC34  F00A         	call	_open	;wreg free
  1344                           
  1345                           ;menu.c: 30: clear_LCD();
  1346  001046  EC30  F00A         	call	_clear_LCD	;wreg free
  1347                           
  1348                           ;menu.c: 31: first_line_LCD();
  1349  00104A  EC25  F00A         	call	_first_line_LCD	;wreg free
  1350                           
  1351                           ;menu.c: 32: display_string_LCD("-Door Unlocked-");
  1352  00104E  0E32               	movlw	low STR_7
  1353  001050  6E25               	movwf	display_string_LCD@data,c
  1354  001052  0E0D               	movlw	high STR_7
  1355  001054  6E26               	movwf	display_string_LCD@data+1,c
  1356  001056  EC7B  F009         	call	_display_string_LCD	;wreg free
  1357                           
  1358                           ;menu.c: 33: second_line_LCD();
  1359  00105A  EC1F  F00A         	call	_second_line_LCD	;wreg free
  1360                           
  1361                           ;menu.c: 34: display_string_LCD("A to GoBack");
  1362  00105E  0EC5               	movlw	low STR_8
  1363  001060  6E25               	movwf	display_string_LCD@data,c
  1364  001062  0E0D               	movlw	high STR_8
  1365  001064  6E26               	movwf	display_string_LCD@data+1,c
  1366  001066  EC7B  F009         	call	_display_string_LCD	;wreg free
  1367                           
  1368                           ;menu.c: 35: if(obtainedKey() == 'A'){
  1369  00106A  ECA7  F009         	call	_obtainedKey	;wreg free
  1370  00106E  0A41               	xorlw	65
  1371  001070  A4D8               	btfss	status,2,c
  1372  001072  D7D1               	goto	l1455
  1373                           
  1374                           ;menu.c: 36: clear_LCD();
  1375  001074  EC30  F00A         	call	_clear_LCD	;wreg free
  1376                           
  1377                           ;menu.c: 37: return;
  1378  001078  0012               	return	
  1379  00107A                     l1477:
  1380  00107A  ECA7  F009         	call	_obtainedKey	;wreg free
  1381  00107E  0A32               	xorlw	50
  1382  001080  A4D8               	btfss	status,2,c
  1383  001082  D7C9               	goto	l1455
  1384                           
  1385                           ;menu.c: 40: close();
  1386  001084  EC37  F00A         	call	_close	;wreg free
  1387                           
  1388                           ;menu.c: 41: clear_LCD();
  1389  001088  EC30  F00A         	call	_clear_LCD	;wreg free
  1390                           
  1391                           ;menu.c: 42: first_line_LCD();
  1392  00108C  EC25  F00A         	call	_first_line_LCD	;wreg free
  1393                           
  1394                           ;menu.c: 43: display_string_LCD("-Door Locked-");
  1395  001090  0E8E               	movlw	low STR_9
  1396  001092  6E25               	movwf	display_string_LCD@data,c
  1397  001094  0E0D               	movlw	high STR_9
  1398  001096  6E26               	movwf	display_string_LCD@data+1,c
  1399  001098  EC7B  F009         	call	_display_string_LCD	;wreg free
  1400                           
  1401                           ;menu.c: 44: second_line_LCD();
  1402  00109C  EC1F  F00A         	call	_second_line_LCD	;wreg free
  1403                           
  1404                           ;menu.c: 45: display_string_LCD("A to GoBack");
  1405  0010A0  0EC5               	movlw	low STR_8
  1406  0010A2  6E25               	movwf	display_string_LCD@data,c
  1407  0010A4  0E0D               	movlw	high STR_8
  1408  0010A6  6E26               	movwf	display_string_LCD@data+1,c
  1409  0010A8  EC7B  F009         	call	_display_string_LCD	;wreg free
  1410                           
  1411                           ;menu.c: 46: if(obtainedKey() == 'A'){
  1412  0010AC  ECA7  F009         	call	_obtainedKey	;wreg free
  1413  0010B0  0A41               	xorlw	65
  1414  0010B2  A4D8               	btfss	status,2,c
  1415  0010B4  D7B0               	goto	l1455
  1416                           
  1417                           ;menu.c: 47: clear_LCD();
  1418  0010B6  EC30  F00A         	call	_clear_LCD	;wreg free
  1419                           
  1420                           ;menu.c: 48: return;
  1421  0010BA  0012               	return	
  1422  0010BC                     l1491:
  1423  0010BC  ECA7  F009         	call	_obtainedKey	;wreg free
  1424  0010C0  0A32               	xorlw	50
  1425  0010C2  A4D8               	btfss	status,2,c
  1426  0010C4  D7A8               	goto	l1455
  1427                           
  1428                           ;menu.c: 52: clear_LCD();
  1429  0010C6  EC30  F00A         	call	_clear_LCD	;wreg free
  1430                           
  1431                           ;menu.c: 53: ready_LCD();
  1432  0010CA  ECB7  F009         	call	_ready_LCD	;wreg free
  1433                           
  1434                           ;menu.c: 54: display_string_LCD("Bye user ");
  1435  0010CE  0ED1               	movlw	low STR_11
  1436  0010D0  6E25               	movwf	display_string_LCD@data,c
  1437  0010D2  0E0D               	movlw	high STR_11
  1438  0010D4  6E26               	movwf	display_string_LCD@data+1,c
  1439  0010D6  EC7B  F009         	call	_display_string_LCD	;wreg free
  1440                           
  1441                           ;menu.c: 55: display_LCD(readPassword(0x20));
  1442  0010DA  0E20               	movlw	32
  1443  0010DC  EC0D  F00A         	call	_readPassword
  1444  0010E0  ECC5  F009         	call	_display_LCD
  1445                           
  1446                           ;menu.c: 56: second_line_LCD();
  1447  0010E4  EC1F  F00A         	call	_second_line_LCD	;wreg free
  1448                           
  1449                           ;menu.c: 57: display_string_LCD("Alarm Active");
  1450  0010E8  0EB8               	movlw	low STR_12
  1451  0010EA  6E25               	movwf	display_string_LCD@data,c
  1452  0010EC  0E0D               	movlw	high STR_12
  1453  0010EE  6E26               	movwf	display_string_LCD@data+1,c
  1454  0010F0  EC7B  F009         	call	_display_string_LCD	;wreg free
  1455                           
  1456                           ;menu.c: 58: _delay((unsigned long)((2500)*(8000000/4000.0)));
  1457  0010F4  0E1A               	movlw	26
  1458  0010F6  6E29               	movwf	(??_menu+1)& (0+255),c
  1459  0010F8  0E5E               	movlw	94
  1460  0010FA  6E28               	movwf	??_menu& (0+255),c
  1461  0010FC  0E6E               	movlw	110
  1462  0010FE                     u637:
  1463  0010FE  2EE8               	decfsz	wreg,f,c
  1464  001100  D7FE               	bra	u637
  1465  001102  2E28               	decfsz	??_menu& (0+255),f,c
  1466  001104  D7FC               	bra	u637
  1467  001106  2E29               	decfsz	(??_menu+1)& (0+255),f,c
  1468  001108  D7FA               	bra	u637
  1469  00110A  D000               	nop2	
  1470                           
  1471                           ;menu.c: 59: flag = 1;
  1472  00110C  0E01               	movlw	1
  1473  00110E  6E2D               	movwf	_flag,c
  1474                           
  1475                           ;menu.c: 60: return;
  1476  001110  0012               	return	
  1477  001112                     __end_of_menu:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           intcon	equ	0xFF2
  1482                           intcon2	equ	0xFF1
  1483                           intcon3	equ	0xFF0
  1484                           wreg	equ	0xFE8
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _second_line_LCD *****************
  1488 ;; Defined at:
  1489 ;;		line 80 in file "lcdCon.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    3
  1510 ;; This function calls:
  1511 ;;		_command_LCD
  1512 ;;		_ready_LCD
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;;		_menu
  1516 ;;		_profile
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text8
  1521  00143E                     __ptext8:
  1522                           	opt stack 0
  1523  00143E                     _second_line_LCD:
  1524                           	opt stack 27
  1525                           
  1526                           ;lcdCon.c: 81: command_LCD(0xC0);
  1527                           
  1528                           ;incstack = 0
  1529  00143E  0EC0               	movlw	192
  1530  001440  ECD1  F009         	call	_command_LCD
  1531                           
  1532                           ;lcdCon.c: 82: ready_LCD();
  1533  001444  ECB7  F009         	call	_ready_LCD	;wreg free
  1534  001448  0012               	return		;funcret
  1535  00144A                     __end_of_second_line_LCD:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           intcon	equ	0xFF2
  1540                           intcon2	equ	0xFF1
  1541                           intcon3	equ	0xFF0
  1542                           wreg	equ	0xFE8
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _open *****************
  1546 ;; Defined at:
  1547 ;;		line 22 in file "status.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    2
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_menu
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text9
  1576  001468                     __ptext9:
  1577                           	opt stack 0
  1578  001468                     _open:
  1579                           	opt stack 27
  1580                           
  1581                           ;status.c: 23: CCPR1L = 0x5F;
  1582                           
  1583                           ;incstack = 0
  1584  001468  0E5F               	movlw	95
  1585  00146A  6EBE               	movwf	4030,c	;volatile
  1586  00146C  0012               	return		;funcret
  1587  00146E                     __end_of_open:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           intcon	equ	0xFF2
  1592                           intcon2	equ	0xFF1
  1593                           intcon3	equ	0xFF0
  1594                           wreg	equ	0xFE8
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _first_line_LCD *****************
  1598 ;; Defined at:
  1599 ;;		line 76 in file "lcdCon.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    3
  1620 ;; This function calls:
  1621 ;;		_command_LCD
  1622 ;;		_ready_LCD
  1623 ;; This function is called by:
  1624 ;;		_menu
  1625 ;;		_profile
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text10
  1630  00144A                     __ptext10:
  1631                           	opt stack 0
  1632  00144A                     _first_line_LCD:
  1633                           	opt stack 26
  1634                           
  1635                           ;lcdCon.c: 77: command_LCD(0x20);
  1636                           
  1637                           ;incstack = 0
  1638  00144A  0E20               	movlw	32
  1639  00144C  ECD1  F009         	call	_command_LCD
  1640                           
  1641                           ;lcdCon.c: 78: ready_LCD();
  1642  001450  ECB7  F009         	call	_ready_LCD	;wreg free
  1643  001454  0012               	return		;funcret
  1644  001456                     __end_of_first_line_LCD:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           intcon	equ	0xFF2
  1649                           intcon2	equ	0xFF1
  1650                           intcon3	equ	0xFF0
  1651                           wreg	equ	0xFE8
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _display_string_LCD *****************
  1655 ;; Defined at:
  1656 ;;		line 69 in file "lcdCon.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  data            2   36[COMRAM] PTR unsigned char 
  1659 ;;		 -> STR_16(14), STR_15(16), STR_14(17), STR_13(16), 
  1660 ;;		 -> STR_12(13), STR_11(10), STR_10(12), STR_9(14), 
  1661 ;;		 -> STR_8(12), STR_7(16), STR_6(16), STR_5(16), 
  1662 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    3
  1681 ;; This function calls:
  1682 ;;		_display_LCD
  1683 ;;		_ready_LCD
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;;		_welcome
  1687 ;;		_menu
  1688 ;;		_profile
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text11
  1693  0012F6                     __ptext11:
  1694                           	opt stack 0
  1695  0012F6                     _display_string_LCD:
  1696                           	opt stack 26
  1697                           
  1698                           ;lcdCon.c: 70: PORTAbits.RA1 = 1;
  1699                           
  1700                           ;incstack = 0
  1701  0012F6  8280               	bsf	3968,1,c	;volatile
  1702                           
  1703                           ;lcdCon.c: 71: while(*data){
  1704  0012F8  D00A               	goto	l1391
  1705  0012FA                     l1387:
  1706                           
  1707                           ;lcdCon.c: 72: display_LCD(*data++);
  1708  0012FA  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1709  0012FE  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1710  001302                     	if	0	;tblptru may be non-zero
  1711  001302                     	endif
  1712  001302                     	if	0	;tblptru may be non-zero
  1713  001302                     	endif
  1714  001302  0008               	tblrd		*
  1715  001304  50F5               	movf	tablat,w,c
  1716  001306  ECC5  F009         	call	_display_LCD
  1717  00130A  4A25               	infsnz	display_string_LCD@data,f,c
  1718  00130C  2A26               	incf	display_string_LCD@data+1,f,c
  1719  00130E                     l1391:
  1720  00130E  C025  FFF6         	movff	display_string_LCD@data,tblptrl
  1721  001312  C026  FFF7         	movff	display_string_LCD@data+1,tblptrh
  1722  001316                     	if	0	;tblptru may be non-zero
  1723  001316                     	endif
  1724  001316                     	if	0	;tblptru may be non-zero
  1725  001316                     	endif
  1726  001316  0008               	tblrd		*
  1727  001318  50F5               	movf	tablat,w,c
  1728  00131A  0900               	iorlw	0
  1729  00131C  A4D8               	btfss	status,2,c
  1730  00131E  D7ED               	goto	l1387
  1731                           
  1732                           ;lcdCon.c: 73: }
  1733                           ;lcdCon.c: 74: ready_LCD();
  1734  001320  ECB7  F009         	call	_ready_LCD	;wreg free
  1735  001324  0012               	return		;funcret
  1736  001326                     __end_of_display_string_LCD:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           intcon	equ	0xFF2
  1743                           intcon2	equ	0xFF1
  1744                           intcon3	equ	0xFF0
  1745                           wreg	equ	0xFE8
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _ready_LCD *****************
  1749 ;; Defined at:
  1750 ;;		line 48 in file "lcdCon.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    2
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;;		_setup_LCD
  1776 ;;		_display_string_LCD
  1777 ;;		_first_line_LCD
  1778 ;;		_second_line_LCD
  1779 ;;		_welcome
  1780 ;;		_menu
  1781 ;;		_profile
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text12
  1786  00136E                     __ptext12:
  1787                           	opt stack 0
  1788  00136E                     _ready_LCD:
  1789                           	opt stack 27
  1790                           
  1791                           ;lcdCon.c: 49: TRISD = 0xFF;
  1792                           
  1793                           ;incstack = 0
  1794  00136E  6895               	setf	3989,c	;volatile
  1795                           
  1796                           ;lcdCon.c: 50: PORTAbits.RA1 = 0;
  1797  001370  9280               	bcf	3968,1,c	;volatile
  1798                           
  1799                           ;lcdCon.c: 51: PORTAbits.RA2 = 1;
  1800  001372  8480               	bsf	3968,2,c	;volatile
  1801  001374                     l123:
  1802                           
  1803                           ;lcdCon.c: 53: PORTAbits.RA3 = 1;
  1804  001374  8680               	bsf	3968,3,c	;volatile
  1805                           
  1806                           ;lcdCon.c: 54: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1807  001376  0EB4               	movlw	180
  1808  001378                     u647:
  1809  001378  D000               	nop2	
  1810  00137A  2EE8               	decfsz	wreg,f,c
  1811  00137C  D7FD               	bra	u647
  1812                           
  1813                           ;lcdCon.c: 55: PORTAbits.RA3 = 0;
  1814  00137E  9680               	bcf	3968,3,c	;volatile
  1815                           
  1816                           ;lcdCon.c: 56: }while(PORTDbits.RD7 == 1);
  1817  001380  BE83               	btfsc	3971,7,c	;volatile
  1818  001382  D7F8               	goto	l123
  1819                           
  1820                           ;lcdCon.c: 57: TRISD = 0x00;
  1821  001384  0E00               	movlw	0
  1822  001386  6E95               	movwf	3989,c	;volatile
  1823  001388  0012               	return		;funcret
  1824  00138A                     __end_of_ready_LCD:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           intcon	equ	0xFF2
  1831                           intcon2	equ	0xFF1
  1832                           intcon3	equ	0xFF0
  1833                           wreg	equ	0xFE8
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function _display_LCD *****************
  1837 ;; Defined at:
  1838 ;;		line 60 in file "lcdCon.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  data            1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  data            1   35[COMRAM] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;Total ram usage:        1 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    2
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;;		_display_string_LCD
  1864 ;;		_menu
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text13
  1869  00138A                     __ptext13:
  1870                           	opt stack 0
  1871  00138A                     _display_LCD:
  1872                           	opt stack 26
  1873                           
  1874                           ;incstack = 0
  1875                           ;display_LCD@data stored from wreg
  1876  00138A  6E24               	movwf	display_LCD@data,c
  1877                           
  1878                           ;lcdCon.c: 61: PORTD = data;
  1879  00138C  C024  FF83         	movff	display_LCD@data,3971	;volatile
  1880                           
  1881                           ;lcdCon.c: 62: PORTAbits.RA1 = 1;
  1882  001390  8280               	bsf	3968,1,c	;volatile
  1883                           
  1884                           ;lcdCon.c: 63: PORTAbits.RA2 = 0;
  1885  001392  9480               	bcf	3968,2,c	;volatile
  1886                           
  1887                           ;lcdCon.c: 64: PORTAbits.RA3 = 1;
  1888  001394  8680               	bsf	3968,3,c	;volatile
  1889                           
  1890                           ;lcdCon.c: 65: _delay((unsigned long)((.45)*(8000000/4000.0)));
  1891  001396  0EB4               	movlw	180
  1892  001398                     u657:
  1893  001398  D000               	nop2	
  1894  00139A  2EE8               	decfsz	wreg,f,c
  1895  00139C  D7FD               	bra	u657
  1896                           
  1897                           ;lcdCon.c: 66: PORTAbits.RA3 = 0;
  1898  00139E  9680               	bcf	3968,3,c	;volatile
  1899  0013A0  0012               	return		;funcret
  1900  0013A2                     __end_of_display_LCD:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           intcon	equ	0xFF2
  1907                           intcon2	equ	0xFF1
  1908                           intcon3	equ	0xFF0
  1909                           wreg	equ	0xFE8
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _close *****************
  1913 ;; Defined at:
  1914 ;;		line 25 in file "status.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    2
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_menu
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text14
  1943  00146E                     __ptext14:
  1944                           	opt stack 0
  1945  00146E                     _close:
  1946                           	opt stack 27
  1947                           
  1948                           ;status.c: 26: CCPR1L = 0x1F;
  1949                           
  1950                           ;incstack = 0
  1951  00146E  0E1F               	movlw	31
  1952  001470  6EBE               	movwf	4030,c	;volatile
  1953  001472  0012               	return		;funcret
  1954  001474                     __end_of_close:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           intcon	equ	0xFF2
  1961                           intcon2	equ	0xFF1
  1962                           intcon3	equ	0xFF0
  1963                           wreg	equ	0xFE8
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _clear_LCD *****************
  1967 ;; Defined at:
  1968 ;;		line 84 in file "lcdCon.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    3
  1989 ;; This function calls:
  1990 ;;		_command_LCD
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;;		_menu
  1994 ;;		_profile
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text15
  1999  001460                     __ptext15:
  2000                           	opt stack 0
  2001  001460                     _clear_LCD:
  2002                           	opt stack 26
  2003                           
  2004                           ;lcdCon.c: 85: command_LCD(0x01);
  2005                           
  2006                           ;incstack = 0
  2007  001460  0E01               	movlw	1
  2008  001462  ECD1  F009         	call	_command_LCD
  2009  001466  0012               	return		;funcret
  2010  001468                     __end_of_clear_LCD:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           intcon	equ	0xFF2
  2017                           intcon2	equ	0xFF1
  2018                           intcon3	equ	0xFF0
  2019                           wreg	equ	0xFE8
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _command_LCD *****************
  2023 ;; Defined at:
  2024 ;;		line 39 in file "lcdCon.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  x               1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  x               1   35[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    2
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_setup_LCD
  2049 ;;		_first_line_LCD
  2050 ;;		_second_line_LCD
  2051 ;;		_clear_LCD
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text16
  2056  0013A2                     __ptext16:
  2057                           	opt stack 0
  2058  0013A2                     _command_LCD:
  2059                           	opt stack 27
  2060                           
  2061                           ;incstack = 0
  2062                           ;command_LCD@x stored from wreg
  2063  0013A2  6E24               	movwf	command_LCD@x,c
  2064                           
  2065                           ;lcdCon.c: 40: PORTD = x;
  2066  0013A4  C024  FF83         	movff	command_LCD@x,3971	;volatile
  2067                           
  2068                           ;lcdCon.c: 41: PORTAbits.RA1 = 0;
  2069  0013A8  9280               	bcf	3968,1,c	;volatile
  2070                           
  2071                           ;lcdCon.c: 42: PORTAbits.RA2 = 0;
  2072  0013AA  9480               	bcf	3968,2,c	;volatile
  2073                           
  2074                           ;lcdCon.c: 43: PORTAbits.RA3 = 1;
  2075  0013AC  8680               	bsf	3968,3,c	;volatile
  2076                           
  2077                           ;lcdCon.c: 44: _delay((unsigned long)((.45)*(8000000/4000.0)));
  2078  0013AE  0EB4               	movlw	180
  2079  0013B0                     u667:
  2080  0013B0  D000               	nop2	
  2081  0013B2  2EE8               	decfsz	wreg,f,c
  2082  0013B4  D7FD               	bra	u667
  2083                           
  2084                           ;lcdCon.c: 45: PORTAbits.RA3 = 0;
  2085  0013B6  9680               	bcf	3968,3,c	;volatile
  2086  0013B8  0012               	return		;funcret
  2087  0013BA                     __end_of_command_LCD:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           intcon	equ	0xFF2
  2094                           intcon2	equ	0xFF1
  2095                           intcon3	equ	0xFF0
  2096                           wreg	equ	0xFE8
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _checkPassword *****************
  2100 ;; Defined at:
  2101 ;;		line 67 in file "profile.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  pass            1   39[COMRAM] unsigned char 
  2106 ;;  i               1   40[COMRAM] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      unsigned char 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;Total ram usage:        2 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    4
  2123 ;; This function calls:
  2124 ;;		_obtainedKey
  2125 ;;		_readPassword
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text17
  2132  0012BE                     __ptext17:
  2133                           	opt stack 0
  2134  0012BE                     _checkPassword:
  2135                           	opt stack 26
  2136                           
  2137                           ;profile.c: 68: unsigned char i = 0;
  2138                           
  2139                           ;incstack = 0
  2140  0012BE  0E00               	movlw	0
  2141  0012C0  6E29               	movwf	checkPassword@i,c
  2142  0012C2                     l1429:
  2143                           
  2144                           ;profile.c: 71: unsigned char pass = readPassword(0x00+1);
  2145  0012C2  0E01               	movlw	1
  2146  0012C4  EC0D  F00A         	call	_readPassword
  2147  0012C8  6E28               	movwf	checkPassword@pass,c
  2148                           
  2149                           ;profile.c: 72: if(obtainedKey() == pass){
  2150  0012CA  ECA7  F009         	call	_obtainedKey	;wreg free
  2151  0012CE  1828               	xorwf	checkPassword@pass,w,c
  2152  0012D0  A4D8               	btfss	status,2,c
  2153  0012D2  D002               	goto	l1439
  2154                           
  2155                           ;profile.c: 73: return 1;
  2156  0012D4  0E01               	movlw	1
  2157  0012D6  0012               	return	
  2158  0012D8                     l1439:
  2159  0012D8  0E02               	movlw	2
  2160  0012DA  6029               	cpfslt	checkPassword@i,c
  2161  0012DC  D007               	goto	l1447
  2162  0012DE  ECA7  F009         	call	_obtainedKey	;wreg free
  2163  0012E2  1828               	xorwf	checkPassword@pass,w,c
  2164  0012E4  B4D8               	btfsc	status,2,c
  2165  0012E6  D002               	goto	l1447
  2166                           
  2167                           ;profile.c: 75: return 0;
  2168  0012E8  0E00               	movlw	0
  2169  0012EA  0012               	return	
  2170  0012EC                     l1447:
  2171                           
  2172                           ;profile.c: 76: }
  2173                           ;profile.c: 77: i++;
  2174  0012EC  2A29               	incf	checkPassword@i,f,c
  2175                           
  2176                           ;profile.c: 78: }while(i<2);
  2177  0012EE  0E01               	movlw	1
  2178  0012F0  6429               	cpfsgt	checkPassword@i,c
  2179  0012F2  D7E7               	goto	l1429
  2180  0012F4  0012               	return	
  2181  0012F6                     __end_of_checkPassword:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           intcon	equ	0xFF2
  2188                           intcon2	equ	0xFF1
  2189                           intcon3	equ	0xFF0
  2190                           wreg	equ	0xFE8
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _readPassword *****************
  2194 ;; Defined at:
  2195 ;;		line 40 in file "profile.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  address         1    wreg     unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  address         1   37[COMRAM] unsigned char 
  2200 ;;  value           1   38[COMRAM] volatile unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      unsigned char 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;Total ram usage:        2 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		_eeprom_r
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;;		_menu
  2222 ;;		_checkPassword
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text18
  2227  00141A                     __ptext18:
  2228                           	opt stack 0
  2229  00141A                     _readPassword:
  2230                           	opt stack 27
  2231                           
  2232                           ;incstack = 0
  2233                           ;readPassword@address stored from wreg
  2234  00141A  6E26               	movwf	readPassword@address,c
  2235                           
  2236                           ;profile.c: 41: volatile unsigned char value;
  2237                           ;profile.c: 42: value = eeprom_r(address);
  2238  00141C  C026  F024         	movff	readPassword@address,eeprom_r@address
  2239  001420  6A25               	clrf	eeprom_r@address+1,c
  2240  001422  ECDD  F009         	call	_eeprom_r	;wreg free
  2241  001426  6E27               	movwf	readPassword@value,c	;volatile
  2242                           
  2243                           ;profile.c: 43: return value;
  2244  001428  5027               	movf	readPassword@value,w,c	;volatile
  2245  00142A  0012               	return	
  2246  00142C                     __end_of_readPassword:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           intcon	equ	0xFF2
  2253                           intcon2	equ	0xFF1
  2254                           intcon3	equ	0xFF0
  2255                           wreg	equ	0xFE8
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _eeprom_r *****************
  2259 ;; Defined at:
  2260 ;;		line 14 in file "profile.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  address         2   35[COMRAM] unsigned int 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_readPassword
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text19
  2289  0013BA                     __ptext19:
  2290                           	opt stack 0
  2291  0013BA                     _eeprom_r:
  2292                           	opt stack 27
  2293                           
  2294                           ;profile.c: 15: EEADR = address;
  2295                           
  2296                           ;incstack = 0
  2297  0013BA  C024  FFA9         	movff	eeprom_r@address,4009	;volatile
  2298                           
  2299                           ;profile.c: 16: EEADRH = address >> 8;
  2300  0013BE  5025               	movf	eeprom_r@address+1,w,c
  2301  0013C0  6EAA               	movwf	4010,c	;volatile
  2302                           
  2303                           ;profile.c: 17: EECON1bits.CFGS = 0;
  2304  0013C2  9CA6               	bcf	4006,6,c	;volatile
  2305                           
  2306                           ;profile.c: 18: EECON1bits.EEPGD = 0;
  2307  0013C4  9EA6               	bcf	4006,7,c	;volatile
  2308                           
  2309                           ;profile.c: 19: EECON1bits.RD = 1;
  2310  0013C6  80A6               	bsf	4006,0,c	;volatile
  2311                           
  2312                           ;profile.c: 20: __nop();
  2313  0013C8  F000               	nop	
  2314                           
  2315                           ;profile.c: 21: __nop();
  2316  0013CA  F000               	nop	
  2317                           
  2318                           ;profile.c: 22: return EEDATA;
  2319  0013CC  50A8               	movf	4008,w,c	;volatile
  2320  0013CE  0012               	return	
  2321  0013D0                     __end_of_eeprom_r:
  2322                           	opt stack 0
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           intcon	equ	0xFF2
  2328                           intcon2	equ	0xFF1
  2329                           intcon3	equ	0xFF0
  2330                           wreg	equ	0xFE8
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _alarm *****************
  2334 ;; Defined at:
  2335 ;;		line 12 in file "alarm.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    4
  2356 ;; This function calls:
  2357 ;;		_obtainedKey
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text20
  2364  00142C                     __ptext20:
  2365                           	opt stack 0
  2366  00142C                     _alarm:
  2367                           	opt stack 26
  2368  00142C                     l304:
  2369                           
  2370                           ;alarm.c: 14: PORTEbits.RE1 = 1;
  2371  00142C  8284               	bsf	3972,1,c	;volatile
  2372                           
  2373                           ;alarm.c: 16: if(PORTBbits.RB0 != 0){
  2374  00142E  B081               	btfsc	3969,0,c	;volatile
  2375                           
  2376                           ;alarm.c: 17: PORTAbits.RA0 = 1;
  2377  001430  8080               	bsf	3968,0,c	;volatile
  2378                           
  2379                           ;alarm.c: 18: }
  2380                           ;alarm.c: 19: if(obtainedKey()){
  2381  001432  ECA7  F009         	call	_obtainedKey	;wreg free
  2382  001436  0900               	iorlw	0
  2383  001438  A4D8               	btfss	status,2,c
  2384  00143A  0012               	return	
  2385  00143C  D7F7               	goto	l304
  2386  00143E                     __end_of_alarm:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           intcon	equ	0xFF2
  2393                           intcon2	equ	0xFF1
  2394                           intcon3	equ	0xFF0
  2395                           wreg	equ	0xFE8
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _obtainedKey *****************
  2399 ;; Defined at:
  2400 ;;		line 73 in file "keypadCon.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  key_presiona    1   36[COMRAM] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;Total ram usage:        1 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    3
  2421 ;; This function calls:
  2422 ;;		_getKey
  2423 ;;		_ground
  2424 ;; This function is called by:
  2425 ;;		_menu
  2426 ;;		_profile
  2427 ;;		_checkPassword
  2428 ;;		_alarm
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text21
  2433  00134E                     __ptext21:
  2434                           	opt stack 0
  2435  00134E                     _obtainedKey:
  2436                           	opt stack 26
  2437                           
  2438                           ;keypadCon.c: 74: ground();
  2439                           
  2440                           ;incstack = 0
  2441  00134E  EC2B  F00A         	call	_ground	;wreg free
  2442                           
  2443                           ;keypadCon.c: 75: unsigned char key_presionada = 0xFF;
  2444  001352  6825               	setf	obtainedKey@key_presionada,c
  2445  001354                     l1103:
  2446                           
  2447                           ;keypadCon.c: 77: key_presionada = getKey();
  2448  001354  EC89  F008         	call	_getKey	;wreg free
  2449  001358  6E25               	movwf	obtainedKey@key_presionada,c
  2450                           
  2451                           ;keypadCon.c: 78: }
  2452                           ;keypadCon.c: 79: while(key_presionada == 0xFF);
  2453  00135A  2825               	incf	obtainedKey@key_presionada,w,c
  2454  00135C  B4D8               	btfsc	status,2,c
  2455  00135E  D7FA               	goto	l1103
  2456  001360                     l1107:
  2457  001360  EC89  F008         	call	_getKey	;wreg free
  2458  001364  0AFF               	xorlw	255
  2459  001366  A4D8               	btfss	status,2,c
  2460  001368  D7FB               	goto	l1107
  2461                           
  2462                           ;keypadCon.c: 82: return key_presionada;
  2463  00136A  5025               	movf	obtainedKey@key_presionada,w,c
  2464  00136C  0012               	return	
  2465  00136E                     __end_of_obtainedKey:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           intcon	equ	0xFF2
  2472                           intcon2	equ	0xFF1
  2473                           intcon3	equ	0xFF0
  2474                           wreg	equ	0xFE8
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function _ground *****************
  2478 ;; Defined at:
  2479 ;;		line 66 in file "keypadCon.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		None
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    2
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_obtainedKey
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text22
  2508  001456                     __ptext22:
  2509                           	opt stack 0
  2510  001456                     _ground:
  2511                           	opt stack 26
  2512                           
  2513                           ;keypadCon.c: 67: LATCbits.LATC0 = 0;
  2514                           
  2515                           ;incstack = 0
  2516  001456  908B               	bcf	3979,0,c	;volatile
  2517                           
  2518                           ;keypadCon.c: 68: LATCbits.LATC1 = 0;
  2519  001458  928B               	bcf	3979,1,c	;volatile
  2520                           
  2521                           ;keypadCon.c: 69: LATEbits.LATE2 = 0;
  2522  00145A  948D               	bcf	3981,2,c	;volatile
  2523                           
  2524                           ;keypadCon.c: 70: LATCbits.LATC3 = 0;
  2525  00145C  968B               	bcf	3979,3,c	;volatile
  2526  00145E  0012               	return		;funcret
  2527  001460                     __end_of_ground:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           intcon	equ	0xFF2
  2534                           intcon2	equ	0xFF1
  2535                           intcon3	equ	0xFF0
  2536                           wreg	equ	0xFE8
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _getKey *****************
  2540 ;; Defined at:
  2541 ;;		line 21 in file "keypadCon.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      unsigned char 
  2548 ;; Registers used:
  2549 ;;		wreg
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;Total ram usage:        1 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_obtainedKey
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text23
  2570  001112                     __ptext23:
  2571                           	opt stack 0
  2572  001112                     _getKey:
  2573                           	opt stack 26
  2574                           
  2575                           ;keypadCon.c: 23: LATCbits.LATC0 = 0;
  2576                           
  2577                           ;incstack = 0
  2578  001112  908B               	bcf	3979,0,c	;volatile
  2579                           
  2580                           ;keypadCon.c: 24: LATCbits.LATC1 = 1;
  2581  001114  828B               	bsf	3979,1,c	;volatile
  2582                           
  2583                           ;keypadCon.c: 25: LATEbits.LATE2 = 1;
  2584  001116  848D               	bsf	3981,2,c	;volatile
  2585                           
  2586                           ;keypadCon.c: 26: LATCbits.LATC3 = 1;
  2587  001118  868B               	bsf	3979,3,c	;volatile
  2588                           
  2589                           ;keypadCon.c: 27: _delay((unsigned long)((25)*(8000000/4000.0)));
  2590  00111A  0E41               	movlw	65
  2591  00111C  6E24               	movwf	??_getKey& (0+255),c
  2592  00111E  0EEE               	movlw	238
  2593  001120                     u677:
  2594  001120  2EE8               	decfsz	wreg,f,c
  2595  001122  D7FE               	bra	u677
  2596  001124  2E24               	decfsz	??_getKey& (0+255),f,c
  2597  001126  D7FC               	bra	u677
  2598  001128  D000               	nop2	
  2599                           
  2600                           ;keypadCon.c: 28: if(PORTCbits.RC4 == 0) return '1';
  2601  00112A  B882               	btfsc	3970,4,c	;volatile
  2602  00112C  D002               	goto	l266
  2603  00112E  0E31               	movlw	49
  2604  001130  0012               	return	
  2605  001132                     l266:
  2606                           
  2607                           ;keypadCon.c: 29: if(PORTCbits.RC5 == 0) return '2';
  2608  001132  BA82               	btfsc	3970,5,c	;volatile
  2609  001134  D002               	goto	l268
  2610  001136  0E32               	movlw	50
  2611  001138  0012               	return	
  2612  00113A                     l268:
  2613                           
  2614                           ;keypadCon.c: 30: if(PORTCbits.RC6 == 0) return '3';
  2615  00113A  BC82               	btfsc	3970,6,c	;volatile
  2616  00113C  D002               	goto	l269
  2617  00113E  0E33               	movlw	51
  2618  001140  0012               	return	
  2619  001142                     l269:
  2620                           
  2621                           ;keypadCon.c: 31: if(PORTCbits.RC7 == 0) return 'A';
  2622  001142  BE82               	btfsc	3970,7,c	;volatile
  2623  001144  D002               	goto	l270
  2624  001146  0E41               	movlw	65
  2625  001148  0012               	return	
  2626  00114A                     l270:
  2627                           
  2628                           ;keypadCon.c: 33: LATCbits.LATC0 = 1;
  2629  00114A  808B               	bsf	3979,0,c	;volatile
  2630                           
  2631                           ;keypadCon.c: 34: LATCbits.LATC1 = 0;
  2632  00114C  928B               	bcf	3979,1,c	;volatile
  2633                           
  2634                           ;keypadCon.c: 35: LATEbits.LATE2 = 1;
  2635  00114E  848D               	bsf	3981,2,c	;volatile
  2636                           
  2637                           ;keypadCon.c: 36: LATCbits.LATC3 = 1;
  2638  001150  868B               	bsf	3979,3,c	;volatile
  2639                           
  2640                           ;keypadCon.c: 37: _delay((unsigned long)((25)*(8000000/4000.0)));
  2641  001152  0E41               	movlw	65
  2642  001154  6E24               	movwf	??_getKey& (0+255),c
  2643  001156  0EEE               	movlw	238
  2644  001158                     u687:
  2645  001158  2EE8               	decfsz	wreg,f,c
  2646  00115A  D7FE               	bra	u687
  2647  00115C  2E24               	decfsz	??_getKey& (0+255),f,c
  2648  00115E  D7FC               	bra	u687
  2649  001160  D000               	nop2	
  2650                           
  2651                           ;keypadCon.c: 38: if(PORTCbits.RC4 == 0) return '4';
  2652  001162  B882               	btfsc	3970,4,c	;volatile
  2653  001164  D002               	goto	l271
  2654  001166  0E34               	movlw	52
  2655  001168  0012               	return	
  2656  00116A                     l271:
  2657                           
  2658                           ;keypadCon.c: 39: if(PORTCbits.RC5 == 0) return '5';
  2659  00116A  BA82               	btfsc	3970,5,c	;volatile
  2660  00116C  D002               	goto	l272
  2661  00116E  0E35               	movlw	53
  2662  001170  0012               	return	
  2663  001172                     l272:
  2664                           
  2665                           ;keypadCon.c: 40: if(PORTCbits.RC6 == 0) return '6';
  2666  001172  BC82               	btfsc	3970,6,c	;volatile
  2667  001174  D002               	goto	l273
  2668  001176  0E36               	movlw	54
  2669  001178  0012               	return	
  2670  00117A                     l273:
  2671                           
  2672                           ;keypadCon.c: 41: if(PORTCbits.RC7 == 0) return 'B';
  2673  00117A  BE82               	btfsc	3970,7,c	;volatile
  2674  00117C  D002               	goto	l274
  2675  00117E  0E42               	movlw	66
  2676  001180  0012               	return	
  2677  001182                     l274:
  2678                           
  2679                           ;keypadCon.c: 43: LATCbits.LATC0 = 1;
  2680  001182  808B               	bsf	3979,0,c	;volatile
  2681                           
  2682                           ;keypadCon.c: 44: LATCbits.LATC1 = 1;
  2683  001184  828B               	bsf	3979,1,c	;volatile
  2684                           
  2685                           ;keypadCon.c: 45: LATEbits.LATE2 = 0;
  2686  001186  948D               	bcf	3981,2,c	;volatile
  2687                           
  2688                           ;keypadCon.c: 46: LATCbits.LATC3 = 1;
  2689  001188  868B               	bsf	3979,3,c	;volatile
  2690                           
  2691                           ;keypadCon.c: 47: _delay((unsigned long)((25)*(8000000/4000.0)));
  2692  00118A  0E41               	movlw	65
  2693  00118C  6E24               	movwf	??_getKey& (0+255),c
  2694  00118E  0EEE               	movlw	238
  2695  001190                     u697:
  2696  001190  2EE8               	decfsz	wreg,f,c
  2697  001192  D7FE               	bra	u697
  2698  001194  2E24               	decfsz	??_getKey& (0+255),f,c
  2699  001196  D7FC               	bra	u697
  2700  001198  D000               	nop2	
  2701                           
  2702                           ;keypadCon.c: 48: if(PORTCbits.RC4 == 0) return '7';
  2703  00119A  B882               	btfsc	3970,4,c	;volatile
  2704  00119C  D002               	goto	l275
  2705  00119E  0E37               	movlw	55
  2706  0011A0  0012               	return	
  2707  0011A2                     l275:
  2708                           
  2709                           ;keypadCon.c: 49: if(PORTCbits.RC5 == 0) return '8';
  2710  0011A2  BA82               	btfsc	3970,5,c	;volatile
  2711  0011A4  D002               	goto	l276
  2712  0011A6  0E38               	movlw	56
  2713  0011A8  0012               	return	
  2714  0011AA                     l276:
  2715                           
  2716                           ;keypadCon.c: 50: if(PORTCbits.RC6 == 0) return '9';
  2717  0011AA  BC82               	btfsc	3970,6,c	;volatile
  2718  0011AC  D002               	goto	l277
  2719  0011AE  0E39               	movlw	57
  2720  0011B0  0012               	return	
  2721  0011B2                     l277:
  2722                           
  2723                           ;keypadCon.c: 51: if(PORTCbits.RC7 == 0) return 'C';
  2724  0011B2  BE82               	btfsc	3970,7,c	;volatile
  2725  0011B4  D002               	goto	l278
  2726  0011B6  0E43               	movlw	67
  2727  0011B8  0012               	return	
  2728  0011BA                     l278:
  2729                           
  2730                           ;keypadCon.c: 53: LATCbits.LATC0 = 1;
  2731  0011BA  808B               	bsf	3979,0,c	;volatile
  2732                           
  2733                           ;keypadCon.c: 54: LATCbits.LATC1 = 1;
  2734  0011BC  828B               	bsf	3979,1,c	;volatile
  2735                           
  2736                           ;keypadCon.c: 55: LATEbits.LATE2 = 1;
  2737  0011BE  848D               	bsf	3981,2,c	;volatile
  2738                           
  2739                           ;keypadCon.c: 56: LATCbits.LATC3 = 0;
  2740  0011C0  968B               	bcf	3979,3,c	;volatile
  2741                           
  2742                           ;keypadCon.c: 57: _delay((unsigned long)((25)*(8000000/4000.0)));
  2743  0011C2  0E41               	movlw	65
  2744  0011C4  6E24               	movwf	??_getKey& (0+255),c
  2745  0011C6  0EEE               	movlw	238
  2746  0011C8                     u707:
  2747  0011C8  2EE8               	decfsz	wreg,f,c
  2748  0011CA  D7FE               	bra	u707
  2749  0011CC  2E24               	decfsz	??_getKey& (0+255),f,c
  2750  0011CE  D7FC               	bra	u707
  2751  0011D0  D000               	nop2	
  2752                           
  2753                           ;keypadCon.c: 58: if(PORTCbits.RC4 == 0) return '*';
  2754  0011D2  B882               	btfsc	3970,4,c	;volatile
  2755  0011D4  D002               	goto	l279
  2756  0011D6  0E2A               	movlw	42
  2757  0011D8  0012               	return	
  2758  0011DA                     l279:
  2759                           
  2760                           ;keypadCon.c: 59: if(PORTCbits.RC5 == 0) return '0';
  2761  0011DA  BA82               	btfsc	3970,5,c	;volatile
  2762  0011DC  D002               	goto	l280
  2763  0011DE  0E30               	movlw	48
  2764  0011E0  0012               	return	
  2765  0011E2                     l280:
  2766                           
  2767                           ;keypadCon.c: 60: if(PORTCbits.RC6 == 0) return '#';
  2768  0011E2  BC82               	btfsc	3970,6,c	;volatile
  2769  0011E4  D002               	goto	l281
  2770  0011E6  0E23               	movlw	35
  2771  0011E8  0012               	return	
  2772  0011EA                     l281:
  2773                           
  2774                           ;keypadCon.c: 61: if(PORTCbits.RC7 == 0) return 'D';
  2775  0011EA  BE82               	btfsc	3970,7,c	;volatile
  2776  0011EC  D002               	goto	l1071
  2777  0011EE  0E44               	movlw	68
  2778  0011F0  0012               	return	
  2779  0011F2                     l1071:
  2780                           
  2781                           ;keypadCon.c: 63: return 0xFF;
  2782  0011F2  0EFF               	movlw	255
  2783  0011F4  0012               	return	
  2784  0011F6                     __end_of_getKey:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           intcon	equ	0xFF2
  2791                           intcon2	equ	0xFF1
  2792                           intcon3	equ	0xFF0
  2793                           wreg	equ	0xFE8
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _luz *****************
  2797 ;; Defined at:
  2798 ;;		line 111 in file "mainCode.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;Total ram usage:       19 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		Interrupt level 1
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	intcodelo
  2827  000018                     __pintcodelo:
  2828                           	opt stack 0
  2829  000018                     _luz:
  2830                           	opt stack 26
  2831                           
  2832                           ;incstack = 0
  2833  000018  802E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2834  00001A  CFD8 F013          	movff	status,??_luz+2
  2835  00001E  CFE8 F014          	movff	wreg,??_luz+3
  2836  000022  CFE0 F015          	movff	bsr,??_luz+4
  2837  000026  CFFA F016          	movff	pclath,??_luz+5
  2838  00002A  CFFB F017          	movff	pclatu,??_luz+6
  2839  00002E  CFE9 F018          	movff	fsr0l,??_luz+7
  2840  000032  CFEA F019          	movff	fsr0h,??_luz+8
  2841  000036  CFE1 F01A          	movff	fsr1l,??_luz+9
  2842  00003A  CFE2 F01B          	movff	fsr1h,??_luz+10
  2843  00003E  CFD9 F01C          	movff	fsr2l,??_luz+11
  2844  000042  CFDA F01D          	movff	fsr2h,??_luz+12
  2845  000046  CFF3 F01E          	movff	prodl,??_luz+13
  2846  00004A  CFF4 F01F          	movff	prodh,??_luz+14
  2847  00004E  CFF6 F020          	movff	tblptrl,??_luz+15
  2848  000052  CFF7 F021          	movff	tblptrh,??_luz+16
  2849  000056  CFF8 F022          	movff	tblptru,??_luz+17
  2850  00005A  CFF5 F023          	movff	tablat,??_luz+18
  2851                           
  2852                           ;mainCode.c: 112: INTCON3bits.INT1IF = 0;
  2853  00005E  90F0               	bcf	intcon3,0,c	;volatile
  2854                           
  2855                           ;mainCode.c: 114: PORTAbits.RA5=1;
  2856  000060  8A80               	bsf	3968,5,c	;volatile
  2857                           
  2858                           ;mainCode.c: 115: _delay((unsigned long)((3000)*(8000000/4000.0)));
  2859  000062  0E1F               	movlw	31
  2860  000064  6E12               	movwf	(??_luz+1)& (0+255),c
  2861  000066  0E71               	movlw	113
  2862  000068  6E11               	movwf	??_luz& (0+255),c
  2863  00006A  0E1E               	movlw	30
  2864  00006C                     i1u71_27:
  2865  00006C  2EE8               	decfsz	wreg,f,c
  2866  00006E  D7FE               	bra	i1u71_27
  2867  000070  2E11               	decfsz	??_luz& (0+255),f,c
  2868  000072  D7FC               	bra	i1u71_27
  2869  000074  2E12               	decfsz	(??_luz+1)& (0+255),f,c
  2870  000076  D7FA               	bra	i1u71_27
  2871  000078  D000               	nop2	
  2872                           
  2873                           ;mainCode.c: 116: PORTAbits.RA5=0;
  2874  00007A  9A80               	bcf	3968,5,c	;volatile
  2875                           
  2876                           ;mainCode.c: 118: return;
  2877  00007C  C023  FFF5         	movff	??_luz+18,tablat
  2878  000080  C022  FFF8         	movff	??_luz+17,tblptru
  2879  000084  C021  FFF7         	movff	??_luz+16,tblptrh
  2880  000088  C020  FFF6         	movff	??_luz+15,tblptrl
  2881  00008C  C01F  FFF4         	movff	??_luz+14,prodh
  2882  000090  C01E  FFF3         	movff	??_luz+13,prodl
  2883  000094  C01D  FFDA         	movff	??_luz+12,fsr2h
  2884  000098  C01C  FFD9         	movff	??_luz+11,fsr2l
  2885  00009C  C01B  FFE2         	movff	??_luz+10,fsr1h
  2886  0000A0  C01A  FFE1         	movff	??_luz+9,fsr1l
  2887  0000A4  C019  FFEA         	movff	??_luz+8,fsr0h
  2888  0000A8  C018  FFE9         	movff	??_luz+7,fsr0l
  2889  0000AC  C017  FFFB         	movff	??_luz+6,pclatu
  2890  0000B0  C016  FFFA         	movff	??_luz+5,pclath
  2891  0000B4  C015  FFE0         	movff	??_luz+4,bsr
  2892  0000B8  C014  FFE8         	movff	??_luz+3,wreg
  2893  0000BC  C013  FFD8         	movff	??_luz+2,status
  2894  0000C0  902E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2895  0000C2  0010               	retfie	
  2896  0000C4                     __end_of_luz:
  2897                           	opt stack 0
  2898                           pclatu	equ	0xFFB
  2899                           pclath	equ	0xFFA
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           intcon2	equ	0xFF1
  2908                           intcon3	equ	0xFF0
  2909                           fsr0h	equ	0xFEA
  2910                           fsr0l	equ	0xFE9
  2911                           wreg	equ	0xFE8
  2912                           fsr1h	equ	0xFE2
  2913                           fsr1l	equ	0xFE1
  2914                           bsr	equ	0xFE0
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _backup *****************
  2920 ;; Defined at:
  2921 ;;		line 120 in file "mainCode.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:       16 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		Interrupt level 2
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	intcode
  2949  000008                     __pintcode:
  2950                           	opt stack 0
  2951  000008                     _backup:
  2952                           	opt stack 26
  2953                           
  2954                           ;incstack = 0
  2955  000008  822E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2956  00000A  ED86  F007         	call	int_func,f	;refresh shadow registers
  2957                           pclatu	equ	0xFFB
  2958                           pclath	equ	0xFFA
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           intcon	equ	0xFF2
  2966                           intcon2	equ	0xFF1
  2967                           intcon3	equ	0xFF0
  2968                           fsr0h	equ	0xFEA
  2969                           fsr0l	equ	0xFE9
  2970                           wreg	equ	0xFE8
  2971                           fsr1h	equ	0xFE2
  2972                           fsr1l	equ	0xFE1
  2973                           bsr	equ	0xFE0
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           status	equ	0xFD8
  2977                           
  2978                           	psect	intcode_body
  2979  000F0C                     __pintcode_body:
  2980                           	opt stack 26
  2981  000F0C                     int_func:
  2982                           	opt stack 26
  2983  000F0C  0006               	pop		; remove dummy address from shadow register refresh
  2984  000F0E  CFFA F003          	movff	pclath,??_backup+2
  2985  000F12  CFFB F004          	movff	pclatu,??_backup+3
  2986  000F16  CFE9 F005          	movff	fsr0l,??_backup+4
  2987  000F1A  CFEA F006          	movff	fsr0h,??_backup+5
  2988  000F1E  CFE1 F007          	movff	fsr1l,??_backup+6
  2989  000F22  CFE2 F008          	movff	fsr1h,??_backup+7
  2990  000F26  CFD9 F009          	movff	fsr2l,??_backup+8
  2991  000F2A  CFDA F00A          	movff	fsr2h,??_backup+9
  2992  000F2E  CFF3 F00B          	movff	prodl,??_backup+10
  2993  000F32  CFF4 F00C          	movff	prodh,??_backup+11
  2994  000F36  CFF6 F00D          	movff	tblptrl,??_backup+12
  2995  000F3A  CFF7 F00E          	movff	tblptrh,??_backup+13
  2996  000F3E  CFF8 F00F          	movff	tblptru,??_backup+14
  2997  000F42  CFF5 F010          	movff	tablat,??_backup+15
  2998                           
  2999                           ;mainCode.c: 121: INTCON3bits.INT2IF = 0;
  3000  000F46  92F0               	bcf	intcon3,1,c	;volatile
  3001                           
  3002                           ;mainCode.c: 122: PORTAbits.RA5=0;
  3003  000F48  9A80               	bcf	3968,5,c	;volatile
  3004                           
  3005                           ;mainCode.c: 124: PORTEbits.RE0=1;
  3006  000F4A  8084               	bsf	3972,0,c	;volatile
  3007                           
  3008                           ;mainCode.c: 125: _delay((unsigned long)((500)*(8000000/4000.0)));
  3009  000F4C  0E06               	movlw	6
  3010  000F4E  6E02               	movwf	(??_backup+1)& (0+255),c
  3011  000F50  0E13               	movlw	19
  3012  000F52  6E01               	movwf	??_backup& (0+255),c
  3013  000F54  0EAE               	movlw	174
  3014  000F56                     i2u72_47:
  3015  000F56  2EE8               	decfsz	wreg,f,c
  3016  000F58  D7FE               	bra	i2u72_47
  3017  000F5A  2E01               	decfsz	??_backup& (0+255),f,c
  3018  000F5C  D7FC               	bra	i2u72_47
  3019  000F5E  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3020  000F60  D7FA               	bra	i2u72_47
  3021                           
  3022                           ;mainCode.c: 126: PORTEbits.RE0=0;
  3023  000F62  9084               	bcf	3972,0,c	;volatile
  3024                           
  3025                           ;mainCode.c: 127: _delay((unsigned long)((500)*(8000000/4000.0)));
  3026  000F64  0E06               	movlw	6
  3027  000F66  6E02               	movwf	(??_backup+1)& (0+255),c
  3028  000F68  0E13               	movlw	19
  3029  000F6A  6E01               	movwf	??_backup& (0+255),c
  3030  000F6C  0EAE               	movlw	174
  3031  000F6E                     i2u73_47:
  3032  000F6E  2EE8               	decfsz	wreg,f,c
  3033  000F70  D7FE               	bra	i2u73_47
  3034  000F72  2E01               	decfsz	??_backup& (0+255),f,c
  3035  000F74  D7FC               	bra	i2u73_47
  3036  000F76  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3037  000F78  D7FA               	bra	i2u73_47
  3038                           
  3039                           ;mainCode.c: 128: PORTEbits.RE0=1;
  3040  000F7A  8084               	bsf	3972,0,c	;volatile
  3041                           
  3042                           ;mainCode.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
  3043  000F7C  0E06               	movlw	6
  3044  000F7E  6E02               	movwf	(??_backup+1)& (0+255),c
  3045  000F80  0E13               	movlw	19
  3046  000F82  6E01               	movwf	??_backup& (0+255),c
  3047  000F84  0EAE               	movlw	174
  3048  000F86                     i2u74_47:
  3049  000F86  2EE8               	decfsz	wreg,f,c
  3050  000F88  D7FE               	bra	i2u74_47
  3051  000F8A  2E01               	decfsz	??_backup& (0+255),f,c
  3052  000F8C  D7FC               	bra	i2u74_47
  3053  000F8E  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3054  000F90  D7FA               	bra	i2u74_47
  3055                           
  3056                           ;mainCode.c: 130: PORTEbits.RE0=0;
  3057  000F92  9084               	bcf	3972,0,c	;volatile
  3058                           
  3059                           ;mainCode.c: 131: _delay((unsigned long)((500)*(8000000/4000.0)));
  3060  000F94  0E06               	movlw	6
  3061  000F96  6E02               	movwf	(??_backup+1)& (0+255),c
  3062  000F98  0E13               	movlw	19
  3063  000F9A  6E01               	movwf	??_backup& (0+255),c
  3064  000F9C  0EAE               	movlw	174
  3065  000F9E                     i2u75_47:
  3066  000F9E  2EE8               	decfsz	wreg,f,c
  3067  000FA0  D7FE               	bra	i2u75_47
  3068  000FA2  2E01               	decfsz	??_backup& (0+255),f,c
  3069  000FA4  D7FC               	bra	i2u75_47
  3070  000FA6  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3071  000FA8  D7FA               	bra	i2u75_47
  3072                           
  3073                           ;mainCode.c: 132: PORTEbits.RE0=1;
  3074  000FAA  8084               	bsf	3972,0,c	;volatile
  3075                           
  3076                           ;mainCode.c: 133: _delay((unsigned long)((500)*(8000000/4000.0)));
  3077  000FAC  0E06               	movlw	6
  3078  000FAE  6E02               	movwf	(??_backup+1)& (0+255),c
  3079  000FB0  0E13               	movlw	19
  3080  000FB2  6E01               	movwf	??_backup& (0+255),c
  3081  000FB4  0EAE               	movlw	174
  3082  000FB6                     i2u76_47:
  3083  000FB6  2EE8               	decfsz	wreg,f,c
  3084  000FB8  D7FE               	bra	i2u76_47
  3085  000FBA  2E01               	decfsz	??_backup& (0+255),f,c
  3086  000FBC  D7FC               	bra	i2u76_47
  3087  000FBE  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3088  000FC0  D7FA               	bra	i2u76_47
  3089                           
  3090                           ;mainCode.c: 134: PORTEbits.RE0=0;
  3091  000FC2  9084               	bcf	3972,0,c	;volatile
  3092                           
  3093                           ;mainCode.c: 135: _delay((unsigned long)((500)*(8000000/4000.0)));
  3094  000FC4  0E06               	movlw	6
  3095  000FC6  6E02               	movwf	(??_backup+1)& (0+255),c
  3096  000FC8  0E13               	movlw	19
  3097  000FCA  6E01               	movwf	??_backup& (0+255),c
  3098  000FCC  0EAE               	movlw	174
  3099  000FCE                     i2u77_47:
  3100  000FCE  2EE8               	decfsz	wreg,f,c
  3101  000FD0  D7FE               	bra	i2u77_47
  3102  000FD2  2E01               	decfsz	??_backup& (0+255),f,c
  3103  000FD4  D7FC               	bra	i2u77_47
  3104  000FD6  2E02               	decfsz	(??_backup+1)& (0+255),f,c
  3105  000FD8  D7FA               	bra	i2u77_47
  3106                           
  3107                           ;mainCode.c: 136: return;
  3108  000FDA  C010  FFF5         	movff	??_backup+15,tablat
  3109  000FDE  C00F  FFF8         	movff	??_backup+14,tblptru
  3110  000FE2  C00E  FFF7         	movff	??_backup+13,tblptrh
  3111  000FE6  C00D  FFF6         	movff	??_backup+12,tblptrl
  3112  000FEA  C00C  FFF4         	movff	??_backup+11,prodh
  3113  000FEE  C00B  FFF3         	movff	??_backup+10,prodl
  3114  000FF2  C00A  FFDA         	movff	??_backup+9,fsr2h
  3115  000FF6  C009  FFD9         	movff	??_backup+8,fsr2l
  3116  000FFA  C008  FFE2         	movff	??_backup+7,fsr1h
  3117  000FFE  C007  FFE1         	movff	??_backup+6,fsr1l
  3118  001002  C006  FFEA         	movff	??_backup+5,fsr0h
  3119  001006  C005  FFE9         	movff	??_backup+4,fsr0l
  3120  00100A  C004  FFFB         	movff	??_backup+3,pclatu
  3121  00100E  C003  FFFA         	movff	??_backup+2,pclath
  3122  001012  922E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3123  001014  0011               	retfie		f
  3124  001016                     __end_of_backup:
  3125                           	opt stack 0
  3126                           pclatu	equ	0xFFB
  3127                           pclath	equ	0xFFA
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           intcon2	equ	0xFF1
  3136                           intcon3	equ	0xFF0
  3137                           fsr0h	equ	0xFEA
  3138                           fsr0l	equ	0xFE9
  3139                           wreg	equ	0xFE8
  3140                           fsr1h	equ	0xFE2
  3141                           fsr1l	equ	0xFE1
  3142                           bsr	equ	0xFE0
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           pclatu	equ	0xFFB
  3147                           pclath	equ	0xFFA
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           prodh	equ	0xFF4
  3153                           prodl	equ	0xFF3
  3154                           intcon	equ	0xFF2
  3155                           intcon2	equ	0xFF1
  3156                           intcon3	equ	0xFF0
  3157                           fsr0h	equ	0xFEA
  3158                           fsr0l	equ	0xFE9
  3159                           wreg	equ	0xFE8
  3160                           fsr1h	equ	0xFE2
  3161                           fsr1l	equ	0xFE1
  3162                           bsr	equ	0xFE0
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167                           	psect	rparam
  3168  0000                     pclatu	equ	0xFFB
  3169                           pclath	equ	0xFFA
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           intcon2	equ	0xFF1
  3178                           intcon3	equ	0xFF0
  3179                           fsr0h	equ	0xFEA
  3180                           fsr0l	equ	0xFE9
  3181                           wreg	equ	0xFE8
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           bsr	equ	0xFE0
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189                           	psect	temp
  3190  00002E                     btemp:
  3191                           	opt stack 0
  3192  00002E                     	ds	1
  3193  0000                     int$flags	set	btemp
  3194                           pclatu	equ	0xFFB
  3195                           pclath	equ	0xFFA
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           intcon	equ	0xFF2
  3203                           intcon2	equ	0xFF1
  3204                           intcon3	equ	0xFF0
  3205                           fsr0h	equ	0xFEA
  3206                           fsr0l	equ	0xFE9
  3207                           wreg	equ	0xFE8
  3208                           fsr1h	equ	0xFE2
  3209                           fsr1l	equ	0xFE1
  3210                           bsr	equ	0xFE0
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8


Data Sizes:
    Strings     218
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    display_string_LCD@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[14]), STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[16]), 
		 -> STR_12(CODE[13]), STR_11(CODE[10]), STR_10(CODE[12]), STR_9(CODE[14]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_profile
    _welcome->_display_string_LCD
    _setup_LCD->_command_LCD
    _profile->_writePassword
    _writePassword->_eeprom_w
    _menu->_readPassword
    _second_line_LCD->_command_LCD
    _first_line_LCD->_command_LCD
    _display_string_LCD->_display_LCD
    _clear_LCD->_command_LCD
    _checkPassword->_readPassword
    _readPassword->_eeprom_r
    _alarm->_obtainedKey
    _obtainedKey->_getKey

Critical Paths under _luz in COMRAM

    None.

Critical Paths under _backup in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _luz in BANK0

    None.

Critical Paths under _backup in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _luz in BANK1

    None.

Critical Paths under _backup in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _luz in BANK2

    None.

Critical Paths under _backup in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _luz in BANK3

    None.

Critical Paths under _backup in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _luz in BANK4

    None.

Critical Paths under _backup in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _luz in BANK5

    None.

Critical Paths under _backup in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _luz in BANK6

    None.

Critical Paths under _backup in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _luz in BANK7

    None.

Critical Paths under _backup in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _luz in BANK8

    None.

Critical Paths under _backup in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _luz in BANK9

    None.

Critical Paths under _backup in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _luz in BANK10

    None.

Critical Paths under _backup in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _luz in BANK11

    None.

Critical Paths under _backup in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _luz in BANK12

    None.

Critical Paths under _backup in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5561
                                             42 COMRAM     2     2      0
                              _alarm
                      _checkPassword
                          _clear_LCD
                        _display_LCD
                 _display_string_LCD
                               _menu
                            _profile
                            _pwmInit
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
                          _setup_LCD
                            _welcome
 ---------------------------------------------------------------------------------
 (1) _welcome                                              0     0      0    1084
                 _display_string_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _setup_LCD                                            2     2      0      15
                                             36 COMRAM     2     2      0
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _profile                                              2     2      0    1549
                                             40 COMRAM     2     2      0
                          _clear_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                          _ready_LCD
                    _second_line_LCD
                      _writePassword
 ---------------------------------------------------------------------------------
 (2) _writePassword                                        2     1      1     366
                                             38 COMRAM     2     1      1
                           _eeprom_w
                        _obtainedKey (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_w                                             3     0      3     194
                                             35 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    1327
                                             39 COMRAM     2     2      0
                          _clear_LCD
                              _close
                        _display_LCD
                 _display_string_LCD
                     _first_line_LCD
                        _obtainedKey
                               _open
                       _readPassword
                          _ready_LCD
                    _second_line_LCD
 ---------------------------------------------------------------------------------
 (1) _second_line_LCD                                      0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _first_line_LCD                                       0     0      0      15
                        _command_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _display_string_LCD                                   2     0      2    1084
                                             36 COMRAM     2     0      2
                        _display_LCD
                          _ready_LCD
 ---------------------------------------------------------------------------------
 (2) _ready_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            0     0      0      15
                        _command_LCD
 ---------------------------------------------------------------------------------
 (2) _command_LCD                                          1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0     274
                                             39 COMRAM     2     2      0
                        _obtainedKey
                       _readPassword
 ---------------------------------------------------------------------------------
 (1) _readPassword                                         2     2      0     153
                                             37 COMRAM     2     2      0
                           _eeprom_r
 ---------------------------------------------------------------------------------
 (2) _eeprom_r                                             2     0      2     108
                                             35 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _alarm                                                0     0      0      30
                        _obtainedKey
 ---------------------------------------------------------------------------------
 (2) _obtainedKey                                          1     1      0      30
                                             36 COMRAM     1     1      0
                             _getKey
                             _ground
 ---------------------------------------------------------------------------------
 (3) _ground                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getKey                                               1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _luz                                                 19    19      0       0
                                             16 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _backup                                              16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarm
     _obtainedKey
       _getKey
       _ground
   _checkPassword
     _obtainedKey
       _getKey
       _ground
     _readPassword
       _eeprom_r
   _clear_LCD
     _command_LCD
   _display_LCD
   _display_string_LCD
     _display_LCD
     _ready_LCD
   _menu
     _clear_LCD
       _command_LCD
     _close
     _display_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _open
     _readPassword
       _eeprom_r
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
   _profile
     _clear_LCD
       _command_LCD
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _first_line_LCD
       _command_LCD
       _ready_LCD
     _obtainedKey
       _getKey
       _ground
     _ready_LCD
     _second_line_LCD
       _command_LCD
       _ready_LCD
     _writePassword
       _eeprom_w
       _obtainedKey (ARG)
         _getKey
         _ground
   _pwmInit
   _readPassword
     _eeprom_r
   _ready_LCD
   _second_line_LCD
     _command_LCD
     _ready_LCD
   _setup_LCD
     _command_LCD
     _ready_LCD
   _welcome
     _display_string_LCD
       _display_LCD
       _ready_LCD
     _ready_LCD

 _luz (ROOT)

 _backup (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      2D       1       47.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      20        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May  8 20:16:43 2017

               ?_display_LCD 0001                           l88 0EAA        __end_of_checkPassword 12F6  
                         bsr 000FE0                          l123 1374                          l304 142C  
                        l216 1344                          l270 114A                          l271 116A  
                        l280 11E2                          l272 1172                          l281 11EA  
                        l273 117A                          l274 1182                          l266 1132  
                        l275 11A2                          l276 11AA                          l268 113A  
                        l277 11B2                          l269 1142                          l278 11BA  
                        l279 11DA                          _PR2 000FCB                          u607 0ECC  
                        u617 1280                          u707 11C8                          u627 129C  
                        u637 10FE                          u647 1378                          u657 1398  
                        u667 13B0                          u677 1120                          u687 1158  
                        u697 1190                          _luz 0018                          wreg 000FE8  
               __CFG_LVP$OFF 000000       display_string_LCD@data 0025                 __CFG_WDT$OFF 000000  
                       l1103 1354                         l1107 1360                         l1071 11F2  
                       l1425 126A                         l1419 124E                         l1429 12C2  
                       l1447 12EC                         l1439 12D8                         l1391 130E  
                       l1455 1016                         l1387 12FA                         l1491 10BC  
                       l1539 0E40                         l1477 107A                         l1549 0E76  
                       ?_luz 0001                         STR_1 0D71                         STR_2 0D62  
                       STR_3 0DAA                         STR_4 0D9C                         STR_5 0D52  
                       STR_6 0D42                         STR_7 0D32                         STR_8 0DC5  
                       STR_9 0D8E                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                       _flag 002D                         _main 0DDC                         _menu 1016  
                       _open 1468                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr2h 000FDA                         fsr0l 000FE9                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 002E                eeprom_w@value 0026  
                       prodh 000FF4                         prodl 000FF3            ??_second_line_LCD 0025  
                       start 00C4                __CFG_MCLRE$ON 000000                 command_LCD@x 0024  
               ___param_bank 000000                        ??_luz 0011                        ?_main 0001  
                      ?_menu 0001                        _EEADR 000FA9                        STR_10 0DC5  
                      STR_11 0DD1                        ?_open 0001                        STR_12 0DB8  
                      STR_13 0D22                        STR_14 0D01                        STR_15 0D12  
                      STR_16 0D80                        _CMCON 000FB4                        _T2CON 000FCA  
    __size_of_first_line_LCD 000C                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _alarm 142C  
                      _close 146E                 ?_obtainedKey 0001                        pclath 000FFA  
                      tablat 000FF5              __end_of_pwmInit 1408              __end_of_welcome 13F6  
            __end_of_profile 1274                        status 000FD8              __initialization 13D0  
               __end_of_main 0F0C         writePassword@address 0027                 __end_of_menu 1112  
               __end_of_open 146E                       ??_main 002B                       ??_menu 0028  
                     ??_open 0024                __activetblptr 000001                       ?_alarm 0001  
              ?_readPassword 0001                       ?_close 0001                       _ADCON1 000FC1  
                     _EEADRH 000FAA                       _EEDATA 000FA8                       _CCPR1L 000FBE  
                     _EECON2 000FA7                       _OSCCON 000FD3              eeprom_r@address 0024  
           __end_of_eeprom_r 13D0             __end_of_eeprom_w 134E                       _backup 0008  
            eeprom_w@address 0024         __size_of_command_LCD 0018                       _getKey 1112  
          readPassword@value 0027                       _ground 1456         __size_of_display_LCD 0018  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8               ??_readPassword 0026                    ??_pwmInit 0024  
                  ??_welcome 0027                    ??_profile 0029                   __accesstop 0060  
    __end_of__initialization 13D2              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
 __end_of_display_string_LCD 1326       __size_of_writePassword 0012               __pcstackCOMRAM 0001  
              __end_of_alarm 143E                __end_of_close 1474           __size_of_clear_LCD 0008  
             _first_line_LCD 144A              _second_line_LCD 143E                      ??_alarm 0026  
                    ??_close 0024         __size_of_obtainedKey 0020           __size_of_ready_LCD 001C  
                    ?_backup 0001                      ?_getKey 0001                      _CCP1CON 000FBD  
                    ?_ground 0001       __end_of_first_line_LCD 1456           __size_of_setup_LCD 004A  
              _writePassword 1408                      i1u71_27 006C                      i2u72_47 0F56  
                    i2u73_47 0F6E                      i2u74_47 0F86                      i2u75_47 0F9E  
                    i2u76_47 0FB6                      i2u77_47 0FCE                    ?_eeprom_r 0024  
                  ?_eeprom_w 0024            __end_of_clear_LCD 1468       __size_of_checkPassword 0038  
                    __Hparam 0000                      __Lparam 0000         __end_of_readPassword 142C  
            __size_of_backup 100E              __size_of_getKey 00E4                 __psmallconst 0D00  
                    __pcinit 13D0              ?_first_line_LCD 0001                      __ramtop 0D00  
            __size_of_ground 000A                      __ptext0 0DDC                      __ptext1 13E4  
                    __ptext2 1274                      __ptext3 13F6                      __ptext4 11F6  
                    __ptext5 1408                      __ptext6 1326                      __ptext7 1016  
                    __ptext8 143E                      __ptext9 1468      __end_of_second_line_LCD 144A  
             ?_writePassword 0027                 __size_of_luz 00AC            __end_of_ready_LCD 138A  
  obtainedKey@key_presionada 0025                      _pwmInit 13F6                      _welcome 13E4  
                    _profile 11F6                   ??_eeprom_r 0026                   ??_eeprom_w 0027  
             __pintcode_body 0F0C         end_of_initialization 13D2                      int_func 0F0C  
          __end_of_setup_LCD 12BE               checkPassword@i 0029                _checkPassword 12BE  
                  _PORTAbits 000F80                    _PORTBbits 000F81                    _PORTCbits 000F82  
                  _PORTDbits 000F83                    _PORTEbits 000F84                ??_command_LCD 0024  
              ??_display_LCD 0024               __end_of_backup 1016               ?_checkPassword 0001  
             __end_of_getKey 11F6              ??_writePassword 0028               __end_of_ground 1460  
           ?_second_line_LCD 0001           _display_string_LCD 12F6          start_initialization 13D0  
                __end_of_luz 00C4          ?_display_string_LCD 0025             __CFG_OSC$IRCIO67 000000  
      __size_of_readPassword 0012         ??_display_string_LCD 0027                     ??_backup 0001  
                   ??_getKey 0024                     ??_ground 0024          __end_of_command_LCD 13BA  
        __end_of_display_LCD 13A2                  __pbssCOMRAM 002D                 _readPassword 141A  
              ??_obtainedKey 0025            __size_of_eeprom_r 0016            __size_of_eeprom_w 0028  
                  _clear_LCD 1460             ??_first_line_LCD 0025                    __pintcode 0008  
            ??_checkPassword 0028                  __pintcodelo 0018                  __smallconst 0D00  
                   ?_pwmInit 0001                     ?_welcome 0001                     ?_profile 0001  
             __size_of_alarm 0012               __size_of_close 0006                    _ready_LCD 136E  
                   _LATCbits 000F8B                     _LATEbits 000F8D          __end_of_obtainedKey 136E  
                 ?_clear_LCD 0001                  _command_LCD 13A2                     _RCONbits 000FD0  
                  _setup_LCD 1274                  _display_LCD 138A            checkPassword@pass 0028  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0                   ?_ready_LCD 0001  
         writePassword@value 0028                   _EECON1bits 000FA6                     __Hrparam 0000  
            display_LCD@data 0024                     __Lrparam 0000                 __Lsmallconst 0D00  
                 ?_setup_LCD 0001          readPassword@address 0026                     __ptext10 144A  
                   __ptext11 12F6                     __ptext20 142C                     __ptext12 136E  
                   __ptext21 134E                     __ptext13 138A                     __ptext22 1456  
                   __ptext14 146E                     __ptext23 1112                     __ptext15 1460  
                   __ptext16 13A2                     __ptext17 12BE                     __ptext18 141A  
                   __ptext19 13BA             __size_of_pwmInit 0012                     _eeprom_r 13BA  
                   _eeprom_w 1326             __size_of_welcome 0012             __size_of_profile 007E  
                _obtainedKey 134E                __size_of_main 0130                __size_of_menu 00FC  
              __size_of_open 0006                  ??_clear_LCD 0025                   _CVRCONbits 000FB5  
                   int$flags 002E        __end_of_writePassword 141A                   _INTCONbits 000FF2  
   __size_of_second_line_LCD 000C                  ??_ready_LCD 0024                     intlevel1 0000  
                   intlevel2 0000  __size_of_display_string_LCD 0030                  ??_setup_LCD 0025  
                   profile@i 0029                 ?_command_LCD 0001  
